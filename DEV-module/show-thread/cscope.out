cscope 15 $HOME/GIT/wgs/show-thread               0000003762
	@show-thread.c

1 
	~<löux/moduÀ.h
>

2 
	~<löux/kî√l.h
>

3 
	~<löux/sched.h
>

4 
	~<löux/¥oc_fs.h
>

5 
	~<löux/£q_fûe.h
>

7 
	#FILENAME
 "osexp"

8 

	)

9 
myshow
(
£q_fûe
 *,*);

10 
my›í
(
öode
 *,
fûe
 *);

13 c⁄° 
fûe_›î©i⁄s
 
	gmy›s
 = {

14 .
ow√r
 = 
THIS_MODULE
,

15 .
	g›í
 = 
my›í
,

16 .
	gªad
 = 
£q_ªad
,

17 .
	gªÀa£
 = 
sögÀ_ªÀa£


20 
	$my›í
(
öode
 *öode,
fûe
 *file){

21 
	`sögÀ_›í
(
fûe
,
myshow
,
NULL
);

23 
	}
}

25 
	$öô_¥oc
(){

26 
¥oc_dú_íåy
 * 
myfûe
;

27 
myfûe
 = 
	`¥oc_¸óã
(
FILENAME
,0444,
NULL
,&
my›s
);

28 if(
myfûe
 =
NULL
)

29  -
ENOMEM
;

31 
	}
}

33 
	$ªmove_¥oc
(){

34 
	`ªmove_¥oc_íåy
(
FILENAME
,
NULL
);

35 
	`¥ötk
(
KERN_INFO
 "[m]Öro¯fûe:%†ªmoved\n",
FILENAME
);

36 
	}
}

39 
	$myshow
(
£q_fûe
 *
fûe
,*
v
){

40 
num_ru¬ög
 = 0;

41 
num_öãºu±ibÀ
 = 0;

42 
num_unöãºu±ibÀ
 = 0;

43 
num_zombõ
 = 0;

44 
num_°›≥d
 = 0;

45 
num_åa˚d
 = 0;

46 
num_dód
 = 0;

47 
num_unknown
 = 0;

49 
num_tŸÆ
 = 0;

51 
t_exô_°©e
;

52 
t_°©e
;

53 
èsk_°ru˘
 *
p
;

56 
	`£q_¥ötf
(
fûe
,"[m] AllÖrocesses' info:\n");

57 
p
=&
öô_èsk
;’=
	`√xt_èsk
(p))!=&init_task;){

59 
	`£q_¥ötf
(
fûe
,"[m] Name:%†Pid:%d Sèã:%ld P¨Name:%s\n",
p
->
comm
,p->
pid
,p->
°©e
,p->
ªÆ_∑ª¡
->comm);

60 
num_tŸÆ
++;

62 
t_°©e
 = 
p
->
°©e
;

63 
t_exô_°©e
 = 
p
->
exô_°©e
;

65 if(
t_exô_°©e
!=0){

66 
t_exô_°©e
){

67 
EXIT_ZOMBIE
:

68 
num_zombõ
++;

70 
EXIT_DEAD
:

71 
num_dód
++;

77 
t_°©e
){

78 
TASK_RUNNING
:

79 
num_ru¬ög
++;

81 
TASK_INTERRUPTIBLE
:

82 
num_öãºu±ibÀ
++;

84 
TASK_UNINTERRUPTIBLE
:

85 
num_unöãºu±ibÀ
++;

87 
TASK_STOPPED
:

88 
num_°›≥d
++;

90 
TASK_TRACED
:

91 
num_åa˚d
++;

94 
num_unknown
++;

109 
	`£q_¥ötf
(
fûe
,"[m]ÅŸÆÅasks: %10d\n",
num_tŸÆ
);

110 
	`£q_¥ötf
(
fûe
,"[m] TASK_RUNNING: %10d\n",
num_ru¬ög
);

111 
	`£q_¥ötf
(
fûe
,"[m] TASK_INTERRUPTIBLE: %10d\n",
num_öãºu±ibÀ
);

112 
	`£q_¥ötf
(
fûe
,"[m] TASK_UNINTERRUPTIBLE: %10d\n",
num_unöãºu±ibÀ
);

113 
	`£q_¥ötf
(
fûe
,"[m] TASK_TRACED: %10d\n",
num_°›≥d
);

114 
	`£q_¥ötf
(
fûe
,"[m] TASK_TRACED: %10d\n",
num_°›≥d
);

115 
	`£q_¥ötf
(
fûe
,"[m] EXIT_ZOMBIE: %10d\n",
num_zombõ
);

116 
	`£q_¥ötf
(
fûe
,"[m] EXIT_DEAD: %10d\n",
num_dód
);

117 
	`£q_¥ötf
(
fûe
,"[m] UNKNOWN: %10d\n",
num_unknown
);

120 
	}
}

122 
	$öô_moduÀ
(){

123 
	`¥ötk
(
KERN_INFO
 "[m]Éxp_process started\n");

124  
	`öô_¥oc
();

125 
	}
}

127 
	$˛ónup_moduÀ
(){

128 
	`ªmove_¥oc
();

129 
	`¥ötk
(
KERN_INFO
 "[m]Éxp_process finished\n");

130 
	}
}

132 
MODULE_LICENSE
("GPL");

	@show-thread.mod.c

1 
	~<löux/moduÀ.h
>

2 
	~<löux/vîmagic.h
>

3 
	~<löux/compûî.h
>

5 
MODULE_INFO
(
vîmagic
, 
VERMAGIC_STRING
);

7 
__visibÀ
 
moduÀ
 
__this_moduÀ


8 
__©åibuã__
((
£˘i⁄
(".gnu.linkonce.this_module"))) = {

9 .
«me
 = 
KBUILD_MODNAME
,

10 .
	göô
 = 
öô_moduÀ
,

11 #ifde‡
CONFIG_MODULE_UNLOAD


12 .
	gexô
 = 
˛ónup_moduÀ
,

14 .
	g¨ch
 = 
MODULE_ARCH_INIT
,

17 c⁄° 
modvîsi⁄_öfo
 
	g____vîsi⁄s
[]

18 
__u£d


19 
__©åibuã__
((
£˘i⁄
("__versions"))) = {

20 { 0x2ab9dba5, 
__VMLINUX_SYMBOL_STR
(
moduÀ_œyout
) },

21 { 0x55b1bd11, 
__VMLINUX_SYMBOL_STR
(
sögÀ_ªÀa£
) },

22 { 0xa692f01a, 
__VMLINUX_SYMBOL_STR
(
£q_ªad
) },

23 { 0x27e1a049, 
__VMLINUX_SYMBOL_STR
(
¥ötk
) },

24 { 0xd791cc7, 
__VMLINUX_SYMBOL_STR
(
ªmove_¥oc_íåy
) },

25 { 0x308992c, 
__VMLINUX_SYMBOL_STR
(
¥oc_¸óã_d©a
) },

26 { 0x91831d70, 
__VMLINUX_SYMBOL_STR
(
£q_¥ötf
) },

27 { 0xc5965b´, 
__VMLINUX_SYMBOL_STR
(
öô_èsk
) },

28 { 0x5e01d149, 
__VMLINUX_SYMBOL_STR
(
sögÀ_›í
) },

29 { 0xbdfb6dbb, 
__VMLINUX_SYMBOL_STR
(
__„¡ry__
) },

32 c⁄° 
	g__moduÀ_dïíds
[]

33 
__u£d


34 
__©åibuã__
((
£˘i⁄
(".modinfo"))) =

	@
1
.
0
2
32
show-thread.c
show-thread.mod.c
