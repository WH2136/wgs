cscope 15 $HOME/Git/wgs/Open-source/Micrium/Software/uCOS-III               0000272044
	@Cfg/Template/os_app_hooks.c

33 
	#MICRIUM_SOURCE


	)

34 
	~<os.h
>

35 
	~<os_≠p_hooks.h
>

50 
	$Aµ_OS_SëAŒHooks
 ()

52 #i‡
OS_CFG_APP_HOOKS_EN
 > 0u

53 
	`CPU_SR_ALLOC
();

56 
	`CPU_CRITICAL_ENTER
();

57 
OS_AµTaskCª©eHookPå
 = 
Aµ_OS_TaskCª©eHook
;

58 
OS_AµTaskDñHookPå
 = 
Aµ_OS_TaskDñHook
;

59 
OS_AµTaskRëu∫HookPå
 = 
Aµ_OS_TaskRëu∫Hook
;

61 
OS_AµIdÀTaskHookPå
 = 
Aµ_OS_IdÀTaskHook
;

62 
OS_AµSètTaskHookPå
 = 
Aµ_OS_SètTaskHook
;

63 
OS_AµTaskSwHookPå
 = 
Aµ_OS_TaskSwHook
;

64 
OS_AµTimeTickHookPå
 = 
Aµ_OS_TimeTickHook
;

65 
	`CPU_CRITICAL_EXIT
();

67 
	}
}

82 
	$Aµ_OS_CÃAŒHooks
 ()

84 #i‡
OS_CFG_APP_HOOKS_EN
 > 0u

85 
	`CPU_SR_ALLOC
();

88 
	`CPU_CRITICAL_ENTER
();

89 
OS_AµTaskCª©eHookPå
 = (
OS_APP_HOOK_TCB
)0;

90 
OS_AµTaskDñHookPå
 = (
OS_APP_HOOK_TCB
)0;

91 
OS_AµTaskRëu∫HookPå
 = (
OS_APP_HOOK_TCB
)0;

93 
OS_AµIdÀTaskHookPå
 = (
OS_APP_HOOK_VOID
)0;

94 
OS_AµSètTaskHookPå
 = (
OS_APP_HOOK_VOID
)0;

95 
OS_AµTaskSwHookPå
 = (
OS_APP_HOOK_VOID
)0;

96 
OS_AµTimeTickHookPå
 = (
OS_APP_HOOK_VOID
)0;

97 
	`CPU_CRITICAL_EXIT
();

99 
	}
}

114 
	$Aµ_OS_TaskCª©eHook
 (
OS_TCB
 *
p_tcb
)

116 ()&
p_tcb
;

117 
	}
}

132 
	$Aµ_OS_TaskDñHook
 (
OS_TCB
 *
p_tcb
)

134 ()&
p_tcb
;

135 
	}
}

151 
	$Aµ_OS_TaskRëu∫Hook
 (
OS_TCB
 *
p_tcb
)

153 ()&
p_tcb
;

154 
	}
}

170 
	$Aµ_OS_IdÀTaskHook
 ()

173 
	}
}

188 
	$Aµ_OS_InôHook
 ()

191 
	}
}

207 
	$Aµ_OS_SètTaskHook
 ()

210 
	}
}

229 
	$Aµ_OS_TaskSwHook
 ()

232 
	}
}

247 
	$Aµ_OS_TimeTickHook
 ()

250 
	}
}

	@Cfg/Template/os_app_hooks.h

33 #i‚de‡ 
OS_APP_HOOKS_H


34 
	#OS_APP_HOOKS_H


	)

37 #ifde‡ 
OS_APP_HOOKS_H_GLOBALS


38 
	#OS_APP_HOOKS_H_EXT


	)

40 
	#OS_APP_HOOKS_H_EXT
 

	)

49 
	~<os.h
>

57 
Aµ_OS_SëAŒHooks
 ();

58 
Aµ_OS_CÃAŒHooks
 ();

62 
Aµ_OS_TaskCª©eHook
(
OS_TCB
 *
p_tcb
);

63 
Aµ_OS_TaskDñHook
 (
OS_TCB
 *
p_tcb
);

64 
Aµ_OS_TaskRëu∫Hook
(
OS_TCB
 *
p_tcb
);

66 
Aµ_OS_IdÀTaskHook
 ();

67 
Aµ_OS_InôHook
 ();

68 
Aµ_OS_SètTaskHook
 ();

69 
Aµ_OS_TaskSwHook
 ();

70 
Aµ_OS_TimeTickHook
 ();

	@Cfg/Template/os_cfg.h

33 #i‚de‡
OS_CFG_H


34 
	#OS_CFG_H


	)

38 
	#OS_CFG_APP_HOOKS_EN
 1u

	)

39 
	#OS_CFG_ARG_CHK_EN
 1u

	)

40 
	#OS_CFG_CALLED_FROM_ISR_CHK_EN
 1u

	)

41 
	#OS_CFG_DBG_EN
 1u

	)

42 
	#OS_CFG_ISR_POST_DEFERRED_EN
 0u

	)

43 
	#OS_CFG_OBJ_TYPE_CHK_EN
 1u

	)

44 
	#OS_CFG_TS_EN
 1u

	)

46 
	#OS_CFG_PEND_MULTI_EN
 1u

	)

48 
	#OS_CFG_PRIO_MAX
 32u

	)

50 
	#OS_CFG_SCHED_LOCK_TIME_MEAS_EN
 1u

	)

51 
	#OS_CFG_SCHED_ROUND_ROBIN_EN
 1u

	)

52 
	#OS_CFG_STK_SIZE_MIN
 64u

	)

56 
	#OS_CFG_FLAG_EN
 1u

	)

57 
	#OS_CFG_FLAG_DEL_EN
 0u

	)

58 
	#OS_CFG_FLAG_MODE_CLR_EN
 0u

	)

59 
	#OS_CFG_FLAG_PEND_ABORT_EN
 0u

	)

63 
	#OS_CFG_MEM_EN
 1u

	)

67 
	#OS_CFG_MUTEX_EN
 1u

	)

68 
	#OS_CFG_MUTEX_DEL_EN
 0u

	)

69 
	#OS_CFG_MUTEX_PEND_ABORT_EN
 0u

	)

73 
	#OS_CFG_Q_EN
 1u

	)

74 
	#OS_CFG_Q_DEL_EN
 0u

	)

75 
	#OS_CFG_Q_FLUSH_EN
 0u

	)

76 
	#OS_CFG_Q_PEND_ABORT_EN
 1u

	)

80 
	#OS_CFG_SEM_EN
 1u

	)

81 
	#OS_CFG_SEM_DEL_EN
 0u

	)

82 
	#OS_CFG_SEM_PEND_ABORT_EN
 1u

	)

83 
	#OS_CFG_SEM_SET_EN
 1u

	)

87 
	#OS_CFG_STAT_TASK_EN
 1u

	)

88 
	#OS_CFG_STAT_TASK_STK_CHK_EN
 1u

	)

90 
	#OS_CFG_TASK_CHANGE_PRIO_EN
 1u

	)

91 
	#OS_CFG_TASK_DEL_EN
 0u

	)

92 
	#OS_CFG_TASK_Q_EN
 1u

	)

93 
	#OS_CFG_TASK_Q_PEND_ABORT_EN
 0u

	)

94 
	#OS_CFG_TASK_PROFILE_EN
 1u

	)

95 
	#OS_CFG_TASK_REG_TBL_SIZE
 1u

	)

96 
	#OS_CFG_TASK_SEM_PEND_ABORT_EN
 1u

	)

97 
	#OS_CFG_TASK_SUSPEND_EN
 1u

	)

101 
	#OS_CFG_TIME_DLY_HMSM_EN
 1u

	)

102 
	#OS_CFG_TIME_DLY_RESUME_EN
 0u

	)

106 
	#OS_CFG_TLS_TBL_SIZE
 0u

	)

110 
	#OS_CFG_TMR_EN
 1u

	)

111 
	#OS_CFG_TMR_DEL_EN
 0u

	)

	@Cfg/Template/os_cfg_app.h

33 #i‚de‡
OS_CFG_APP_H


34 
	#OS_CFG_APP_H


	)

43 
	#OS_CFG_MSG_POOL_SIZE
 100u

	)

44 
	#OS_CFG_ISR_STK_SIZE
 128u

	)

45 
	#OS_CFG_TASK_STK_LIMIT_PCT_EMPTY
 10u

	)

49 
	#OS_CFG_IDLE_TASK_STK_SIZE
 64u

	)

53 
	#OS_CFG_INT_Q_SIZE
 10u

	)

54 
	#OS_CFG_INT_Q_TASK_STK_SIZE
 128u

	)

58 
	#OS_CFG_STAT_TASK_PRIO
 11u

	)

59 
	#OS_CFG_STAT_TASK_RATE_HZ
 10u

	)

60 
	#OS_CFG_STAT_TASK_STK_SIZE
 128u

	)

64 
	#OS_CFG_TICK_RATE_HZ
 1000u

	)

65 
	#OS_CFG_TICK_TASK_PRIO
 10u

	)

66 
	#OS_CFG_TICK_TASK_STK_SIZE
 128u

	)

67 
	#OS_CFG_TICK_WHEEL_SIZE
 17u

	)

71 
	#OS_CFG_TMR_TASK_PRIO
 11u

	)

72 
	#OS_CFG_TMR_TASK_RATE_HZ
 10u

	)

73 
	#OS_CFG_TMR_TASK_STK_SIZE
 128u

	)

74 
	#OS_CFG_TMR_WHEEL_SIZE
 17u

	)

	@Source/os.h

36 #i‚de‡ 
OS_H


37 
	#OS_H


	)

45 
	#OS_VERSION
 30300u

	)

53 #ifde‡
__˝lu•lus


59 
	~<os_cfg.h
>

60 
	~<˝u.h
>

61 
	~<˝u_c‹e.h
>

62 
	~<lib_def.h
>

63 
	~<os_ty≥.h
>

64 
	~<os_˝u.h
>

74 #i‡ 
OS_CFG_SCHED_LOCK_TIME_MEAS_EN
 > 0u && 
deföed
(
CPU_CFG_INT_DIS_MEAS_EN
)

75 
	#OS_SCHED_LOCK_TIME_MEAS_START
(Ë
	`OS_SchedLockTimeMósSèπ
()

	)

77 
	#OS_SCHED_LOCK_TIME_MEAS_START
()

	)

81 #i‡ 
OS_CFG_SCHED_LOCK_TIME_MEAS_EN
 > 0u && 
deföed
(
CPU_CFG_INT_DIS_MEAS_EN
)

82 
	#OS_SCHED_LOCK_TIME_MEAS_STOP
(Ë
	`OS_SchedLockTimeMósSt›
()

	)

84 
	#OS_SCHED_LOCK_TIME_MEAS_STOP
()

	)

87 #i‡
OS_CFG_ISR_POST_DEFERRED_EN
 > 0u

89 
	#OS_CRITICAL_ENTER
(Ë\

	)

91 
CPU_CRITICAL_ENTER
(); \

92 
OSSchedLockNe°ögCå
++; \

93 i‡(
OSSchedLockNe°ögCå
 == 1u) { \

94 
OS_SCHED_LOCK_TIME_MEAS_START
(); \

96 
CPU_CRITICAL_EXIT
(); \

99 
	#OS_CRITICAL_ENTER_CPU_CRITICAL_EXIT
(Ë\

	)

101 
OSSchedLockNe°ögCå
++; \

103 i‡(
OSSchedLockNe°ögCå
 == 1u) { \

104 
OS_SCHED_LOCK_TIME_MEAS_START
(); \

106 
CPU_CRITICAL_EXIT
(); \

110 
	#OS_CRITICAL_EXIT
(Ë\

	)

112 
CPU_CRITICAL_ENTER
(); \

113 
OSSchedLockNe°ögCå
--; \

114 i‡(
OSSchedLockNe°ögCå
 =(
OS_NESTING_CTR
)0) { \

115 
OS_SCHED_LOCK_TIME_MEAS_STOP
(); \

116 i‡(
OSI¡QNbrE¡rõs
 > (
OS_OBJ_QTY
)0) { \

117 
CPU_CRITICAL_EXIT
(); \

118 
OS_Sched0
(); \

120 
CPU_CRITICAL_EXIT
(); \

123 
CPU_CRITICAL_EXIT
(); \

127 
	#OS_CRITICAL_EXIT_NO_SCHED
(Ë\

	)

129 
CPU_CRITICAL_ENTER
(); \

130 
OSSchedLockNe°ögCå
--; \

131 i‡(
OSSchedLockNe°ögCå
 =(
OS_NESTING_CTR
)0) { \

132 
OS_SCHED_LOCK_TIME_MEAS_STOP
(); \

134 
CPU_CRITICAL_EXIT
(); \

141 
	#OS_CRITICAL_ENTER
(Ë
	`CPU_CRITICAL_ENTER
()

	)

143 
	#OS_CRITICAL_ENTER_CPU_CRITICAL_EXIT
()

	)

145 
	#OS_CRITICAL_EXIT
(Ë
	`CPU_CRITICAL_EXIT
()

	)

147 
	#OS_CRITICAL_EXIT_NO_SCHED
(Ë
	`CPU_CRITICAL_EXIT
()

	)

157 #ifde‡ 
OS_GLOBALS


158 
	#OS_EXT


	)

160 
	#OS_EXT
 

	)

164 
	#OS_PRIO_TBL_SIZE
 (((
OS_CFG_PRIO_MAX
 - 1uË/ 
DEF_INT_CPU_NBR_BITS
Ë+ 1u)

	)

166 
	#OS_MSG_EN
 (((
OS_CFG_TASK_Q_EN
 > 0uË|| (
OS_CFG_Q_EN
 > 0u)Ë? 1u : 0u)

	)

183 
	#OS_STATE_OS_STOPPED
 (
OS_STATE
)(0u)

	)

184 
	#OS_STATE_OS_RUNNING
 (
OS_STATE
)(1u)

	)

186 
	#OS_STATE_NOT_RDY
 (
CPU_BOOLEAN
)(0u)

	)

187 
	#OS_STATE_RDY
 (
CPU_BOOLEAN
)(1u)

	)

191 
	#OS_TASK_STATE_BIT_DLY
 (
OS_STATE
)(0x01uË

	)

193 
	#OS_TASK_STATE_BIT_PEND
 (
OS_STATE
)(0x02uË

	)

195 
	#OS_TASK_STATE_BIT_SUSPENDED
 (
OS_STATE
)(0x04uË

	)

199 
	#OS_TASK_STATE_RDY
 (
OS_STATE
)–0uË

	)

200 
	#OS_TASK_STATE_DLY
 (
OS_STATE
)–1uË

	)

201 
	#OS_TASK_STATE_PEND
 (
OS_STATE
)–2uË

	)

202 
	#OS_TASK_STATE_PEND_TIMEOUT
 (
OS_STATE
)–3uË

	)

203 
	#OS_TASK_STATE_SUSPENDED
 (
OS_STATE
)–4uË

	)

204 
	#OS_TASK_STATE_DLY_SUSPENDED
 (
OS_STATE
)–5uË

	)

205 
	#OS_TASK_STATE_PEND_SUSPENDED
 (
OS_STATE
)–6uË

	)

206 
	#OS_TASK_STATE_PEND_TIMEOUT_SUSPENDED
 (
OS_STATE
)–7uË

	)

207 
	#OS_TASK_STATE_DEL
 (
OS_STATE
)(255u)

	)

210 
	#OS_TASK_PEND_ON_NOTHING
 (
OS_STATE
)–0uË

	)

211 
	#OS_TASK_PEND_ON_FLAG
 (
OS_STATE
)–1uË

	)

212 
	#OS_TASK_PEND_ON_TASK_Q
 (
OS_STATE
)–2uË

	)

213 
	#OS_TASK_PEND_ON_MULTI
 (
OS_STATE
)–3uË

	)

214 
	#OS_TASK_PEND_ON_MUTEX
 (
OS_STATE
)–4uË

	)

215 
	#OS_TASK_PEND_ON_Q
 (
OS_STATE
)–5uË

	)

216 
	#OS_TASK_PEND_ON_SEM
 (
OS_STATE
)–6uË

	)

217 
	#OS_TASK_PEND_ON_TASK_SEM
 (
OS_STATE
)–7uË

	)

226 
	#OS_STATUS_PEND_OK
 (
OS_STATUS
)–0uË

	)

227 
	#OS_STATUS_PEND_ABORT
 (
OS_STATUS
)–1uË

	)

228 
	#OS_STATUS_PEND_DEL
 (
OS_STATUS
)–2uË

	)

229 
	#OS_STATUS_PEND_TIMEOUT
 (
OS_STATUS
)–3uË

	)

241 
	#OS_OBJ_TYPE_NONE
 (
OS_OBJ_TYPE
)
	`CPU_TYPE_CREATE
('N', 'O', 'N', 'E')

	)

242 
	#OS_OBJ_TYPE_FLAG
 (
OS_OBJ_TYPE
)
	`CPU_TYPE_CREATE
('F', 'L', 'A', 'G')

	)

243 
	#OS_OBJ_TYPE_MEM
 (
OS_OBJ_TYPE
)
	`CPU_TYPE_CREATE
('M', 'E', 'M', ' ')

	)

244 
	#OS_OBJ_TYPE_MUTEX
 (
OS_OBJ_TYPE
)
	`CPU_TYPE_CREATE
('M', 'U', 'T', 'X')

	)

245 
	#OS_OBJ_TYPE_Q
 (
OS_OBJ_TYPE
)
	`CPU_TYPE_CREATE
('Q', 'U', 'E', 'U')

	)

246 
	#OS_OBJ_TYPE_SEM
 (
OS_OBJ_TYPE
)
	`CPU_TYPE_CREATE
('S', 'E', 'M', 'A')

	)

247 
	#OS_OBJ_TYPE_TASK_MSG
 (
OS_OBJ_TYPE
)
	`CPU_TYPE_CREATE
('T', 'M', 'S', 'G')

	)

248 
	#OS_OBJ_TYPE_TASK_RESUME
 (
OS_OBJ_TYPE
)
	`CPU_TYPE_CREATE
('T', 'R', 'E', 'S')

	)

249 
	#OS_OBJ_TYPE_TASK_SIGNAL
 (
OS_OBJ_TYPE
)
	`CPU_TYPE_CREATE
('T', 'S', 'I', 'G')

	)

250 
	#OS_OBJ_TYPE_TASK_SUSPEND
 (
OS_OBJ_TYPE
)
	`CPU_TYPE_CREATE
('T', 'S', 'U', 'S')

	)

251 
	#OS_OBJ_TYPE_TICK
 (
OS_OBJ_TYPE
)
	`CPU_TYPE_CREATE
('T', 'I', 'C', 'K')

	)

252 
	#OS_OBJ_TYPE_TMR
 (
OS_OBJ_TYPE
)
	`CPU_TYPE_CREATE
('T', 'M', 'R', ' ')

	)

260 
	#OS_OPT_NONE
 (
OS_OPT
)(0x0000u)

	)

268 
	#OS_OPT_DEL_NO_PEND
 (
OS_OPT
)(0x0000u)

	)

269 
	#OS_OPT_DEL_ALWAYS
 (
OS_OPT
)(0x0001u)

	)

277 
	#OS_OPT_PEND_FLAG_MASK
 (
OS_OPT
)(0x000Fu)

	)

278 
	#OS_OPT_PEND_FLAG_CLR_ALL
 (
OS_OPT
)(0x0001uË

	)

279 
	#OS_OPT_PEND_FLAG_CLR_AND
 (
OS_OPT
)(0x0001u)

	)

281 
	#OS_OPT_PEND_FLAG_CLR_ANY
 (
OS_OPT
)(0x0002uË

	)

282 
	#OS_OPT_PEND_FLAG_CLR_OR
 (
OS_OPT
)(0x0002u)

	)

284 
	#OS_OPT_PEND_FLAG_SET_ALL
 (
OS_OPT
)(0x0004uË

	)

285 
	#OS_OPT_PEND_FLAG_SET_AND
 (
OS_OPT
)(0x0004u)

	)

287 
	#OS_OPT_PEND_FLAG_SET_ANY
 (
OS_OPT
)(0x0008uË

	)

288 
	#OS_OPT_PEND_FLAG_SET_OR
 (
OS_OPT
)(0x0008u)

	)

290 
	#OS_OPT_PEND_FLAG_CONSUME
 (
OS_OPT
)(0x0100uË

	)

293 
	#OS_OPT_PEND_BLOCKING
 (
OS_OPT
)(0x0000u)

	)

294 
	#OS_OPT_PEND_NON_BLOCKING
 (
OS_OPT
)(0x8000u)

	)

302 
	#OS_OPT_PEND_ABORT_1
 (
OS_OPT
)(0x0000uË

	)

303 
	#OS_OPT_PEND_ABORT_ALL
 (
OS_OPT
)(0x0100uË

	)

312 
	#OS_OPT_POST_NONE
 (
OS_OPT
)(0x0000u)

	)

314 
	#OS_OPT_POST_FLAG_SET
 (
OS_OPT
)(0x0000u)

	)

315 
	#OS_OPT_POST_FLAG_CLR
 (
OS_OPT
)(0x0001u)

	)

317 
	#OS_OPT_POST_FIFO
 (
OS_OPT
)(0x0000uË

	)

318 
	#OS_OPT_POST_LIFO
 (
OS_OPT
)(0x0010uË

	)

319 
	#OS_OPT_POST_1
 (
OS_OPT
)(0x0000uË

	)

320 
	#OS_OPT_POST_ALL
 (
OS_OPT
)(0x0200uË

	)

322 
	#OS_OPT_POST_NO_SCHED
 (
OS_OPT
)(0x8000uË

	)

330 
	#OS_OPT_TASK_NONE
 (
OS_OPT
)(0x0000uË

	)

331 
	#OS_OPT_TASK_STK_CHK
 (
OS_OPT
)(0x0001uË

	)

332 
	#OS_OPT_TASK_STK_CLR
 (
OS_OPT
)(0x0002uË

	)

333 
	#OS_OPT_TASK_SAVE_FP
 (
OS_OPT
)(0x0004uË

	)

334 
	#OS_OPT_TASK_NO_TLS
 (
OS_OPT
)(0x0008uË

	)

342 
	#OS_OPT_TIME_DLY
 
DEF_BIT_NONE


	)

343 
	#OS_OPT_TIME_TIMEOUT
 ((
OS_OPT
)
DEF_BIT_01
)

	)

344 
	#OS_OPT_TIME_MATCH
 ((
OS_OPT
)
DEF_BIT_02
)

	)

345 
	#OS_OPT_TIME_PERIODIC
 ((
OS_OPT
)
DEF_BIT_03
)

	)

347 
	#OS_OPT_TIME_HMSM_STRICT
 ((
OS_OPT
)
DEF_BIT_NONE
)

	)

348 
	#OS_OPT_TIME_HMSM_NON_STRICT
 ((
OS_OPT
)
DEF_BIT_04
)

	)

350 
	#OS_OPT_TIME_MASK
 ((
OS_OPT
)(
OS_OPT_TIME_DLY
 | \

	)

351 
OS_OPT_TIME_TIMEOUT
 | \

352 
OS_OPT_TIME_PERIODIC
 | \

353 
OS_OPT_TIME_MATCH
))

355 
	#OS_OPT_TIME_OPTS_MASK
 (
OS_OPT_TIME_DLY
 | \

	)

356 
OS_OPT_TIME_TIMEOUT
 | \

357 
OS_OPT_TIME_PERIODIC
 | \

358 
OS_OPT_TIME_MATCH
 | \

359 
OS_OPT_TIME_HMSM_NON_STRICT
)

367 
	#OS_OPT_TMR_NONE
 (
OS_OPT
)(0uË

	)

369 
	#OS_OPT_TMR_ONE_SHOT
 (
OS_OPT
)(1uË

	)

370 
	#OS_OPT_TMR_PERIODIC
 (
OS_OPT
)(2uË

	)

372 
	#OS_OPT_TMR_CALLBACK
 (
OS_OPT
)(3uË

	)

373 
	#OS_OPT_TMR_CALLBACK_ARG
 (
OS_OPT
)(4uË

	)

381 
	#OS_TMR_STATE_UNUSED
 (
OS_STATE
)(0u)

	)

382 
	#OS_TMR_STATE_STOPPED
 (
OS_STATE
)(1u)

	)

383 
	#OS_TMR_STATE_RUNNING
 (
OS_STATE
)(2u)

	)

384 
	#OS_TMR_STATE_COMPLETED
 (
OS_STATE
)(3u)

	)

392 
	#OS_PRIO_INIT
 (
OS_PRIO
)(
OS_CFG_PRIO_MAX
)

	)

400 
	#OS_TICK_TH_INIT
 (
OS_TICK
)(
	`DEF_BIT
 (((OS_TICKË* 
DEF_OCTET_NBR_BITS
Ë- 1u))

	)

403 
	#OS_TICK_TH_RDY
 (
OS_TICK
)(
	`DEF_BIT_FIELD
((((OS_TICKË* 
DEF_OCTET_NBR_BITS
Ë/ 2u), \

	)

404 (((
OS_TICK
Ë* 
DEF_OCTET_NBR_BITS
) / 2u)))

421 
	eos_îr
 {

422 
OS_ERR_NONE
 = 0u,

424 
OS_ERR_A
 = 10000u,

425 
OS_ERR_ACCEPT_ISR
 = 10001u,

427 
OS_ERR_B
 = 11000u,

429 
OS_ERR_C
 = 12000u,

430 
OS_ERR_CREATE_ISR
 = 12001u,

432 
OS_ERR_D
 = 13000u,

433 
OS_ERR_DEL_ISR
 = 13001u,

435 
OS_ERR_E
 = 14000u,

437 
OS_ERR_F
 = 15000u,

438 
OS_ERR_FATAL_RETURN
 = 15001u,

440 
OS_ERR_FLAG_GRP_DEPLETED
 = 15101u,

441 
OS_ERR_FLAG_NOT_RDY
 = 15102u,

442 
OS_ERR_FLAG_PEND_OPT
 = 15103u,

443 
OS_ERR_FLUSH_ISR
 = 15104u,

445 
OS_ERR_G
 = 16000u,

447 
OS_ERR_H
 = 17000u,

449 
OS_ERR_I
 = 18000u,

450 
OS_ERR_ILLEGAL_CREATE_RUN_TIME
 = 18001u,

451 
OS_ERR_INT_Q
 = 18002u,

452 
OS_ERR_INT_Q_FULL
 = 18003u,

453 
OS_ERR_INT_Q_SIZE
 = 18004u,

454 
OS_ERR_INT_Q_STK_INVALID
 = 18005u,

455 
OS_ERR_INT_Q_STK_SIZE_INVALID
 = 18006u,

457 
OS_ERR_J
 = 19000u,

459 
OS_ERR_K
 = 20000u,

461 
OS_ERR_L
 = 21000u,

462 
OS_ERR_LOCK_NESTING_OVF
 = 21001u,

464 
OS_ERR_M
 = 22000u,

466 
OS_ERR_MEM_CREATE_ISR
 = 22201u,

467 
OS_ERR_MEM_FULL
 = 22202u,

468 
OS_ERR_MEM_INVALID_P_ADDR
 = 22203u,

469 
OS_ERR_MEM_INVALID_BLKS
 = 22204u,

470 
OS_ERR_MEM_INVALID_PART
 = 22205u,

471 
OS_ERR_MEM_INVALID_P_BLK
 = 22206u,

472 
OS_ERR_MEM_INVALID_P_MEM
 = 22207u,

473 
OS_ERR_MEM_INVALID_P_DATA
 = 22208u,

474 
OS_ERR_MEM_INVALID_SIZE
 = 22209u,

475 
OS_ERR_MEM_NO_FREE_BLKS
 = 22210u,

477 
OS_ERR_MSG_POOL_EMPTY
 = 22301u,

478 
OS_ERR_MSG_POOL_NULL_PTR
 = 22302u,

480 
OS_ERR_MUTEX_NOT_OWNER
 = 22401u,

481 
OS_ERR_MUTEX_OWNER
 = 22402u,

482 
OS_ERR_MUTEX_NESTING
 = 22403u,

484 
OS_ERR_N
 = 23000u,

485 
OS_ERR_NAME
 = 23001u,

486 
OS_ERR_NO_MORE_ID_AVAIL
 = 23002u,

488 
OS_ERR_O
 = 24000u,

489 
OS_ERR_OBJ_CREATED
 = 24001u,

490 
OS_ERR_OBJ_DEL
 = 24002u,

491 
OS_ERR_OBJ_PTR_NULL
 = 24003u,

492 
OS_ERR_OBJ_TYPE
 = 24004u,

494 
OS_ERR_OPT_INVALID
 = 24101u,

496 
OS_ERR_OS_NOT_RUNNING
 = 24201u,

497 
OS_ERR_OS_RUNNING
 = 24202u,

499 
OS_ERR_P
 = 25000u,

500 
OS_ERR_PEND_ABORT
 = 25001u,

501 
OS_ERR_PEND_ABORT_ISR
 = 25002u,

502 
OS_ERR_PEND_ABORT_NONE
 = 25003u,

503 
OS_ERR_PEND_ABORT_SELF
 = 25004u,

504 
OS_ERR_PEND_DEL
 = 25005u,

505 
OS_ERR_PEND_ISR
 = 25006u,

506 
OS_ERR_PEND_LOCKED
 = 25007u,

507 
OS_ERR_PEND_WOULD_BLOCK
 = 25008u,

509 
OS_ERR_POST_NULL_PTR
 = 25101u,

510 
OS_ERR_POST_ISR
 = 25102u,

512 
OS_ERR_PRIO_EXIST
 = 25201u,

513 
OS_ERR_PRIO
 = 25202u,

514 
OS_ERR_PRIO_INVALID
 = 25203u,

516 
OS_ERR_PTR_INVALID
 = 25301u,

518 
OS_ERR_Q
 = 26000u,

519 
OS_ERR_Q_FULL
 = 26001u,

520 
OS_ERR_Q_EMPTY
 = 26002u,

521 
OS_ERR_Q_MAX
 = 26003u,

522 
OS_ERR_Q_SIZE
 = 26004u,

524 
OS_ERR_R
 = 27000u,

525 
OS_ERR_REG_ID_INVALID
 = 27001u,

526 
OS_ERR_ROUND_ROBIN_1
 = 27002u,

527 
OS_ERR_ROUND_ROBIN_DISABLED
 = 27003u,

529 
OS_ERR_S
 = 28000u,

530 
OS_ERR_SCHED_INVALID_TIME_SLICE
 = 28001u,

531 
OS_ERR_SCHED_LOCK_ISR
 = 28002u,

532 
OS_ERR_SCHED_LOCKED
 = 28003u,

533 
OS_ERR_SCHED_NOT_LOCKED
 = 28004u,

534 
OS_ERR_SCHED_UNLOCK_ISR
 = 28005u,

536 
OS_ERR_SEM_OVF
 = 28101u,

537 
OS_ERR_SET_ISR
 = 28102u,

539 
OS_ERR_STAT_RESET_ISR
 = 28201u,

540 
OS_ERR_STAT_PRIO_INVALID
 = 28202u,

541 
OS_ERR_STAT_STK_INVALID
 = 28203u,

542 
OS_ERR_STAT_STK_SIZE_INVALID
 = 28204u,

543 
OS_ERR_STATE_INVALID
 = 28205u,

544 
OS_ERR_STATUS_INVALID
 = 28206u,

545 
OS_ERR_STK_INVALID
 = 28207u,

546 
OS_ERR_STK_SIZE_INVALID
 = 28208u,

547 
OS_ERR_STK_LIMIT_INVALID
 = 28209u,

549 
OS_ERR_T
 = 29000u,

550 
OS_ERR_TASK_CHANGE_PRIO_ISR
 = 29001u,

551 
OS_ERR_TASK_CREATE_ISR
 = 29002u,

552 
OS_ERR_TASK_DEL
 = 29003u,

553 
OS_ERR_TASK_DEL_IDLE
 = 29004u,

554 
OS_ERR_TASK_DEL_INVALID
 = 29005u,

555 
OS_ERR_TASK_DEL_ISR
 = 29006u,

556 
OS_ERR_TASK_INVALID
 = 29007u,

557 
OS_ERR_TASK_NO_MORE_TCB
 = 29008u,

558 
OS_ERR_TASK_NOT_DLY
 = 29009u,

559 
OS_ERR_TASK_NOT_EXIST
 = 29010u,

560 
OS_ERR_TASK_NOT_SUSPENDED
 = 29011u,

561 
OS_ERR_TASK_OPT
 = 29012u,

562 
OS_ERR_TASK_RESUME_ISR
 = 29013u,

563 
OS_ERR_TASK_RESUME_PRIO
 = 29014u,

564 
OS_ERR_TASK_RESUME_SELF
 = 29015u,

565 
OS_ERR_TASK_RUNNING
 = 29016u,

566 
OS_ERR_TASK_STK_CHK_ISR
 = 29017u,

567 
OS_ERR_TASK_SUSPENDED
 = 29018u,

568 
OS_ERR_TASK_SUSPEND_IDLE
 = 29019u,

569 
OS_ERR_TASK_SUSPEND_INT_HANDLER
 = 29020u,

570 
OS_ERR_TASK_SUSPEND_ISR
 = 29021u,

571 
OS_ERR_TASK_SUSPEND_PRIO
 = 29022u,

572 
OS_ERR_TASK_WAITING
 = 29023u,

574 
OS_ERR_TCB_INVALID
 = 29101u,

576 
OS_ERR_TLS_ID_INVALID
 = 29120u,

577 
OS_ERR_TLS_ISR
 = 29121u,

578 
OS_ERR_TLS_NO_MORE_AVAIL
 = 29122u,

579 
OS_ERR_TLS_NOT_EN
 = 29123u,

580 
OS_ERR_TLS_DESTRUCT_ASSIGNED
 = 29124u,

582 
OS_ERR_TICK_PRIO_INVALID
 = 29201u,

583 
OS_ERR_TICK_STK_INVALID
 = 29202u,

584 
OS_ERR_TICK_STK_SIZE_INVALID
 = 29203u,

585 
OS_ERR_TICK_WHEEL_SIZE
 = 29204u,

587 
OS_ERR_TIME_DLY_ISR
 = 29301u,

588 
OS_ERR_TIME_DLY_RESUME_ISR
 = 29302u,

589 
OS_ERR_TIME_GET_ISR
 = 29303u,

590 
OS_ERR_TIME_INVALID_HOURS
 = 29304u,

591 
OS_ERR_TIME_INVALID_MINUTES
 = 29305u,

592 
OS_ERR_TIME_INVALID_SECONDS
 = 29306u,

593 
OS_ERR_TIME_INVALID_MILLISECONDS
 = 29307u,

594 
OS_ERR_TIME_NOT_DLY
 = 29308u,

595 
OS_ERR_TIME_SET_ISR
 = 29309u,

596 
OS_ERR_TIME_ZERO_DLY
 = 29310u,

598 
OS_ERR_TIMEOUT
 = 29401u,

600 
OS_ERR_TMR_INACTIVE
 = 29501u,

601 
OS_ERR_TMR_INVALID_DEST
 = 29502u,

602 
OS_ERR_TMR_INVALID_DLY
 = 29503u,

603 
OS_ERR_TMR_INVALID_PERIOD
 = 29504u,

604 
OS_ERR_TMR_INVALID_STATE
 = 29505u,

605 
OS_ERR_TMR_INVALID
 = 29506u,

606 
OS_ERR_TMR_ISR
 = 29507u,

607 
OS_ERR_TMR_NO_CALLBACK
 = 29508u,

608 
OS_ERR_TMR_NON_AVAIL
 = 29509u,

609 
OS_ERR_TMR_PRIO_INVALID
 = 29510u,

610 
OS_ERR_TMR_STK_INVALID
 = 29511u,

611 
OS_ERR_TMR_STK_SIZE_INVALID
 = 29512u,

612 
OS_ERR_TMR_STOPPED
 = 29513u,

614 
OS_ERR_U
 = 30000u,

616 
OS_ERR_V
 = 31000u,

618 
OS_ERR_W
 = 32000u,

620 
OS_ERR_X
 = 33000u,

622 
OS_ERR_Y
 = 34000u,

623 
OS_ERR_YIELD_ISR
 = 34001u,

625 
OS_ERR_Z
 = 35000u

626 } 
	tOS_ERR
;

638 
os_Êag_gΩ
 
	tOS_FLAG_GRP
;

640 
os_mem
 
	tOS_MEM
;

642 
os_msg
 
	tOS_MSG
;

643 
os_msg_poﬁ
 
	tOS_MSG_POOL
;

644 
os_msg_q
 
	tOS_MSG_Q
;

646 
os_muãx
 
	tOS_MUTEX
;

648 
os_öt_q
 
	tOS_INT_Q
;

650 
os_q
 
	tOS_Q
;

652 
os_£m
 
	tOS_SEM
;

654 (*
	gOS_TASK_PTR
)(*
	tp_¨g
);

656 
os_tcb
 
	tOS_TCB
;

658 #i‡
deföed
(
OS_CFG_TLS_TBL_SIZE
) && (OS_CFG_TLS_TBL_SIZE > 0u)

659 *
	tOS_TLS
;

661 
CPU_DATA
 
	tOS_TLS_ID
;

663 (*
	gOS_TLS_DESTRUCT_PTR
)(
	tOS_TCB
 *
	tp_tcb
,

664 
	tOS_TLS_ID
 
	tid
,

665 
	tOS_TLS
 
	tvÆue
);

668 
os_rdy_li°
 
	tOS_RDY_LIST
;

670 
os_tick_•oke
 
	tOS_TICK_SPOKE
;

672 (*
	gOS_TMR_CALLBACK_PTR
)(*
	tp_tmr
, *
	tp_¨g
);

673 
os_tmr
 
	tOS_TMR
;

674 
os_tmr_•oke
 
	tOS_TMR_SPOKE
;

677 
os_≥nd_d©a
 
	tOS_PEND_DATA
;

678 
os_≥nd_li°
 
	tOS_PEND_LIST
;

679 
os_≥nd_obj
 
	tOS_PEND_OBJ
;

681 #i‡
OS_CFG_APP_HOOKS_EN
 > 0u

682 (*
	gOS_APP_HOOK_VOID
)();

683 (*
	gOS_APP_HOOK_TCB
)(
	tOS_TCB
 *
	tp_tcb
);

701 #i‡
OS_CFG_ISR_POST_DEFERRED_EN
 > 0u

702 
	sos_öt_q
 {

703 
OS_OBJ_TYPE
 
	gTy≥
;

704 
OS_INT_Q
 *
	gNextPå
;

705 *
	gObjPå
;

706 *
	gMsgPå
;

707 
OS_MSG_SIZE
 
	gMsgSize
;

708 
OS_FLAGS
 
	gFœgs
;

709 
OS_OPT
 
	gO±
;

710 
CPU_TS
 
	gTS
;

720 
	sos_rdy_li°
 {

721 
OS_TCB
 *
	gHódPå
;

722 
OS_TCB
 *
	gTaûPå
;

723 
OS_OBJ_QTY
 
	gNbrE¡rõs
;

733 
	sos_≥nd_d©a
 {

734 
OS_PEND_DATA
 *
	gPªvPå
;

735 
OS_PEND_DATA
 *
	gNextPå
;

736 
OS_TCB
 *
	gTCBPå
;

737 
OS_PEND_OBJ
 *
	gPídObjPå
;

738 
OS_PEND_OBJ
 *
	gRdyObjPå
;

739 *
	gRdyMsgPå
;

740 
OS_MSG_SIZE
 
	gRdyMsgSize
;

741 
CPU_TS
 
	gRdyTS
;

745 
	sos_≥nd_li°
 {

746 
OS_PEND_DATA
 *
	gHódPå
;

747 
OS_PEND_DATA
 *
	gTaûPå
;

748 
OS_OBJ_QTY
 
	gNbrE¡rõs
;

767 
	sos_≥nd_obj
 {

768 
OS_OBJ_TYPE
 
	gTy≥
;

769 
CPU_CHAR
 *
	gNamePå
;

770 
OS_PEND_LIST
 
	gPídLi°
;

771 #i‡
OS_CFG_DBG_EN
 > 0u

772 *
	gDbgPªvPå
;

773 *
	gDbgNextPå
;

774 
CPU_CHAR
 *
	gDbgNamePå
;

788 
	sos_Êag_gΩ
 {

790 
OS_OBJ_TYPE
 
	gTy≥
;

791 
CPU_CHAR
 *
	gNamePå
;

792 
OS_PEND_LIST
 
	gPídLi°
;

793 #i‡
OS_CFG_DBG_EN
 > 0u

794 
OS_FLAG_GRP
 *
	gDbgPªvPå
;

795 
OS_FLAG_GRP
 *
	gDbgNextPå
;

796 
CPU_CHAR
 *
	gDbgNamePå
;

799 
OS_FLAGS
 
	gFœgs
;

800 
CPU_TS
 
	gTS
;

811 
	sos_mem
 {

812 
OS_OBJ_TYPE
 
	gTy≥
;

813 *
	gAddrPå
;

814 
CPU_CHAR
 *
	gNamePå
;

815 *
	gFªeLi°På
;

816 
OS_MEM_SIZE
 
	gBlkSize
;

817 
OS_MEM_QTY
 
	gNbrMax
;

818 
OS_MEM_QTY
 
	gNbrFªe
;

819 #i‡
OS_CFG_DBG_EN
 > 0u

820 
OS_MEM
 *
	gDbgPªvPå
;

821 
OS_MEM
 *
	gDbgNextPå
;

832 
	sos_msg
 {

833 
OS_MSG
 *
	gNextPå
;

834 *
	gMsgPå
;

835 
OS_MSG_SIZE
 
	gMsgSize
;

836 
CPU_TS
 
	gMsgTS
;

842 
	sos_msg_poﬁ
 {

843 
OS_MSG
 *
	gNextPå
;

844 
OS_MSG_QTY
 
	gNbrFªe
;

845 
OS_MSG_QTY
 
	gNbrU£d
;

846 
OS_MSG_QTY
 
	gNbrU£dMax
;

851 
	sos_msg_q
 {

852 
OS_MSG
 *
	gInPå
;

853 
OS_MSG
 *
	gOutPå
;

854 
OS_MSG_QTY
 
	gNbrE¡rõsSize
;

855 
OS_MSG_QTY
 
	gNbrE¡rõs
;

856 
OS_MSG_QTY
 
	gNbrE¡rõsMax
;

868 
	sos_muãx
 {

870 
OS_OBJ_TYPE
 
	gTy≥
;

871 
CPU_CHAR
 *
	gNamePå
;

872 
OS_PEND_LIST
 
	gPídLi°
;

873 #i‡
OS_CFG_DBG_EN
 > 0u

874 
OS_MUTEX
 *
	gDbgPªvPå
;

875 
OS_MUTEX
 *
	gDbgNextPå
;

876 
CPU_CHAR
 *
	gDbgNamePå
;

879 
OS_TCB
 *
	gOw√rTCBPå
;

880 
OS_PRIO
 
	gOw√rOrigöÆPrio
;

881 
OS_NESTING_CTR
 
	gOw√rNe°ögCå
;

882 
CPU_TS
 
	gTS
;

894 
	sos_q
 {

896 
OS_OBJ_TYPE
 
	gTy≥
;

897 
CPU_CHAR
 *
	gNamePå
;

898 
OS_PEND_LIST
 
	gPídLi°
;

899 #i‡
OS_CFG_DBG_EN
 > 0u

900 
OS_Q
 *
	gDbgPªvPå
;

901 
OS_Q
 *
	gDbgNextPå
;

902 
CPU_CHAR
 *
	gDbgNamePå
;

905 
OS_MSG_Q
 
	gMsgQ
;

917 
	sos_£m
 {

919 
OS_OBJ_TYPE
 
	gTy≥
;

920 
CPU_CHAR
 *
	gNamePå
;

921 
OS_PEND_LIST
 
	gPídLi°
;

922 #i‡
OS_CFG_DBG_EN
 > 0u

923 
OS_SEM
 *
	gDbgPªvPå
;

924 
OS_SEM
 *
	gDbgNextPå
;

925 
CPU_CHAR
 *
	gDbgNamePå
;

928 
OS_SEM_CTR
 
	gCå
;

929 
CPU_TS
 
	gTS
;

939 
	sos_tcb
 {

940 
CPU_STK
 *
	gStkPå
;

942 *
	gExtPå
;

944 
CPU_STK
 *
	gStkLimôPå
;

946 
OS_TCB
 *
	gNextPå
;

947 
OS_TCB
 *
	gPªvPå
;

949 
OS_TCB
 *
	gTickNextPå
;

950 
OS_TCB
 *
	gTickPªvPå
;

952 
OS_TICK_SPOKE
 *
	gTickSpokePå
;

954 
CPU_CHAR
 *
	gNamePå
;

956 
CPU_STK
 *
	gStkBa£På
;

958 #i‡
deföed
(
OS_CFG_TLS_TBL_SIZE
) && (OS_CFG_TLS_TBL_SIZE > 0u)

959 
OS_TLS
 
	gTLS_Tbl
[
OS_CFG_TLS_TBL_SIZE
];

962 
OS_TASK_PTR
 
	gTaskE¡ryAddr
;

963 *
	gTaskE¡ryArg
;

965 
OS_PEND_DATA
 *
	gPídD©aTblPå
;

966 
OS_STATE
 
	gPídOn
;

967 
OS_STATUS
 
	gPídSètus
;

969 
OS_STATE
 
	gTaskSèã
;

970 
OS_PRIO
 
	gPrio
;

971 
CPU_STK_SIZE
 
	gStkSize
;

972 
OS_OPT
 
	gO±
;

974 
OS_OBJ_QTY
 
	gPídD©aTblE¡rõs
;

976 
CPU_TS
 
	gTS
;

978 
OS_SEM_CTR
 
	gSemCå
;

981 
OS_TICK
 
	gTickCåPªv
;

982 
OS_TICK
 
	gTickCåM©ch
;

983 
OS_TICK
 
	gTickRemaö
;

985 
OS_TICK
 
	gTimeQu™è
;

986 
OS_TICK
 
	gTimeQu™èCå
;

988 #i‡
OS_MSG_EN
 > 0u

989 *
	gMsgPå
;

990 
OS_MSG_SIZE
 
	gMsgSize
;

993 #i‡
OS_CFG_TASK_Q_EN
 > 0u

994 
OS_MSG_Q
 
	gMsgQ
;

995 #i‡
OS_CFG_TASK_PROFILE_EN
 > 0u

996 
CPU_TS
 
	gMsgQPídTime
;

997 
CPU_TS
 
	gMsgQPídTimeMax
;

1001 #i‡
OS_CFG_TASK_REG_TBL_SIZE
 > 0u

1002 
OS_REG
 
	gRegTbl
[
OS_CFG_TASK_REG_TBL_SIZE
];

1005 #i‡
OS_CFG_FLAG_EN
 > 0u

1006 
OS_FLAGS
 
	gFœgsPíd
;

1007 
OS_FLAGS
 
	gFœgsRdy
;

1008 
OS_OPT
 
	gFœgsO±
;

1011 #i‡
OS_CFG_TASK_SUSPEND_EN
 > 0u

1012 
OS_NESTING_CTR
 
	gSu•ídCå
;

1015 #i‡
OS_CFG_TASK_PROFILE_EN
 > 0u

1016 
OS_CPU_USAGE
 
	gCPUUßge
;

1017 
OS_CPU_USAGE
 
	gCPUUßgeMax
;

1018 
OS_CTX_SW_CTR
 
	gCtxSwCå
;

1019 
CPU_TS
 
	gCy˛esDñè
;

1020 
CPU_TS
 
	gCy˛esSèπ
;

1021 
OS_CYCLES
 
	gCy˛esTŸÆ
;

1022 
OS_CYCLES
 
	gCy˛esTŸÆPªv
;

1024 
CPU_TS
 
	gSemPídTime
;

1025 
CPU_TS
 
	gSemPídTimeMax
;

1028 #i‡
OS_CFG_STAT_TASK_STK_CHK_EN
 > 0u

1029 
CPU_STK_SIZE
 
	gStkU£d
;

1030 
CPU_STK_SIZE
 
	gStkFªe
;

1033 #ifde‡
CPU_CFG_INT_DIS_MEAS_EN


1034 
CPU_TS
 
	gI¡DisTimeMax
;

1036 #i‡
OS_CFG_SCHED_LOCK_TIME_MEAS_EN
 > 0u

1037 
CPU_TS
 
	gSchedLockTimeMax
;

1040 #i‡
OS_CFG_DBG_EN
 > 0u

1041 
OS_TCB
 *
	gDbgPªvPå
;

1042 
OS_TCB
 *
	gDbgNextPå
;

1043 
CPU_CHAR
 *
	gDbgNamePå
;

1054 
	sos_tick_•oke
 {

1055 
OS_TCB
 *
	gFú°På
;

1056 
OS_OBJ_QTY
 
	gNbrE¡rõs
;

1057 
OS_OBJ_QTY
 
	gNbrE¡rõsMax
;

1067 
	sos_tmr
 {

1068 
OS_OBJ_TYPE
 
	gTy≥
;

1069 
CPU_CHAR
 *
	gNamePå
;

1070 
OS_TMR_CALLBACK_PTR
 
	gCÆlbackPå
;

1071 *
	gCÆlbackPåArg
;

1072 
OS_TMR
 *
	gNextPå
;

1073 
OS_TMR
 *
	gPªvPå
;

1074 
OS_TICK
 
	gM©ch
;

1075 
OS_TICK
 
	gRemaö
;

1076 
OS_TICK
 
	gDly
;

1077 
OS_TICK
 
	gPîiod
;

1078 
OS_OPT
 
	gO±
;

1079 
OS_STATE
 
	gSèã
;

1080 #i‡
OS_CFG_DBG_EN
 > 0u

1081 
OS_TMR
 *
	gDbgPªvPå
;

1082 
OS_TMR
 *
	gDbgNextPå
;

1088 
	sos_tmr_•oke
 {

1089 
OS_TMR
 *
	gFú°På
;

1090 
OS_OBJ_QTY
 
	gNbrE¡rõs
;

1091 
OS_OBJ_QTY
 
	gNbrE¡rõsMax
;

1103 #i‡
OS_CFG_APP_HOOKS_EN
 > 0u

1104 
OS_EXT
 
OS_APP_HOOK_TCB
 
	gOS_AµTaskCª©eHookPå
;

1105 
OS_EXT
 
OS_APP_HOOK_TCB
 
	gOS_AµTaskDñHookPå
;

1106 
OS_EXT
 
OS_APP_HOOK_TCB
 
	gOS_AµTaskRëu∫HookPå
;

1108 
OS_EXT
 
OS_APP_HOOK_VOID
 
	gOS_AµIdÀTaskHookPå
;

1109 
OS_EXT
 
OS_APP_HOOK_VOID
 
	gOS_AµSètTaskHookPå
;

1110 
OS_EXT
 
OS_APP_HOOK_VOID
 
	gOS_AµTaskSwHookPå
;

1111 
OS_EXT
 
OS_APP_HOOK_VOID
 
	gOS_AµTimeTickHookPå
;

1115 
OS_EXT
 
OS_IDLE_CTR
 
	gOSIdÀTaskCå
;

1116 
OS_EXT
 
OS_TCB
 
	gOSIdÀTaskTCB
;

1119 
OS_EXT
 
OS_NESTING_CTR
 
	gOSI¡Ne°ögCå
;

1120 #ifde‡
CPU_CFG_INT_DIS_MEAS_EN


1121 
OS_EXT
 
CPU_TS
 
	gOSI¡DisTimeMax
;

1124 
OS_EXT
 
OS_STATE
 
	gOSRu¬ög
;

1128 #i‡
OS_CFG_ISR_POST_DEFERRED_EN
 > 0u

1129 
OS_EXT
 
OS_INT_Q
 *
	gOSI¡QInPå
;

1130 
OS_EXT
 
OS_INT_Q
 *
	gOSI¡QOutPå
;

1131 
OS_EXT
 
OS_OBJ_QTY
 
	gOSI¡QNbrE¡rõs
;

1132 
OS_EXT
 
OS_OBJ_QTY
 
	gOSI¡QNbrE¡rõsMax
;

1133 
OS_EXT
 
OS_OBJ_QTY
 
	gOSI¡QOvfCå
;

1134 
OS_EXT
 
OS_TCB
 
	gOSI¡QTaskTCB
;

1135 
OS_EXT
 
CPU_TS
 
	gOSI¡QTaskTimeMax
;

1139 #i‡
OS_CFG_FLAG_EN
 > 0u

1140 #i‡
OS_CFG_DBG_EN
 > 0u

1141 
OS_EXT
 
OS_FLAG_GRP
 *
	gOSFœgDbgLi°På
;

1143 
OS_EXT
 
OS_OBJ_QTY
 
	gOSFœgQty
;

1147 #i‡
OS_CFG_MEM_EN
 > 0u

1148 #i‡
OS_CFG_DBG_EN
 > 0u

1149 
OS_EXT
 
OS_MEM
 *
	gOSMemDbgLi°På
;

1151 
OS_EXT
 
OS_OBJ_QTY
 
	gOSMemQty
;

1155 #i‡
OS_MSG_EN
 > 0u

1156 
OS_EXT
 
OS_MSG_POOL
 
	gOSMsgPoﬁ
;

1160 #i‡
OS_CFG_MUTEX_EN
 > 0u

1161 #i‡
OS_CFG_DBG_EN
 > 0u

1162 
OS_EXT
 
OS_MUTEX
 *
	gOSMuãxDbgLi°På
;

1164 
OS_EXT
 
OS_OBJ_QTY
 
	gOSMuãxQty
;

1168 
OS_EXT
 
OS_PRIO
 
	gOSPrioCur
;

1169 
OS_EXT
 
OS_PRIO
 
	gOSPrioHighRdy
;

1170 
OS_EXT
 
OS_PRIO
 
	gOSPrioSaved
;

1171 
CPU_DATA
 
OSPrioTbl
[
OS_PRIO_TBL_SIZE
];

1174 #i‡
OS_CFG_Q_EN
 > 0u

1175 #i‡
OS_CFG_DBG_EN
 > 0u

1176 
OS_EXT
 
OS_Q
 *
	gOSQDbgLi°På
;

1178 
OS_EXT
 
OS_OBJ_QTY
 
	gOSQQty
;

1184 
OS_EXT
 
OS_RDY_LIST
 
	gOSRdyLi°
[
OS_CFG_PRIO_MAX
];

1187 #ifde‡
OS_SAFETY_CRITICAL_IEC61508


1188 
OS_EXT
 
CPU_BOOLEAN
 
	gOSSa„tyCrôiˇlSèπFœg
;

1191 #i‡
OS_CFG_SCHED_LOCK_TIME_MEAS_EN
 > 0u

1192 
OS_EXT
 
CPU_TS_TMR
 
	gOSSchedLockTimeBegö
;

1193 
OS_EXT
 
CPU_TS_TMR
 
	gOSSchedLockTimeMax
;

1194 
OS_EXT
 
CPU_TS_TMR
 
	gOSSchedLockTimeMaxCur
;

1197 
OS_EXT
 
OS_NESTING_CTR
 
	gOSSchedLockNe°ögCå
;

1198 #i‡
OS_CFG_SCHED_ROUND_ROBIN_EN
 > 0u

1199 
OS_EXT
 
OS_TICK
 
	gOSSchedRoundRoböDÊtTimeQu™è
;

1200 
OS_EXT
 
CPU_BOOLEAN
 
	gOSSchedRoundRoböEn
;

1203 #i‡
OS_CFG_SEM_EN
 > 0u

1204 #i‡
OS_CFG_DBG_EN
 > 0u

1205 
OS_EXT
 
OS_SEM
 *
	gOSSemDbgLi°På
;

1207 
OS_EXT
 
OS_OBJ_QTY
 
	gOSSemQty
;

1211 #i‡
OS_CFG_STAT_TASK_EN
 > 0u

1212 
OS_EXT
 
CPU_BOOLEAN
 
	gOSSètRe£tFœg
;

1213 
OS_EXT
 
OS_CPU_USAGE
 
	gOSSètTaskCPUUßge
;

1214 
OS_EXT
 
OS_CPU_USAGE
 
	gOSSètTaskCPUUßgeMax
;

1215 
OS_EXT
 
OS_TICK
 
	gOSSètTaskCå
;

1216 
OS_EXT
 
OS_TICK
 
	gOSSètTaskCåMax
;

1217 
OS_EXT
 
OS_TICK
 
	gOSSètTaskCåRun
;

1218 
OS_EXT
 
CPU_BOOLEAN
 
	gOSSètTaskRdy
;

1219 
OS_EXT
 
OS_TCB
 
	gOSSètTaskTCB
;

1220 
OS_EXT
 
CPU_TS
 
	gOSSètTaskTimeMax
;

1224 
OS_EXT
 
OS_CTX_SW_CTR
 
	gOSTaskCtxSwCå
;

1225 #i‡
OS_CFG_DBG_EN
 > 0u

1226 
OS_EXT
 
OS_TCB
 *
	gOSTaskDbgLi°På
;

1228 
OS_EXT
 
OS_OBJ_QTY
 
	gOSTaskQty
;

1230 #i‡
OS_CFG_TASK_REG_TBL_SIZE
 > 0u

1231 
OS_EXT
 
OS_REG_ID
 
	gOSTaskRegNextAvaûID
;

1235 
OS_EXT
 
OS_TICK
 
	gOSTickCå
;

1236 
OS_EXT
 
OS_TCB
 
	gOSTickTaskTCB
;

1237 
OS_EXT
 
CPU_TS
 
	gOSTickTaskTimeMax
;

1240 #i‡
OS_CFG_TMR_EN
 > 0u

1241 #i‡
OS_CFG_DBG_EN
 > 0u

1242 
OS_EXT
 
OS_TMR
 *
	gOSTmrDbgLi°På
;

1244 
OS_EXT
 
OS_OBJ_QTY
 
	gOSTmrQty
;

1245 
OS_EXT
 
OS_TCB
 
	gOSTmrTaskTCB
;

1246 
OS_EXT
 
CPU_TS
 
	gOSTmrTaskTimeMax
;

1247 
OS_EXT
 
OS_TICK
 
	gOSTmrTickCå
;

1248 
OS_EXT
 
OS_CTR
 
	gOSTmrUpd©eC¡
;

1249 
OS_EXT
 
OS_CTR
 
	gOSTmrUpd©eCå
;

1253 
OS_EXT
 
OS_TCB
 *
	gOSTCBCurPå
;

1254 
OS_EXT
 
OS_TCB
 *
	gOSTCBHighRdyPå
;

1265 
CPU_STK
 * c⁄° 
OSCfg_IdÀTaskStkBa£På
;

1266 
CPU_STK_SIZE
 c⁄° 
OSCfg_IdÀTaskStkLimô
;

1267 
CPU_STK_SIZE
 c⁄° 
OSCfg_IdÀTaskStkSize
;

1268 
CPU_INT32U
 c⁄° 
OSCfg_IdÀTaskStkSizeRAM
;

1270 
OS_INT_Q
 * c⁄° 
OSCfg_I¡QBa£På
;

1271 
OS_OBJ_QTY
 c⁄° 
OSCfg_I¡QSize
;

1272 
CPU_INT32U
 c⁄° 
OSCfg_I¡QSizeRAM
;

1273 
CPU_STK
 * c⁄° 
OSCfg_I¡QTaskStkBa£På
;

1274 
CPU_STK_SIZE
 c⁄° 
OSCfg_I¡QTaskStkLimô
;

1275 
CPU_STK_SIZE
 c⁄° 
OSCfg_I¡QTaskStkSize
;

1276 
CPU_INT32U
 c⁄° 
OSCfg_I¡QTaskStkSizeRAM
;

1278 
CPU_STK
 * c⁄° 
OSCfg_ISRStkBa£På
;

1279 
CPU_STK_SIZE
 c⁄° 
OSCfg_ISRStkSize
;

1280 
CPU_INT32U
 c⁄° 
OSCfg_ISRStkSizeRAM
;

1282 
OS_MSG_SIZE
 c⁄° 
OSCfg_MsgPoﬁSize
;

1283 
CPU_INT32U
 c⁄° 
OSCfg_MsgPoﬁSizeRAM
;

1284 
OS_MSG
 * c⁄° 
OSCfg_MsgPoﬁBa£På
;

1286 
OS_PRIO
 c⁄° 
OSCfg_SètTaskPrio
;

1287 
OS_RATE_HZ
 c⁄° 
OSCfg_SètTaskR©e_Hz
;

1288 
CPU_STK
 * c⁄° 
OSCfg_SètTaskStkBa£På
;

1289 
CPU_STK_SIZE
 c⁄° 
OSCfg_SètTaskStkLimô
;

1290 
CPU_STK_SIZE
 c⁄° 
OSCfg_SètTaskStkSize
;

1291 
CPU_INT32U
 c⁄° 
OSCfg_SètTaskStkSizeRAM
;

1293 
CPU_STK_SIZE
 c⁄° 
OSCfg_StkSizeMö
;

1295 
OS_RATE_HZ
 c⁄° 
OSCfg_TickR©e_Hz
;

1296 
OS_PRIO
 c⁄° 
OSCfg_TickTaskPrio
;

1297 
CPU_STK
 * c⁄° 
OSCfg_TickTaskStkBa£På
;

1298 
CPU_STK_SIZE
 c⁄° 
OSCfg_TickTaskStkLimô
;

1299 
CPU_STK_SIZE
 c⁄° 
OSCfg_TickTaskStkSize
;

1300 
CPU_INT32U
 c⁄° 
OSCfg_TickTaskStkSizeRAM
;

1301 
OS_OBJ_QTY
 c⁄° 
OSCfg_TickWhìlSize
;

1302 
CPU_INT32U
 c⁄° 
OSCfg_TickWhìlSizeRAM
;

1304 
OS_PRIO
 c⁄° 
OSCfg_TmrTaskPrio
;

1305 
OS_RATE_HZ
 c⁄° 
OSCfg_TmrTaskR©e_Hz
;

1306 
CPU_STK
 * c⁄° 
OSCfg_TmrTaskStkBa£På
;

1307 
CPU_STK_SIZE
 c⁄° 
OSCfg_TmrTaskStkLimô
;

1308 
CPU_STK_SIZE
 c⁄° 
OSCfg_TmrTaskStkSize
;

1309 
CPU_INT32U
 c⁄° 
OSCfg_TmrTaskStkSizeRAM
;

1310 
OS_OBJ_QTY
 c⁄° 
OSCfg_TmrWhìlSize
;

1311 
CPU_INT32U
 c⁄° 
OSCfg_TmrSizeRAM
;

1314 
CPU_STK
 
OSCfg_IdÀTaskStk
[];

1316 #i‡(
OS_CFG_ISR_POST_DEFERRED_EN
 > 0u)

1317 
CPU_STK
 
OSCfg_I¡QTaskStk
[];

1318 
OS_INT_Q
 
OSCfg_I¡Q
[];

1321 
CPU_STK
 
OSCfg_ISRStk
[];

1323 #i‡(
OS_MSG_EN
 > 0u)

1324 
OS_MSG
 
OSCfg_MsgPoﬁ
[];

1327 #i‡(
OS_CFG_STAT_TASK_EN
 > 0u)

1328 
CPU_STK
 
OSCfg_SètTaskStk
[];

1331 
CPU_STK
 
OSCfg_TickTaskStk
[];

1332 
OS_TICK_SPOKE
 
OSCfg_TickWhìl
[];

1334 #i‡(
OS_CFG_TMR_EN
 > 0u)

1335 
CPU_STK
 
OSCfg_TmrTaskStk
[];

1336 
OS_TMR_SPOKE
 
OSCfg_TmrWhìl
[];

1351 #i‡
OS_CFG_FLAG_EN
 > 0u

1353 
OSFœgCª©e
 (
OS_FLAG_GRP
 *
p_gΩ
,

1354 
CPU_CHAR
 *
p_«me
,

1355 
OS_FLAGS
 
Êags
,

1356 
OS_ERR
 *
p_îr
);

1358 #i‡
OS_CFG_FLAG_DEL_EN
 > 0u

1359 
OS_OBJ_QTY
 
OSFœgDñ
 (
OS_FLAG_GRP
 *
p_gΩ
,

1360 
OS_OPT
 
›t
,

1361 
OS_ERR
 *
p_îr
);

1364 
OS_FLAGS
 
OSFœgPíd
 (
OS_FLAG_GRP
 *
p_gΩ
,

1365 
OS_FLAGS
 
Êags
,

1366 
OS_TICK
 
timeout
,

1367 
OS_OPT
 
›t
,

1368 
CPU_TS
 *
p_ts
,

1369 
OS_ERR
 *
p_îr
);

1371 #i‡
OS_CFG_FLAG_PEND_ABORT_EN
 > 0u

1372 
OS_OBJ_QTY
 
OSFœgPídAb‹t
 (
OS_FLAG_GRP
 *
p_gΩ
,

1373 
OS_OPT
 
›t
,

1374 
OS_ERR
 *
p_îr
);

1377 
OS_FLAGS
 
OSFœgPídGëFœgsRdy
 (
OS_ERR
 *
p_îr
);

1379 
OS_FLAGS
 
OSFœgPo°
 (
OS_FLAG_GRP
 *
p_gΩ
,

1380 
OS_FLAGS
 
Êags
,

1381 
OS_OPT
 
›t
,

1382 
OS_ERR
 *
p_îr
);

1386 
OS_FœgCÃ
 (
OS_FLAG_GRP
 *
p_gΩ
);

1388 
OS_FœgBlock
 (
OS_PEND_DATA
 *
p_≥nd_d©a
,

1389 
OS_FLAG_GRP
 *
p_gΩ
,

1390 
OS_FLAGS
 
Êags
,

1391 
OS_OPT
 
›t
,

1392 
OS_TICK
 
timeout
);

1394 #i‡
OS_CFG_DBG_EN
 > 0u

1395 
OS_FœgDbgLi°Add
 (
OS_FLAG_GRP
 *
p_gΩ
);

1397 
OS_FœgDbgLi°Remove
 (
OS_FLAG_GRP
 *
p_gΩ
);

1400 
OS_FœgInô
 (
OS_ERR
 *
p_îr
);

1402 
OS_FLAGS
 
OS_FœgPo°
 (
OS_FLAG_GRP
 *
p_gΩ
,

1403 
OS_FLAGS
 
Êags
,

1404 
OS_OPT
 
›t
,

1405 
CPU_TS
 
ts
,

1406 
OS_ERR
 *
p_îr
);

1408 
OS_FœgTaskRdy
 (
OS_TCB
 *
p_tcb
,

1409 
OS_FLAGS
 
Êags_rdy
,

1410 
CPU_TS
 
ts
);

1418 #i‡
OS_CFG_MEM_EN
 > 0u

1420 
OSMemCª©e
 (
OS_MEM
 *
p_mem
,

1421 
CPU_CHAR
 *
p_«me
,

1422 *
p_addr
,

1423 
OS_MEM_QTY
 
n_blks
,

1424 
OS_MEM_SIZE
 
blk_size
,

1425 
OS_ERR
 *
p_îr
);

1427 *
OSMemGë
 (
OS_MEM
 *
p_mem
,

1428 
OS_ERR
 *
p_îr
);

1430 
OSMemPut
 (
OS_MEM
 *
p_mem
,

1431 *
p_blk
,

1432 
OS_ERR
 *
p_îr
);

1436 #i‡
OS_CFG_DBG_EN
 > 0u

1437 
OS_MemDbgLi°Add
 (
OS_MEM
 *
p_mem
);

1440 
OS_MemInô
 (
OS_ERR
 *
p_îr
);

1449 #i‡
OS_CFG_MUTEX_EN
 > 0u

1451 
OSMuãxCª©e
 (
OS_MUTEX
 *
p_muãx
,

1452 
CPU_CHAR
 *
p_«me
,

1453 
OS_ERR
 *
p_îr
);

1455 #i‡
OS_CFG_MUTEX_DEL_EN
 > 0u

1456 
OS_OBJ_QTY
 
OSMuãxDñ
 (
OS_MUTEX
 *
p_muãx
,

1457 
OS_OPT
 
›t
,

1458 
OS_ERR
 *
p_îr
);

1461 
OSMuãxPíd
 (
OS_MUTEX
 *
p_muãx
,

1462 
OS_TICK
 
timeout
,

1463 
OS_OPT
 
›t
,

1464 
CPU_TS
 *
p_ts
,

1465 
OS_ERR
 *
p_îr
);

1467 #i‡
OS_CFG_MUTEX_PEND_ABORT_EN
 > 0u

1468 
OS_OBJ_QTY
 
OSMuãxPídAb‹t
 (
OS_MUTEX
 *
p_muãx
,

1469 
OS_OPT
 
›t
,

1470 
OS_ERR
 *
p_îr
);

1473 
OSMuãxPo°
 (
OS_MUTEX
 *
p_muãx
,

1474 
OS_OPT
 
›t
,

1475 
OS_ERR
 *
p_îr
);

1480 
OS_MuãxCÃ
 (
OS_MUTEX
 *
p_muãx
);

1482 #i‡
OS_CFG_DBG_EN
 > 0u

1483 
OS_MuãxDbgLi°Add
 (
OS_MUTEX
 *
p_muãx
);

1485 
OS_MuãxDbgLi°Remove
 (
OS_MUTEX
 *
p_muãx
);

1488 
OS_MuãxInô
 (
OS_ERR
 *
p_îr
);

1496 #i‡
OS_CFG_PEND_MULTI_EN
 > 0u

1498 
OS_OBJ_QTY
 
OSPídMu…i
 (
OS_PEND_DATA
 *
p_≥nd_d©a_tbl
,

1499 
OS_OBJ_QTY
 
tbl_size
,

1500 
OS_TICK
 
timeout
,

1501 
OS_OPT
 
›t
,

1502 
OS_ERR
 *
p_îr
);

1506 
OS_OBJ_QTY
 
OS_PídMu…iGëRdy
 (
OS_PEND_DATA
 *
p_≥nd_d©a_tbl
,

1507 
OS_OBJ_QTY
 
tbl_size
);

1509 
CPU_BOOLEAN
 
OS_PídMu…iVÆid©e
 (
OS_PEND_DATA
 *
p_≥nd_d©a_tbl
,

1510 
OS_OBJ_QTY
 
tbl_size
);

1512 
OS_PídMu…iWaô
 (
OS_PEND_DATA
 *
p_≥nd_d©a_tbl
,

1513 
OS_OBJ_QTY
 
tbl_size
,

1514 
OS_TICK
 
timeout
);

1521 #i‡
OS_CFG_Q_EN
 > 0u

1523 
OSQCª©e
 (
OS_Q
 *
p_q
,

1524 
CPU_CHAR
 *
p_«me
,

1525 
OS_MSG_QTY
 
max_qty
,

1526 
OS_ERR
 *
p_îr
);

1528 #i‡
OS_CFG_Q_DEL_EN
 > 0u

1529 
OS_OBJ_QTY
 
OSQDñ
 (
OS_Q
 *
p_q
,

1530 
OS_OPT
 
›t
,

1531 
OS_ERR
 *
p_îr
);

1534 #i‡
OS_CFG_Q_FLUSH_EN
 > 0u

1535 
OS_MSG_QTY
 
OSQFlush
 (
OS_Q
 *
p_q
,

1536 
OS_ERR
 *
p_îr
);

1539 *
OSQPíd
 (
OS_Q
 *
p_q
,

1540 
OS_TICK
 
timeout
,

1541 
OS_OPT
 
›t
,

1542 
OS_MSG_SIZE
 *
p_msg_size
,

1543 
CPU_TS
 *
p_ts
,

1544 
OS_ERR
 *
p_îr
);

1546 #i‡
OS_CFG_Q_PEND_ABORT_EN
 > 0u

1547 
OS_OBJ_QTY
 
OSQPídAb‹t
 (
OS_Q
 *
p_q
,

1548 
OS_OPT
 
›t
,

1549 
OS_ERR
 *
p_îr
);

1552 
OSQPo°
 (
OS_Q
 *
p_q
,

1553 *
p_void
,

1554 
OS_MSG_SIZE
 
msg_size
,

1555 
OS_OPT
 
›t
,

1556 
OS_ERR
 *
p_îr
);

1560 
OS_QCÃ
 (
OS_Q
 *
p_q
);

1562 #i‡
OS_CFG_DBG_EN
 > 0u

1563 
OS_QDbgLi°Add
 (
OS_Q
 *
p_q
);

1565 
OS_QDbgLi°Remove
 (
OS_Q
 *
p_q
);

1568 
OS_QInô
 (
OS_ERR
 *
p_îr
);

1570 
OS_QPo°
 (
OS_Q
 *
p_q
,

1571 *
p_void
,

1572 
OS_MSG_SIZE
 
msg_size
,

1573 
OS_OPT
 
›t
,

1574 
CPU_TS
 
ts
,

1575 
OS_ERR
 *
p_îr
);

1583 #i‡
OS_CFG_SEM_EN
 > 0u

1585 
OSSemCª©e
 (
OS_SEM
 *
p_£m
,

1586 
CPU_CHAR
 *
p_«me
,

1587 
OS_SEM_CTR
 
˙t
,

1588 
OS_ERR
 *
p_îr
);

1590 
OS_OBJ_QTY
 
OSSemDñ
 (
OS_SEM
 *
p_£m
,

1591 
OS_OPT
 
›t
,

1592 
OS_ERR
 *
p_îr
);

1594 
OS_SEM_CTR
 
OSSemPíd
 (
OS_SEM
 *
p_£m
,

1595 
OS_TICK
 
timeout
,

1596 
OS_OPT
 
›t
,

1597 
CPU_TS
 *
p_ts
,

1598 
OS_ERR
 *
p_îr
);

1600 #i‡
OS_CFG_SEM_PEND_ABORT_EN
 > 0u

1601 
OS_OBJ_QTY
 
OSSemPídAb‹t
 (
OS_SEM
 *
p_£m
,

1602 
OS_OPT
 
›t
,

1603 
OS_ERR
 *
p_îr
);

1606 
OS_SEM_CTR
 
OSSemPo°
 (
OS_SEM
 *
p_£m
,

1607 
OS_OPT
 
›t
,

1608 
OS_ERR
 *
p_îr
);

1610 #i‡
OS_CFG_SEM_SET_EN
 > 0u

1611 
OSSemSë
 (
OS_SEM
 *
p_£m
,

1612 
OS_SEM_CTR
 
˙t
,

1613 
OS_ERR
 *
p_îr
);

1618 
OS_SemCÃ
 (
OS_SEM
 *
p_£m
);

1620 #i‡
OS_CFG_DBG_EN
 > 0u

1621 
OS_SemDbgLi°Add
 (
OS_SEM
 *
p_£m
);

1623 
OS_SemDbgLi°Remove
 (
OS_SEM
 *
p_£m
);

1626 
OS_SemInô
 (
OS_ERR
 *
p_îr
);

1628 
OS_SEM_CTR
 
OS_SemPo°
 (
OS_SEM
 *
p_£m
,

1629 
OS_OPT
 
›t
,

1630 
CPU_TS
 
ts
,

1631 
OS_ERR
 *
p_îr
);

1639 #i‡
OS_CFG_TASK_CHANGE_PRIO_EN
 > 0u

1640 
OSTaskCh™gePrio
 (
OS_TCB
 *
p_tcb
,

1641 
OS_PRIO
 
¥io_√w
,

1642 
OS_ERR
 *
p_îr
);

1645 
OSTaskCª©e
 (
OS_TCB
 *
p_tcb
,

1646 
CPU_CHAR
 *
p_«me
,

1647 
OS_TASK_PTR
 
p_èsk
,

1648 *
p_¨g
,

1649 
OS_PRIO
 
¥io
,

1650 
CPU_STK
 *
p_°k_ba£
,

1651 
CPU_STK_SIZE
 
°k_limô
,

1652 
CPU_STK_SIZE
 
°k_size
,

1653 
OS_MSG_QTY
 
q_size
,

1654 
OS_TICK
 
time_qu™è
,

1655 *
p_ext
,

1656 
OS_OPT
 
›t
,

1657 
OS_ERR
 *
p_îr
);

1659 #i‡
OS_CFG_TASK_DEL_EN
 > 0u

1660 
OSTaskDñ
 (
OS_TCB
 *
p_tcb
,

1661 
OS_ERR
 *
p_îr
);

1664 #i‡
OS_CFG_TASK_Q_EN
 > 0u

1665 
OS_MSG_QTY
 
OSTaskQFlush
 (
OS_TCB
 *
p_tcb
,

1666 
OS_ERR
 *
p_îr
);

1668 *
OSTaskQPíd
 (
OS_TICK
 
timeout
,

1669 
OS_OPT
 
›t
,

1670 
OS_MSG_SIZE
 *
p_msg_size
,

1671 
CPU_TS
 *
p_ts
,

1672 
OS_ERR
 *
p_îr
);

1674 
CPU_BOOLEAN
 
OSTaskQPídAb‹t
 (
OS_TCB
 *
p_tcb
,

1675 
OS_OPT
 
›t
,

1676 
OS_ERR
 *
p_îr
);

1678 
OSTaskQPo°
 (
OS_TCB
 *
p_tcb
,

1679 *
p_void
,

1680 
OS_MSG_SIZE
 
msg_size
,

1681 
OS_OPT
 
›t
,

1682 
OS_ERR
 *
p_îr
);

1686 #i‡
OS_CFG_TASK_REG_TBL_SIZE
 > 0u

1687 
OS_REG
 
OSTaskRegGë
 (
OS_TCB
 *
p_tcb
,

1688 
OS_REG_ID
 
id
,

1689 
OS_ERR
 *
p_îr
);

1691 
OS_REG_ID
 
OSTaskRegGëID
 (
OS_ERR
 *
p_îr
);

1693 
OSTaskRegSë
 (
OS_TCB
 *
p_tcb
,

1694 
OS_REG_ID
 
id
,

1695 
OS_REG
 
vÆue
,

1696 
OS_ERR
 *
p_îr
);

1699 #i‡
OS_CFG_TASK_SUSPEND_EN
 > 0u

1700 
OSTaskResume
 (
OS_TCB
 *
p_tcb
,

1701 
OS_ERR
 *
p_îr
);

1703 
OSTaskSu•íd
 (
OS_TCB
 *
p_tcb
,

1704 
OS_ERR
 *
p_îr
);

1707 
OS_SEM_CTR
 
OSTaskSemPíd
 (
OS_TICK
 
timeout
,

1708 
OS_OPT
 
›t
,

1709 
CPU_TS
 *
p_ts
,

1710 
OS_ERR
 *
p_îr
);

1712 #i‡(
OS_CFG_TASK_SEM_PEND_ABORT_EN
 > 0u)

1713 
CPU_BOOLEAN
 
OSTaskSemPídAb‹t
 (
OS_TCB
 *
p_tcb
,

1714 
OS_OPT
 
›t
,

1715 
OS_ERR
 *
p_îr
);

1718 
OS_SEM_CTR
 
OSTaskSemPo°
 (
OS_TCB
 *
p_tcb
,

1719 
OS_OPT
 
›t
,

1720 
OS_ERR
 *
p_îr
);

1722 
OS_SEM_CTR
 
OSTaskSemSë
 (
OS_TCB
 *
p_tcb
,

1723 
OS_SEM_CTR
 
˙t
,

1724 
OS_ERR
 *
p_îr
);

1726 #i‡
OS_CFG_STAT_TASK_STK_CHK_EN
 > 0u

1727 
OSTaskStkChk
 (
OS_TCB
 *
p_tcb
,

1728 
CPU_STK_SIZE
 *
p_‰ì
,

1729 
CPU_STK_SIZE
 *
p_u£d
,

1730 
OS_ERR
 *
p_îr
);

1733 #i‡
OS_CFG_SCHED_ROUND_ROBIN_EN
 > 0u

1734 
OSTaskTimeQu™èSë
 (
OS_TCB
 *
p_tcb
,

1735 
OS_TICK
 
time_qu™è
,

1736 
OS_ERR
 *
p_îr
);

1741 
OS_TaskBlock
 (
OS_TCB
 *
p_tcb
,

1742 
OS_TICK
 
timeout
);

1744 #i‡
OS_CFG_DBG_EN
 > 0u

1745 
OS_TaskDbgLi°Add
 (
OS_TCB
 *
p_tcb
);

1747 
OS_TaskDbgLi°Remove
 (
OS_TCB
 *
p_tcb
);

1750 
OS_TaskInô
 (
OS_ERR
 *
p_îr
);

1752 
OS_TaskInôTCB
 (
OS_TCB
 *
p_tcb
);

1754 
OS_TaskQPo°
 (
OS_TCB
 *
p_tcb
,

1755 *
p_void
,

1756 
OS_MSG_SIZE
 
msg_size
,

1757 
OS_OPT
 
›t
,

1758 
CPU_TS
 
ts
,

1759 
OS_ERR
 *
p_îr
);

1761 
OS_TaskRdy
 (
OS_TCB
 *
p_tcb
);

1763 #i‡
OS_CFG_TASK_SUSPEND_EN
 > 0u

1764 
OS_TaskResume
 (
OS_TCB
 *
p_tcb
,

1765 
OS_ERR
 *
p_îr
);

1768 
OS_TaskRëu∫
 ();

1770 
OS_SEM_CTR
 
OS_TaskSemPo°
 (
OS_TCB
 *
p_tcb
,

1771 
OS_OPT
 
›t
,

1772 
CPU_TS
 
ts
,

1773 
OS_ERR
 *
p_îr
);

1775 #i‡
OS_CFG_TASK_SUSPEND_EN
 > 0u

1776 
OS_TaskSu•íd
 (
OS_TCB
 *
p_tcb
,

1777 
OS_ERR
 *
p_îr
);

1785 #i‡
deföed
(
OS_CFG_TLS_TBL_SIZE
) && (OS_CFG_TLS_TBL_SIZE > 0u)

1786 
OS_TLS_ID
 
OS_TLS_GëID
 (
OS_ERR
 *
p_îr
);

1788 
OS_TLS
 
OS_TLS_GëVÆue
 (
OS_TCB
 *
p_tcb
,

1789 
OS_TLS_ID
 
id
,

1790 
OS_ERR
 *
p_îr
);

1792 
OS_TLS_Inô
 (
OS_ERR
 *
p_îr
);

1794 
OS_TLS_SëVÆue
 (
OS_TCB
 *
p_tcb
,

1795 
OS_TLS_ID
 
id
,

1796 
OS_TLS
 
vÆue
,

1797 
OS_ERR
 *
p_îr
);

1799 
OS_TLS_SëDe°ru˘
 (
OS_TLS_ID
 
id
,

1800 
OS_TLS_DESTRUCT_PTR
 
p_de°ru˘
,

1801 
OS_ERR
 *
p_îr
);

1803 
OS_TLS_TaskCª©e
 (
OS_TCB
 *
p_tcb
);

1805 
OS_TLS_TaskDñ
 (
OS_TCB
 *
p_tcb
);

1807 
OS_TLS_TaskSw
 ();

1815 
OSTimeDly
 (
OS_TICK
 
dly
,

1816 
OS_OPT
 
›t
,

1817 
OS_ERR
 *
p_îr
);

1819 #i‡
OS_CFG_TIME_DLY_HMSM_EN
 > 0u

1820 
OSTimeDlyHMSM
 (
CPU_INT16U
 
hours
,

1821 
CPU_INT16U
 
möuãs
,

1822 
CPU_INT16U
 
£c⁄ds
,

1823 
CPU_INT32U
 
mûli
,

1824 
OS_OPT
 
›t
,

1825 
OS_ERR
 *
p_îr
);

1828 #i‡
OS_CFG_TIME_DLY_RESUME_EN
 > 0u

1829 
OSTimeDlyResume
 (
OS_TCB
 *
p_tcb
,

1830 
OS_ERR
 *
p_îr
);

1833 
OS_TICK
 
OSTimeGë
 (
OS_ERR
 *
p_îr
);

1835 
OSTimeSë
 (
OS_TICK
 
ticks
,

1836 
OS_ERR
 *
p_îr
);

1838 
OSTimeTick
 ();

1845 #i‡
OS_CFG_TMR_EN
 > 0u

1846 
OSTmrCª©e
 (
OS_TMR
 *
p_tmr
,

1847 
CPU_CHAR
 *
p_«me
,

1848 
OS_TICK
 
dly
,

1849 
OS_TICK
 
≥riod
,

1850 
OS_OPT
 
›t
,

1851 
OS_TMR_CALLBACK_PTR
 
p_ˇŒback
,

1852 *
p_ˇŒback_¨g
,

1853 
OS_ERR
 *
p_îr
);

1855 
CPU_BOOLEAN
 
OSTmrDñ
 (
OS_TMR
 *
p_tmr
,

1856 
OS_ERR
 *
p_îr
);

1858 
OS_TICK
 
OSTmrRemaöGë
 (
OS_TMR
 *
p_tmr
,

1859 
OS_ERR
 *
p_îr
);

1861 
CPU_BOOLEAN
 
OSTmrSèπ
 (
OS_TMR
 *
p_tmr
,

1862 
OS_ERR
 *
p_îr
);

1864 
OS_STATE
 
OSTmrSèãGë
 (
OS_TMR
 *
p_tmr
,

1865 
OS_ERR
 *
p_îr
);

1867 
CPU_BOOLEAN
 
OSTmrSt›
 (
OS_TMR
 *
p_tmr
,

1868 
OS_OPT
 
›t
,

1869 *
p_ˇŒback_¨g
,

1870 
OS_ERR
 *
p_îr
);

1874 
OS_TmrCÃ
 (
OS_TMR
 *
p_tmr
);

1876 #i‡
OS_CFG_DBG_EN
 > 0u

1877 
OS_TmrDbgLi°Add
 (
OS_TMR
 *
p_tmr
);

1879 
OS_TmrDbgLi°Remove
 (
OS_TMR
 *
p_tmr
);

1882 
OS_TmrInô
 (
OS_ERR
 *
p_îr
);

1884 
OS_TmrLök
 (
OS_TMR
 *
p_tmr
,

1885 
OS_OPT
 
›t
);

1887 
OS_TmrRe£tPók
 ();

1889 
OS_TmrU∆ök
 (
OS_TMR
 *
p_tmr
);

1891 
OS_TmrTask
 (*
p_¨g
);

1900 
OSInô
 (
OS_ERR
 *
p_îr
);

1902 
OSI¡E¡î
 ();

1903 
OSI¡Exô
 ();

1905 #ifde‡
OS_SAFETY_CRITICAL_IEC61508


1906 
OSSa„tyCrôiˇlSèπ
 ();

1909 #i‡
OS_CFG_SCHED_ROUND_ROBIN_EN
 > 0u

1910 
OSSchedRoundRoböCfg
 (
CPU_BOOLEAN
 
í
,

1911 
OS_TICK
 
dÊt_time_qu™è
,

1912 
OS_ERR
 *
p_îr
);

1914 
OSSchedRoundRoböYõld
 (
OS_ERR
 *
p_îr
);

1918 
OSSched
 ();

1920 
OSSchedLock
 (
OS_ERR
 *
p_îr
);

1921 
OSSchedU∆ock
 (
OS_ERR
 *
p_îr
);

1923 
OSSèπ
 (
OS_ERR
 *
p_îr
);

1925 #i‡
OS_CFG_STAT_TASK_EN
 > 0u

1926 
OSSètRe£t
 (
OS_ERR
 *
p_îr
);

1928 
OSSètTaskCPUUßgeInô
 (
OS_ERR
 *
p_îr
);

1931 
CPU_INT16U
 
OSVîsi⁄
 (
OS_ERR
 *
p_îr
);

1935 
OS_IdÀTask
 (*
p_¨g
);

1937 
OS_IdÀTaskInô
 (
OS_ERR
 *
p_îr
);

1939 #i‡
OS_CFG_STAT_TASK_EN
 > 0u

1940 
OS_SètTask
 (*
p_¨g
);

1943 
OS_SètTaskInô
 (
OS_ERR
 *
p_îr
);

1945 
OS_TickTask
 (*
p_¨g
);

1946 
OS_TickTaskInô
 (
OS_ERR
 *
p_îr
);

1957 
OSInôHook
 ();

1959 
OSTaskCª©eHook
 (
OS_TCB
 *
p_tcb
);

1960 
OSTaskDñHook
 (
OS_TCB
 *
p_tcb
);

1962 
OSIdÀTaskHook
 ();

1964 
OSTaskRëu∫Hook
 (
OS_TCB
 *
p_tcb
);

1966 
OSSètTaskHook
 ();

1968 
CPU_STK
 *
OSTaskStkInô
 (
OS_TASK_PTR
 
p_èsk
,

1969 *
p_¨g
,

1970 
CPU_STK
 *
p_°k_ba£
,

1971 
CPU_STK
 *
p_°k_limô
,

1972 
CPU_STK_SIZE
 
°k_size
,

1973 
OS_OPT
 
›t
);

1975 
OSTaskSwHook
 ();

1977 
OSTimeTickHook
 ();

1988 
OSCfg_Inô
 ();

1990 #i‡
OS_CFG_DBG_EN
 > 0u

1991 
OS_Dbg_Inô
 ();

1995 #i‡
OS_CFG_ISR_POST_DEFERRED_EN
 > 0u

1996 
OS_I¡QTaskInô
 (
OS_ERR
 *
p_îr
);

1998 
OS_I¡QPo°
 (
OS_OBJ_TYPE
 
ty≥
,

1999 *
p_obj
,

2000 *
p_void
,

2001 
OS_MSG_SIZE
 
msg_size
,

2002 
OS_FLAGS
 
Êags
,

2003 
OS_OPT
 
›t
,

2004 
CPU_TS
 
ts
,

2005 
OS_ERR
 *
p_îr
);

2007 
OS_I¡QRePo°
 ();

2009 
OS_I¡QTask
 (*
p_¨g
);

2014 
OS_MsgPoﬁCª©e
 (
OS_MSG
 *
p_msg
,

2015 
OS_MSG_QTY
 
size
);

2017 
OS_MsgPoﬁInô
 (
OS_ERR
 *
p_îr
);

2019 
OS_MSG_QTY
 
OS_MsgQFªeAŒ
 (
OS_MSG_Q
 *
p_msg_q
);

2021 *
OS_MsgQGë
 (
OS_MSG_Q
 *
p_msg_q
,

2022 
OS_MSG_SIZE
 *
p_msg_size
,

2023 
CPU_TS
 *
p_ts
,

2024 
OS_ERR
 *
p_îr
);

2026 
OS_MsgQInô
 (
OS_MSG_Q
 *
p_msg_q
,

2027 
OS_MSG_QTY
 
size
);

2029 
OS_MsgQPut
 (
OS_MSG_Q
 *
p_msg_q
,

2030 *
p_void
,

2031 
OS_MSG_SIZE
 
msg_size
,

2032 
OS_OPT
 
›t
,

2033 
CPU_TS
 
ts
,

2034 
OS_ERR
 *
p_îr
);

2038 
OS_Píd
 (
OS_PEND_DATA
 *
p_≥nd_d©a
,

2039 
OS_PEND_OBJ
 *
p_obj
,

2040 
OS_STATE
 
≥ndög_⁄
,

2041 
OS_TICK
 
timeout
);

2043 
OS_PídAb‹t
 (
OS_PEND_OBJ
 *
p_obj
,

2044 
OS_TCB
 *
p_tcb
,

2045 
CPU_TS
 
ts
);

2047 
OS_PídAb‹t1
 (
OS_PEND_OBJ
 *
p_obj
,

2048 
OS_TCB
 *
p_tcb
,

2049 
CPU_TS
 
ts
);

2051 
OS_PídObjDñ
 (
OS_PEND_OBJ
 *
p_obj
,

2052 
OS_TCB
 *
p_tcb
,

2053 
CPU_TS
 
ts
);

2055 
OS_PídObjDñ1
 (
OS_PEND_OBJ
 *
p_obj
,

2056 
OS_TCB
 *
p_tcb
,

2057 
CPU_TS
 
ts
);

2059 
OS_Po°
 (
OS_PEND_OBJ
 *
p_obj
,

2060 
OS_TCB
 *
p_tcb
,

2061 *
p_void
,

2062 
OS_MSG_SIZE
 
msg_size
,

2063 
CPU_TS
 
ts
);

2065 
OS_Po°1
 (
OS_PEND_OBJ
 *
p_obj
,

2066 
OS_TCB
 *
p_tcb
,

2067 *
p_void
,

2068 
OS_MSG_SIZE
 
msg_size
,

2069 
CPU_TS
 
ts
);

2073 
OS_PrioInô
 ();

2075 
OS_PrioIn£π
 (
OS_PRIO
 
¥io
);

2077 
OS_PrioRemove
 (
OS_PRIO
 
¥io
);

2079 
OS_PRIO
 
OS_PrioGëHighe°
 ();

2083 #i‡
OS_CFG_ISR_POST_DEFERRED_EN
 > 0u

2084 
OS_Sched0
 ();

2087 #i‡
OS_CFG_SCHED_LOCK_TIME_MEAS_EN
 > 0u

2088 
OS_SchedLockTimeMósSèπ
 ();

2089 
OS_SchedLockTimeMósSt›
 ();

2092 #i‡
OS_CFG_SCHED_ROUND_ROBIN_EN
 > 0u

2093 
OS_SchedRoundRobö
 (
OS_RDY_LIST
 *
p_rdy_li°
);

2098 
OS_RdyLi°Inô
 ();

2100 
OS_RdyLi°In£π
 (
OS_TCB
 *
p_tcb
);

2102 
OS_RdyLi°In£πHód
 (
OS_TCB
 *
p_tcb
);

2104 
OS_RdyLi°In£πTaû
 (
OS_TCB
 *
p_tcb
);

2106 
OS_RdyLi°MoveHódToTaû
 (
OS_RDY_LIST
 *
p_rdy_li°
);

2108 
OS_RdyLi°Remove
 (
OS_TCB
 *
p_tcb
);

2112 
OS_PídD©aInô
 (
OS_TCB
 *
p_tcb
,

2113 
OS_PEND_DATA
 *
p_≥nd_d©a_tbl
,

2114 
OS_OBJ_QTY
 
tbl_size
);

2116 #i‡
OS_CFG_DBG_EN
 > 0u

2117 
OS_PídDbgNameAdd
 (
OS_PEND_OBJ
 *
p_obj
,

2118 
OS_TCB
 *
p_tcb
);

2120 
OS_PídDbgNameRemove
 (
OS_PEND_OBJ
 *
p_obj
,

2121 
OS_TCB
 *
p_tcb
);

2124 
OS_PEND_LIST
 *
OS_PídLi°GëPå
 (
OS_PEND_OBJ
 *
p_obj
);

2126 
OS_PídLi°Inô
 (
OS_PEND_LIST
 *
p_≥nd_li°
);

2128 
OS_PídLi°In£πHód
 (
OS_PEND_LIST
 *
p_≥nd_li°
,

2129 
OS_PEND_DATA
 *
p_≥nd_d©a
);

2131 
OS_PídLi°In£πPrio
 (
OS_PEND_LIST
 *
p_≥nd_li°
,

2132 
OS_PEND_DATA
 *
p_≥nd_d©a
);

2134 
OS_PídLi°Ch™gePrio
 (
OS_TCB
 *
p_tcb
,

2135 
OS_PRIO
 
¥io_√w
);

2137 
OS_PídLi°Remove
 (
OS_TCB
 *
p_tcb
);

2139 
OS_PídLi°Remove1
 (
OS_PEND_LIST
 *
p_≥nd_li°
,

2140 
OS_PEND_DATA
 *
p_≥nd_d©a
);

2144 
OS_TickLi°Inô
 ();

2146 
OS_TickLi°In£π
 (
OS_TCB
 *
p_tcb
,

2147 
OS_TICK
 
time
,

2148 
OS_OPT
 
›t
,

2149 
OS_ERR
 *
p_îr
);

2151 
OS_TickLi°Remove
 (
OS_TCB
 *
p_tcb
);

2153 
OS_TickLi°Re£tPók
 ();

2155 
OS_TickLi°Upd©e
 ();

2176 #i‚de‡
OS_CFG_APP_HOOKS_EN


2181 #i‚de‡
OS_CFG_ARG_CHK_EN


2186 #i‚de‡
OS_CFG_DBG_EN


2191 #i‚de‡
OS_CFG_CALLED_FROM_ISR_CHK_EN


2196 #i‚de‡
OS_CFG_OBJ_TYPE_CHK_EN


2201 #i‚de‡
OS_CFG_PEND_MULTI_EN


2206 #i‡ 
OS_CFG_PRIO_MAX
 < 8u

2211 #i‚de‡
OS_CFG_SCHED_LOCK_TIME_MEAS_EN


2214 #i‡ (
OS_CFG_SCHED_LOCK_TIME_MEAS_EN
 > 0u) && \

2215 (
	gOS_CFG_TS_EN
 < 1u)

2221 #i‚de‡
OS_CFG_SCHED_ROUND_ROBIN_EN


2226 #i‚de‡
OS_CFG_STK_SIZE_MIN


2230 #i‚de‡
OS_CFG_TS_EN


2233 #i‡ (
OS_CFG_TS_EN
 > 0u) && \

2234 (
	gCPU_CFG_TS_EN
 =
DEF_DISABLED
)

2245 #i‚de‡
OS_CFG_FLAG_EN


2248 #i‚de‡
OS_CFG_FLAG_DEL_EN


2252 #i‚de‡
OS_CFG_FLAG_MODE_CLR_EN


2256 #i‚de‡
OS_CFG_FLAG_PEND_ABORT_EN


2267 #i‚de‡
OS_CFG_MEM_EN


2277 #i‚de‡
OS_CFG_MUTEX_EN


2280 #i‚de‡
OS_CFG_MUTEX_DEL_EN


2284 #i‚de‡
OS_CFG_MUTEX_PEND_ABORT_EN


2295 #i‚de‡
OS_CFG_Q_EN


2298 #i‚de‡
OS_CFG_Q_DEL_EN


2302 #i‚de‡
OS_CFG_Q_FLUSH_EN


2306 #i‚de‡
OS_CFG_Q_PEND_ABORT_EN


2317 #i‚de‡
OS_CFG_SEM_EN


2320 #i‚de‡
OS_CFG_SEM_DEL_EN


2324 #i‚de‡
OS_CFG_SEM_PEND_ABORT_EN


2328 #i‚de‡
OS_CFG_SEM_SET_EN


2339 #i‚de‡
OS_CFG_STAT_TASK_EN


2343 #i‚de‡
OS_CFG_STAT_TASK_STK_CHK_EN


2347 #i‚de‡
OS_CFG_TASK_CHANGE_PRIO_EN


2351 #i‚de‡
OS_CFG_TASK_DEL_EN


2355 #i‚de‡
OS_CFG_TASK_Q_EN


2359 #i‚de‡
OS_CFG_TASK_Q_PEND_ABORT_EN


2363 #i‚de‡
OS_CFG_TASK_PROFILE_EN


2367 #i‚de‡
OS_CFG_TASK_REG_TBL_SIZE


2371 #i‚de‡
OS_CFG_TASK_SEM_PEND_ABORT_EN


2375 #i‚de‡
OS_CFG_TASK_SUSPEND_EN


2385 #i‚de‡
OS_CFG_TIME_DLY_HMSM_EN


2389 #i‚de‡
OS_CFG_TIME_DLY_RESUME_EN


2399 #i‚de‡
OS_CFG_TMR_EN


2402 #i‚de‡
OS_CFG_TMR_DEL_EN


2414 #i‡
LIB_VERSION
 < 126u

2420 #i‡
CPU_CORE_VERSION
 < 125u

2431 #ifde‡
__˝lu•lus


	@Source/os_cfg_app.c

35 
	#MICRIUM_SOURCE


	)

36 
	~<os_cfg_≠p.h
>

37 
	~<os.h
>

39 #ifde‡
VSC_INCLUDE_SOURCE_FILE_NAMES


40 c⁄° 
CPU_CHAR
 *
	gos_cfg_≠p__c
 = "$Id: $";

43 
	#OS_CFG_IDLE_TASK_STK_LIMIT
 ((
OS_CFG_IDLE_TASK_STK_SIZE
 * 
OS_CFG_TASK_STK_LIMIT_PCT_EMPTY
Ë/ 100u)

	)

44 
	#OS_CFG_INT_Q_TASK_STK_LIMIT
 ((
OS_CFG_INT_Q_TASK_STK_SIZE
 * 
OS_CFG_TASK_STK_LIMIT_PCT_EMPTY
Ë/ 100u)

	)

45 
	#OS_CFG_STAT_TASK_STK_LIMIT
 ((
OS_CFG_STAT_TASK_STK_SIZE
 * 
OS_CFG_TASK_STK_LIMIT_PCT_EMPTY
Ë/ 100u)

	)

46 
	#OS_CFG_TICK_TASK_STK_LIMIT
 ((
OS_CFG_TICK_TASK_STK_SIZE
 * 
OS_CFG_TASK_STK_LIMIT_PCT_EMPTY
Ë/ 100u)

	)

47 
	#OS_CFG_TMR_TASK_STK_LIMIT
 ((
OS_CFG_TMR_TASK_STK_SIZE
 * 
OS_CFG_TASK_STK_LIMIT_PCT_EMPTY
Ë/ 100u)

	)

55 
CPU_STK
 
	gOSCfg_IdÀTaskStk
 [
OS_CFG_IDLE_TASK_STK_SIZE
];

57 #i‡(
OS_CFG_ISR_POST_DEFERRED_EN
 > 0u)

58 
OS_INT_Q
 
	gOSCfg_I¡Q
 [
OS_CFG_INT_Q_SIZE
];

59 
CPU_STK
 
	gOSCfg_I¡QTaskStk
 [
OS_CFG_INT_Q_TASK_STK_SIZE
];

62 #i‡(
OS_CFG_ISR_STK_SIZE
 > 0u)

63 
CPU_STK
 
	gOSCfg_ISRStk
 [
OS_CFG_ISR_STK_SIZE
];

66 #i‡(
OS_MSG_EN
 > 0u)

67 
OS_MSG
 
	gOSCfg_MsgPoﬁ
 [
OS_CFG_MSG_POOL_SIZE
];

70 #i‡(
OS_CFG_STAT_TASK_EN
 > 0u)

71 
CPU_STK
 
	gOSCfg_SètTaskStk
 [
OS_CFG_STAT_TASK_STK_SIZE
];

74 
CPU_STK
 
	gOSCfg_TickTaskStk
 [
OS_CFG_TICK_TASK_STK_SIZE
];

75 
OS_TICK_SPOKE
 
	gOSCfg_TickWhìl
 [
OS_CFG_TICK_WHEEL_SIZE
];

77 #i‡(
OS_CFG_TMR_EN
 > 0u)

78 
CPU_STK
 
	gOSCfg_TmrTaskStk
 [
OS_CFG_TMR_TASK_STK_SIZE
];

79 
OS_TMR_SPOKE
 
	gOSCfg_TmrWhìl
 [
OS_CFG_TMR_WHEEL_SIZE
];

89 
CPU_STK
 * c⁄° 
	gOSCfg_IdÀTaskStkBa£På
 = (CPU_STK *)&
OSCfg_IdÀTaskStk
[0];

90 
CPU_STK_SIZE
 c⁄° 
	gOSCfg_IdÀTaskStkLimô
 = (CPU_STK_SIZE)
OS_CFG_IDLE_TASK_STK_LIMIT
;

91 
CPU_STK_SIZE
 c⁄° 
	gOSCfg_IdÀTaskStkSize
 = (CPU_STK_SIZE)
OS_CFG_IDLE_TASK_STK_SIZE
;

92 
CPU_INT32U
 c⁄° 
	gOSCfg_IdÀTaskStkSizeRAM
 = (CPU_INT32U )(
OSCfg_IdÀTaskStk
);

95 #i‡(
OS_CFG_ISR_POST_DEFERRED_EN
 > 0u)

96 
OS_INT_Q
 * c⁄° 
	gOSCfg_I¡QBa£På
 = (OS_INT_Q *)&
OSCfg_I¡Q
[0];

97 
OS_OBJ_QTY
 c⁄° 
	gOSCfg_I¡QSize
 = (OS_OBJ_QTY )
OS_CFG_INT_Q_SIZE
;

98 
CPU_INT32U
 c⁄° 
	gOSCfg_I¡QSizeRAM
 = (CPU_INT32U )(
OSCfg_I¡Q
);

99 
CPU_STK
 * c⁄° 
	gOSCfg_I¡QTaskStkBa£På
 = (CPU_STK *)&
OSCfg_I¡QTaskStk
[0];

100 
CPU_STK_SIZE
 c⁄° 
	gOSCfg_I¡QTaskStkLimô
 = (CPU_STK_SIZE)
OS_CFG_INT_Q_TASK_STK_LIMIT
;

101 
CPU_STK_SIZE
 c⁄° 
	gOSCfg_I¡QTaskStkSize
 = (CPU_STK_SIZE)
OS_CFG_INT_Q_TASK_STK_SIZE
;

102 
CPU_INT32U
 c⁄° 
	gOSCfg_I¡QTaskStkSizeRAM
 = (CPU_INT32U )(
OSCfg_I¡QTaskStk
);

104 
OS_INT_Q
 * c⁄° 
	gOSCfg_I¡QBa£På
 = (OS_INT_Q *)0;

105 
OS_OBJ_QTY
 c⁄° 
	gOSCfg_I¡QSize
 = (OS_OBJ_QTY )0;

106 
CPU_INT32U
 c⁄° 
	gOSCfg_I¡QSizeRAM
 = (CPU_INT32U )0;

107 
CPU_STK
 * c⁄° 
	gOSCfg_I¡QTaskStkBa£På
 = (CPU_STK *)0;

108 
CPU_STK_SIZE
 c⁄° 
	gOSCfg_I¡QTaskStkLimô
 = (CPU_STK_SIZE)0;

109 
CPU_STK_SIZE
 c⁄° 
	gOSCfg_I¡QTaskStkSize
 = (CPU_STK_SIZE)0;

110 
CPU_INT32U
 c⁄° 
	gOSCfg_I¡QTaskStkSizeRAM
 = (CPU_INT32U )0;

114 #i‡(
OS_CFG_ISR_STK_SIZE
 > 0u)

115 
CPU_STK
 * c⁄° 
	gOSCfg_ISRStkBa£På
 = (CPU_STK *)&
OSCfg_ISRStk
[0];

116 
CPU_STK_SIZE
 c⁄° 
	gOSCfg_ISRStkSize
 = (CPU_STK_SIZE)
OS_CFG_ISR_STK_SIZE
;

117 
CPU_INT32U
 c⁄° 
	gOSCfg_ISRStkSizeRAM
 = (CPU_INT32U )(
OSCfg_ISRStk
);

119 
CPU_STK
 * c⁄° 
	gOSCfg_ISRStkBa£På
 = (CPU_STK *)0;

120 
CPU_STK_SIZE
 c⁄° 
	gOSCfg_ISRStkSize
 = (CPU_STK_SIZE)0;

121 
CPU_INT32U
 c⁄° 
	gOSCfg_ISRStkSizeRAM
 = (CPU_INT32U )0;

125 #i‡(
OS_MSG_EN
 > 0u)

126 
OS_MSG_SIZE
 c⁄° 
	gOSCfg_MsgPoﬁSize
 = (OS_MSG_SIZE)
OS_CFG_MSG_POOL_SIZE
;

127 
CPU_INT32U
 c⁄° 
	gOSCfg_MsgPoﬁSizeRAM
 = (CPU_INT32U )(
OSCfg_MsgPoﬁ
);

128 
OS_MSG
 * c⁄° 
	gOSCfg_MsgPoﬁBa£På
 = (OS_MSG *)&
OSCfg_MsgPoﬁ
[0];

130 
OS_MSG_SIZE
 c⁄° 
	gOSCfg_MsgPoﬁSize
 = (OS_MSG_SIZE)0;

131 
CPU_INT32U
 c⁄° 
	gOSCfg_MsgPoﬁSizeRAM
 = (CPU_INT32U )0;

132 
OS_MSG
 * c⁄° 
	gOSCfg_MsgPoﬁBa£På
 = (OS_MSG *)0;

136 #i‡(
OS_CFG_STAT_TASK_EN
 > 0u)

137 
OS_PRIO
 c⁄° 
	gOSCfg_SètTaskPrio
 = (OS_PRIO )
OS_CFG_STAT_TASK_PRIO
;

138 
OS_RATE_HZ
 c⁄° 
	gOSCfg_SètTaskR©e_Hz
 = (OS_RATE_HZ )
OS_CFG_STAT_TASK_RATE_HZ
;

139 
CPU_STK
 * c⁄° 
	gOSCfg_SètTaskStkBa£På
 = (CPU_STK *)&
OSCfg_SètTaskStk
[0];

140 
CPU_STK_SIZE
 c⁄° 
	gOSCfg_SètTaskStkLimô
 = (CPU_STK_SIZE)
OS_CFG_STAT_TASK_STK_LIMIT
;

141 
CPU_STK_SIZE
 c⁄° 
	gOSCfg_SètTaskStkSize
 = (CPU_STK_SIZE)
OS_CFG_STAT_TASK_STK_SIZE
;

142 
CPU_INT32U
 c⁄° 
	gOSCfg_SètTaskStkSizeRAM
 = (CPU_INT32U )(
OSCfg_SètTaskStk
);

144 
OS_PRIO
 c⁄° 
	gOSCfg_SètTaskPrio
 = (OS_PRIO )0;

145 
OS_RATE_HZ
 c⁄° 
	gOSCfg_SètTaskR©e_Hz
 = (OS_RATE_HZ )0;

146 
CPU_STK
 * c⁄° 
	gOSCfg_SètTaskStkBa£På
 = (CPU_STK *)0;

147 
CPU_STK_SIZE
 c⁄° 
	gOSCfg_SètTaskStkLimô
 = (CPU_STK_SIZE)0;

148 
CPU_STK_SIZE
 c⁄° 
	gOSCfg_SètTaskStkSize
 = (CPU_STK_SIZE)0;

149 
CPU_INT32U
 c⁄° 
	gOSCfg_SètTaskStkSizeRAM
 = (CPU_INT32U )0;

153 
CPU_STK_SIZE
 c⁄° 
	gOSCfg_StkSizeMö
 = (CPU_STK_SIZE)
OS_CFG_STK_SIZE_MIN
;

156 
OS_RATE_HZ
 c⁄° 
	gOSCfg_TickR©e_Hz
 = (OS_RATE_HZ )
OS_CFG_TICK_RATE_HZ
;

157 
OS_PRIO
 c⁄° 
	gOSCfg_TickTaskPrio
 = (OS_PRIO )
OS_CFG_TICK_TASK_PRIO
;

158 
CPU_STK
 * c⁄° 
	gOSCfg_TickTaskStkBa£På
 = (CPU_STK *)&
OSCfg_TickTaskStk
[0];

159 
CPU_STK_SIZE
 c⁄° 
	gOSCfg_TickTaskStkLimô
 = (CPU_STK_SIZE)
OS_CFG_TICK_TASK_STK_LIMIT
;

160 
CPU_STK_SIZE
 c⁄° 
	gOSCfg_TickTaskStkSize
 = (CPU_STK_SIZE)
OS_CFG_TICK_TASK_STK_SIZE
;

161 
CPU_INT32U
 c⁄° 
	gOSCfg_TickTaskStkSizeRAM
 = (CPU_INT32U )(
OSCfg_TickTaskStk
);

162 
OS_OBJ_QTY
 c⁄° 
	gOSCfg_TickWhìlSize
 = (OS_OBJ_QTY )
OS_CFG_TICK_WHEEL_SIZE
;

163 
CPU_INT32U
 c⁄° 
	gOSCfg_TickWhìlSizeRAM
 = (CPU_INT32U )(
OSCfg_TickWhìl
);

166 #i‡(
OS_CFG_TMR_EN
 > 0u)

167 
OS_PRIO
 c⁄° 
	gOSCfg_TmrTaskPrio
 = (OS_PRIO )
OS_CFG_TMR_TASK_PRIO
;

168 
OS_RATE_HZ
 c⁄° 
	gOSCfg_TmrTaskR©e_Hz
 = (OS_RATE_HZ )
OS_CFG_TMR_TASK_RATE_HZ
;

169 
CPU_STK
 * c⁄° 
	gOSCfg_TmrTaskStkBa£På
 = (CPU_STK *)&
OSCfg_TmrTaskStk
[0];

170 
CPU_STK_SIZE
 c⁄° 
	gOSCfg_TmrTaskStkLimô
 = (CPU_STK_SIZE)
OS_CFG_TMR_TASK_STK_LIMIT
;

171 
CPU_STK_SIZE
 c⁄° 
	gOSCfg_TmrTaskStkSize
 = (CPU_STK_SIZE)
OS_CFG_TMR_TASK_STK_SIZE
;

172 
CPU_INT32U
 c⁄° 
	gOSCfg_TmrTaskStkSizeRAM
 = (CPU_INT32U )(
OSCfg_TmrTaskStk
);

173 
OS_OBJ_QTY
 c⁄° 
	gOSCfg_TmrWhìlSize
 = (OS_OBJ_QTY )
OS_CFG_TMR_WHEEL_SIZE
;

174 
CPU_INT32U
 c⁄° 
	gOSCfg_TmrWhìlSizeRAM
 = (CPU_INT32U )(
OSCfg_TmrWhìl
);

176 
OS_PRIO
 c⁄° 
	gOSCfg_TmrTaskPrio
 = (OS_PRIO )0;

177 
OS_RATE_HZ
 c⁄° 
	gOSCfg_TmrTaskR©e_Hz
 = (OS_RATE_HZ )0;

178 
CPU_STK
 * c⁄° 
	gOSCfg_TmrTaskStkBa£På
 = (CPU_STK *)0;

179 
CPU_STK_SIZE
 c⁄° 
	gOSCfg_TmrTaskStkLimô
 = (CPU_STK_SIZE)0;

180 
CPU_STK_SIZE
 c⁄° 
	gOSCfg_TmrTaskStkSize
 = (CPU_STK_SIZE)0;

181 
CPU_INT32U
 c⁄° 
	gOSCfg_TmrTaskStkSizeRAM
 = (CPU_INT32U )0;

182 
OS_OBJ_QTY
 c⁄° 
	gOSCfg_TmrWhìlSize
 = (OS_OBJ_QTY )0;

183 
CPU_INT32U
 c⁄° 
	gOSCfg_TmrWhìlSizeRAM
 = (CPU_INT32U )0;

194 
CPU_INT32U
 c⁄° 
	gOSCfg_D©aSizeRAM
 = (
OSCfg_IdÀTaskStk
)

196 #i‡(
OS_CFG_ISR_POST_DEFERRED_EN
 > 0u)

197 + (
OSCfg_I¡Q
)

198 + (
OSCfg_I¡QTaskStk
)

201 #i‡(
OS_MSG_EN
 > 0u)

202 + (
OSCfg_MsgPoﬁ
)

205 #i‡(
OS_CFG_STAT_TASK_EN
 > 0u)

206 + (
OSCfg_SètTaskStk
)

209 #i‡(
OS_CFG_TMR_EN
 > 0u)

210 + (
OSCfg_TmrTaskStk
)

211 + (
OSCfg_TmrWhìl
)

214 #i‡(
OS_CFG_ISR_STK_SIZE
 > 0u)

215 + (
OSCfg_ISRStk
)

217 + (
OSCfg_TickTaskStk
)

218 + (
OSCfg_TickWhìl
);

240 
	$OSCfg_Inô
 ()

242 c⁄° *
p_ãmp
;

245 
p_ãmp
 = (c⁄° *)&
OSCfg_D©aSizeRAM
;

247 
p_ãmp
 = (c⁄° *)&
OSCfg_IdÀTaskStkBa£På
;

248 
p_ãmp
 = (c⁄° *)&
OSCfg_IdÀTaskStkLimô
;

249 
p_ãmp
 = (c⁄° *)&
OSCfg_IdÀTaskStkSize
;

250 
p_ãmp
 = (c⁄° *)&
OSCfg_IdÀTaskStkSizeRAM
;

252 #i‡(
OS_CFG_ISR_POST_DEFERRED_EN
 > 0u)

253 
p_ãmp
 = (c⁄° *)&
OSCfg_I¡QBa£På
;

254 
p_ãmp
 = (c⁄° *)&
OSCfg_I¡QSize
;

255 
p_ãmp
 = (c⁄° *)&
OSCfg_I¡QSizeRAM
;

256 
p_ãmp
 = (c⁄° *)&
OSCfg_I¡QTaskStkBa£På
;

257 
p_ãmp
 = (c⁄° *)&
OSCfg_I¡QTaskStkLimô
;

258 
p_ãmp
 = (c⁄° *)&
OSCfg_I¡QTaskStkSize
;

259 
p_ãmp
 = (c⁄° *)&
OSCfg_I¡QTaskStkSizeRAM
;

262 
p_ãmp
 = (c⁄° *)&
OSCfg_ISRStkBa£På
;

263 
p_ãmp
 = (c⁄° *)&
OSCfg_ISRStkSize
;

264 
p_ãmp
 = (c⁄° *)&
OSCfg_ISRStkSizeRAM
;

266 #i‡(
OS_MSG_EN
 > 0u)

267 
p_ãmp
 = (c⁄° *)&
OSCfg_MsgPoﬁSize
;

268 
p_ãmp
 = (c⁄° *)&
OSCfg_MsgPoﬁSizeRAM
;

269 
p_ãmp
 = (c⁄° *)&
OSCfg_MsgPoﬁBa£På
;

272 #i‡(
OS_CFG_STAT_TASK_EN
 > 0u)

273 
p_ãmp
 = (c⁄° *)&
OSCfg_SètTaskPrio
;

274 
p_ãmp
 = (c⁄° *)&
OSCfg_SètTaskR©e_Hz
;

275 
p_ãmp
 = (c⁄° *)&
OSCfg_SètTaskStkBa£På
;

276 
p_ãmp
 = (c⁄° *)&
OSCfg_SètTaskStkLimô
;

277 
p_ãmp
 = (c⁄° *)&
OSCfg_SètTaskStkSize
;

278 
p_ãmp
 = (c⁄° *)&
OSCfg_SètTaskStkSizeRAM
;

281 
p_ãmp
 = (c⁄° *)&
OSCfg_StkSizeMö
;

283 
p_ãmp
 = (c⁄° *)&
OSCfg_TickR©e_Hz
;

284 
p_ãmp
 = (c⁄° *)&
OSCfg_TickTaskPrio
;

285 
p_ãmp
 = (c⁄° *)&
OSCfg_TickTaskStkBa£På
;

286 
p_ãmp
 = (c⁄° *)&
OSCfg_TickTaskStkLimô
;

287 
p_ãmp
 = (c⁄° *)&
OSCfg_TickTaskStkSize
;

288 
p_ãmp
 = (c⁄° *)&
OSCfg_TickTaskStkSizeRAM
;

289 
p_ãmp
 = (c⁄° *)&
OSCfg_TickWhìlSize
;

290 
p_ãmp
 = (c⁄° *)&
OSCfg_TickWhìlSizeRAM
;

292 #i‡(
OS_CFG_TMR_EN
 > 0u)

293 
p_ãmp
 = (c⁄° *)&
OSCfg_TmrTaskPrio
;

294 
p_ãmp
 = (c⁄° *)&
OSCfg_TmrTaskR©e_Hz
;

295 
p_ãmp
 = (c⁄° *)&
OSCfg_TmrTaskStkBa£På
;

296 
p_ãmp
 = (c⁄° *)&
OSCfg_TmrTaskStkLimô
;

297 
p_ãmp
 = (c⁄° *)&
OSCfg_TmrTaskStkSize
;

298 
p_ãmp
 = (c⁄° *)&
OSCfg_TmrTaskStkSizeRAM
;

299 
p_ãmp
 = (c⁄° *)&
OSCfg_TmrWhìlSize
;

300 
p_ãmp
 = (c⁄° *)&
OSCfg_TmrWhìlSizeRAM
;

302 
p_ãmp
 =Ö_temp;

303 
	}
}

	@Source/os_core.c

33 
	#MICRIUM_SOURCE


	)

34 
	~<os.h
>

36 #ifde‡
VSC_INCLUDE_SOURCE_FILE_NAMES


37 c⁄° 
CPU_CHAR
 *
	gos_c‹e__c
 = "$Id: $";

55 
	$OSInô
 (
OS_ERR
 *
p_îr
)

57 
CPU_STK
 *
p_°k
;

58 
CPU_STK_SIZE
 
size
;

62 #ifde‡
OS_SAFETY_CRITICAL


63 i‡(
p_îr
 =(
OS_ERR
 *)0) {

64 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

69 
	`OSInôHook
();

71 
OSI¡Ne°ögCå
 = (
OS_NESTING_CTR
)0;

73 
OSRu¬ög
 = 
OS_STATE_OS_STOPPED
;

75 
OSSchedLockNe°ögCå
 = (
OS_NESTING_CTR
)0;

77 
OSTCBCurPå
 = (
OS_TCB
 *)0;

78 
OSTCBHighRdyPå
 = (
OS_TCB
 *)0;

80 
OSPrioCur
 = (
OS_PRIO
)0;

81 
OSPrioHighRdy
 = (
OS_PRIO
)0;

82 
OSPrioSaved
 = (
OS_PRIO
)0;

84 #i‡
OS_CFG_SCHED_LOCK_TIME_MEAS_EN
 > 0u

85 
OSSchedLockTimeBegö
 = (
CPU_TS
)0;

86 
OSSchedLockTimeMax
 = (
CPU_TS
)0;

87 
OSSchedLockTimeMaxCur
 = (
CPU_TS
)0;

90 #ifde‡
OS_SAFETY_CRITICAL_IEC61508


91 
OSSa„tyCrôiˇlSèπFœg
 = 
DEF_FALSE
;

94 #i‡
OS_CFG_SCHED_ROUND_ROBIN_EN
 > 0u

95 
OSSchedRoundRoböEn
 = 
DEF_FALSE
;

96 
OSSchedRoundRoböDÊtTimeQu™è
 = 
OSCfg_TickR©e_Hz
 / 10u;

99 i‡(
OSCfg_ISRStkSize
 > (
CPU_STK_SIZE
)0) {

100 
p_°k
 = 
OSCfg_ISRStkBa£På
;

101 i‡(
p_°k
 !(
CPU_STK
 *)0) {

102 
size
 = 
OSCfg_ISRStkSize
;

103 
size
 > (
CPU_STK_SIZE
)0) {

104 
size
--;

105 *
p_°k
 = (
CPU_STK
)0;

106 
p_°k
++;

111 #i‡
OS_CFG_APP_HOOKS_EN
 > 0u

112 
OS_AµTaskCª©eHookPå
 = (
OS_APP_HOOK_TCB
 )0;

113 
OS_AµTaskDñHookPå
 = (
OS_APP_HOOK_TCB
 )0;

114 
OS_AµTaskRëu∫HookPå
 = (
OS_APP_HOOK_TCB
 )0;

116 
OS_AµIdÀTaskHookPå
 = (
OS_APP_HOOK_VOID
)0;

117 
OS_AµSètTaskHookPå
 = (
OS_APP_HOOK_VOID
)0;

118 
OS_AµTaskSwHookPå
 = (
OS_APP_HOOK_VOID
)0;

119 
OS_AµTimeTickHookPå
 = (
OS_APP_HOOK_VOID
)0;

122 #i‡
OS_CFG_TASK_REG_TBL_SIZE
 > 0u

123 
OSTaskRegNextAvaûID
 = (
OS_REG_ID
)0;

126 
	`OS_PrioInô
();

128 
	`OS_RdyLi°Inô
();

131 #i‡
OS_CFG_FLAG_EN
 > 0u

132 
	`OS_FœgInô
(
p_îr
);

133 i‡(*
p_îr
 !
OS_ERR_NONE
) {

139 #i‡
OS_CFG_MEM_EN
 > 0u

140 
	`OS_MemInô
(
p_îr
);

141 i‡(*
p_îr
 !
OS_ERR_NONE
) {

147 #i‡(
OS_MSG_EN
) > 0u

148 
	`OS_MsgPoﬁInô
(
p_îr
);

149 i‡(*
p_îr
 !
OS_ERR_NONE
) {

155 #i‡
OS_CFG_MUTEX_EN
 > 0u

156 
	`OS_MuãxInô
(
p_îr
);

157 i‡(*
p_îr
 !
OS_ERR_NONE
) {

163 #i‡
OS_CFG_Q_EN
 > 0u

164 
	`OS_QInô
(
p_îr
);

165 i‡(*
p_îr
 !
OS_ERR_NONE
) {

171 #i‡
OS_CFG_SEM_EN
 > 0u

172 
	`OS_SemInô
(
p_îr
);

173 i‡(*
p_îr
 !
OS_ERR_NONE
) {

179 #i‡
	`deföed
(
OS_CFG_TLS_TBL_SIZE
) && (OS_CFG_TLS_TBL_SIZE > 0u)

180 
	`OS_TLS_Inô
(
p_îr
);

181 i‡(*
p_îr
 !
OS_ERR_NONE
) {

187 
	`OS_TaskInô
(
p_îr
);

188 i‡(*
p_îr
 !
OS_ERR_NONE
) {

193 #i‡
OS_CFG_ISR_POST_DEFERRED_EN
 > 0u

194 
	`OS_I¡QTaskInô
(
p_îr
);

195 i‡(*
p_îr
 !
OS_ERR_NONE
) {

201 
	`OS_IdÀTaskInô
(
p_îr
);

202 i‡(*
p_îr
 !
OS_ERR_NONE
) {

207 
	`OS_TickTaskInô
(
p_îr
);

208 i‡(*
p_îr
 !
OS_ERR_NONE
) {

213 #i‡
OS_CFG_STAT_TASK_EN
 > 0u

214 
	`OS_SètTaskInô
(
p_îr
);

215 i‡(*
p_îr
 !
OS_ERR_NONE
) {

221 #i‡
OS_CFG_TMR_EN
 > 0u

222 
	`OS_TmrInô
(
p_îr
);

223 i‡(*
p_îr
 !
OS_ERR_NONE
) {

229 #i‡
OS_CFG_DBG_EN
 > 0u

230 
	`OS_Dbg_Inô
();

234 
	`OSCfg_Inô
();

235 
	}
}

266 
	$OSI¡E¡î
 ()

268 i‡(
OSRu¬ög
 !
OS_STATE_OS_RUNNING
) {

272 i‡(
OSI¡Ne°ögCå
 >(
OS_NESTING_CTR
)250u) {

276 
OSI¡Ne°ögCå
++;

277 
	}
}

300 
	$OSI¡Exô
 ()

302 
	`CPU_SR_ALLOC
();

306 i‡(
OSRu¬ög
 !
OS_STATE_OS_RUNNING
) {

310 
	`CPU_INT_DIS
();

311 i‡(
OSI¡Ne°ögCå
 =(
OS_NESTING_CTR
)0) {

312 
	`CPU_INT_EN
();

315 
OSI¡Ne°ögCå
--;

316 i‡(
OSI¡Ne°ögCå
 > (
OS_NESTING_CTR
)0) {

317 
	`CPU_INT_EN
();

321 i‡(
OSSchedLockNe°ögCå
 > (
OS_NESTING_CTR
)0) {

322 
	`CPU_INT_EN
();

326 
OSPrioHighRdy
 = 
	`OS_PrioGëHighe°
();

327 
OSTCBHighRdyPå
 = 
OSRdyLi°
[
OSPrioHighRdy
].
HódPå
;

328 i‡(
OSTCBHighRdyPå
 =
OSTCBCurPå
) {

329 
	`CPU_INT_EN
();

333 #i‡
OS_CFG_TASK_PROFILE_EN
 > 0u

334 
OSTCBHighRdyPå
->
CtxSwCå
++;

336 
OSTaskCtxSwCå
++;

338 #i‡
	`deföed
(
OS_CFG_TLS_TBL_SIZE
) && (OS_CFG_TLS_TBL_SIZE > 0u)

339 
	`OS_TLS_TaskSw
();

342 
	`OSI¡CtxSw
();

343 
	`CPU_INT_EN
();

344 
	}
}

362 #ifde‡
OS_SAFETY_CRITICAL_IEC61508


363 
	$OSSa„tyCrôiˇlSèπ
 ()

365 
OSSa„tyCrôiˇlSèπFœg
 = 
DEF_TRUE
;

366 
	}
}

387 
	$OSSched
 ()

389 
	`CPU_SR_ALLOC
();

393 i‡(
OSI¡Ne°ögCå
 > (
OS_NESTING_CTR
)0) {

397 i‡(
OSSchedLockNe°ögCå
 > (
OS_NESTING_CTR
)0) {

401 
	`CPU_INT_DIS
();

402 
OSPrioHighRdy
 = 
	`OS_PrioGëHighe°
();

403 
OSTCBHighRdyPå
 = 
OSRdyLi°
[
OSPrioHighRdy
].
HódPå
;

404 i‡(
OSTCBHighRdyPå
 =
OSTCBCurPå
) {

405 
	`CPU_INT_EN
();

409 #i‡
OS_CFG_TASK_PROFILE_EN
 > 0u

410 
OSTCBHighRdyPå
->
CtxSwCå
++;

412 
OSTaskCtxSwCå
++;

414 #i‡
	`deföed
(
OS_CFG_TLS_TBL_SIZE
) && (OS_CFG_TLS_TBL_SIZE > 0u)

415 
	`OS_TLS_TaskSw
();

418 
	`OS_TASK_SW
();

419 
	`CPU_INT_EN
();

420 
	}
}

444 
	$OSSchedLock
 (
OS_ERR
 *
p_îr
)

446 
	`CPU_SR_ALLOC
();

450 #ifde‡
OS_SAFETY_CRITICAL


451 i‡(
p_îr
 =(
OS_ERR
 *)0) {

452 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

457 #i‡
OS_CFG_CALLED_FROM_ISR_CHK_EN
 > 0u

458 i‡(
OSI¡Ne°ögCå
 > (
OS_NESTING_CTR
)0) {

459 *
p_îr
 = 
OS_ERR_SCHED_LOCK_ISR
;

464 i‡(
OSRu¬ög
 !
OS_STATE_OS_RUNNING
) {

465 *
p_îr
 = 
OS_ERR_OS_NOT_RUNNING
;

469 i‡(
OSSchedLockNe°ögCå
 >(
OS_NESTING_CTR
)250u) {

470 *
p_îr
 = 
OS_ERR_LOCK_NESTING_OVF
;

474 
	`CPU_CRITICAL_ENTER
();

475 
OSSchedLockNe°ögCå
++;

476 #i‡
OS_CFG_SCHED_LOCK_TIME_MEAS_EN
 > 0u

477 
	`OS_SchedLockTimeMósSèπ
();

479 
	`CPU_CRITICAL_EXIT
();

480 *
p_îr
 = 
OS_ERR_NONE
;

481 
	}
}

505 
	$OSSchedU∆ock
 (
OS_ERR
 *
p_îr
)

507 
	`CPU_SR_ALLOC
();

511 #ifde‡
OS_SAFETY_CRITICAL


512 i‡(
p_îr
 =(
OS_ERR
 *)0) {

513 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

518 #i‡
OS_CFG_CALLED_FROM_ISR_CHK_EN
 > 0u

519 i‡(
OSI¡Ne°ögCå
 > (
OS_NESTING_CTR
)0) {

520 *
p_îr
 = 
OS_ERR_SCHED_UNLOCK_ISR
;

525 i‡(
OSRu¬ög
 !
OS_STATE_OS_RUNNING
) {

526 *
p_îr
 = 
OS_ERR_OS_NOT_RUNNING
;

530 i‡(
OSSchedLockNe°ögCå
 =(
OS_NESTING_CTR
)0) {

531 *
p_îr
 = 
OS_ERR_SCHED_NOT_LOCKED
;

535 
	`CPU_CRITICAL_ENTER
();

536 
OSSchedLockNe°ögCå
--;

537 i‡(
OSSchedLockNe°ögCå
 > (
OS_NESTING_CTR
)0) {

538 
	`CPU_CRITICAL_EXIT
();

539 *
p_îr
 = 
OS_ERR_SCHED_LOCKED
;

543 #i‡
OS_CFG_SCHED_LOCK_TIME_MEAS_EN
 > 0u

544 
	`OS_SchedLockTimeMósSt›
();

547 
	`CPU_CRITICAL_EXIT
();

548 
	`OSSched
();

549 *
p_îr
 = 
OS_ERR_NONE
;

550 
	}
}

571 #i‡
OS_CFG_SCHED_ROUND_ROBIN_EN
 > 0u

572 
	$OSSchedRoundRoböCfg
 (
CPU_BOOLEAN
 
í
,

573 
OS_TICK
 
dÊt_time_qu™è
,

574 
OS_ERR
 *
p_îr
)

576 
	`CPU_SR_ALLOC
();

580 #ifde‡
OS_SAFETY_CRITICAL


581 i‡(
p_îr
 =(
OS_ERR
 *)0) {

582 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

587 
	`CPU_CRITICAL_ENTER
();

588 i‡(
í
 !
DEF_ENABLED
) {

589 
OSSchedRoundRoböEn
 = 
DEF_DISABLED
;

591 
OSSchedRoundRoböEn
 = 
DEF_ENABLED
;

594 i‡(
dÊt_time_qu™è
 > (
OS_TICK
)0) {

595 
OSSchedRoundRoböDÊtTimeQu™è
 = 
dÊt_time_qu™è
;

597 
OSSchedRoundRoböDÊtTimeQu™è
 = (
OS_TICK
)(
OSCfg_TickR©e_Hz
 / (
OS_RATE_HZ
)10);

599 
	`CPU_CRITICAL_EXIT
();

600 *
p_îr
 = 
OS_ERR_NONE
;

601 
	}
}

625 #i‡
OS_CFG_SCHED_ROUND_ROBIN_EN
 > 0u

626 
	$OSSchedRoundRoböYõld
 (
OS_ERR
 *
p_îr
)

628 
OS_RDY_LIST
 *
p_rdy_li°
;

629 
OS_TCB
 *
p_tcb
;

630 
	`CPU_SR_ALLOC
();

634 #ifde‡
OS_SAFETY_CRITICAL


635 i‡(
p_îr
 =(
OS_ERR
 *)0) {

636 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

641 #i‡
OS_CFG_CALLED_FROM_ISR_CHK_EN
 > 0u

642 i‡(
OSI¡Ne°ögCå
 > (
OS_NESTING_CTR
)0) {

643 *
p_îr
 = 
OS_ERR_YIELD_ISR
;

648 i‡(
OSSchedLockNe°ögCå
 > (
OS_NESTING_CTR
)0) {

649 *
p_îr
 = 
OS_ERR_SCHED_LOCKED
;

653 i‡(
OSSchedRoundRoböEn
 !
DEF_TRUE
) {

654 *
p_îr
 = 
OS_ERR_ROUND_ROBIN_DISABLED
;

658 
	`CPU_CRITICAL_ENTER
();

659 
p_rdy_li°
 = &
OSRdyLi°
[
OSPrioCur
];

660 i‡(
p_rdy_li°
->
NbrE¡rõs
 < (
OS_OBJ_QTY
)2) {

661 
	`CPU_CRITICAL_EXIT
();

662 *
p_îr
 = 
OS_ERR_ROUND_ROBIN_1
;

666 
	`OS_RdyLi°MoveHódToTaû
(
p_rdy_li°
);

667 
p_tcb
 = 
p_rdy_li°
->
HódPå
;

668 i‡(
p_tcb
->
TimeQu™è
 =(
OS_TICK
)0) {

669 
p_tcb
->
TimeQu™èCå
 = 
OSSchedRoundRoböDÊtTimeQu™è
;

671 
p_tcb
->
TimeQu™èCå
 =Ö_tcb->
TimeQu™è
;

674 
	`CPU_CRITICAL_EXIT
();

676 
	`OSSched
();

677 *
p_îr
 = 
OS_ERR_NONE
;

678 
	}
}

706 
	$OSSèπ
 (
OS_ERR
 *
p_îr
)

708 #ifde‡
OS_SAFETY_CRITICAL


709 i‡(
p_îr
 =(
OS_ERR
 *)0) {

710 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

715 i‡(
OSRu¬ög
 =
OS_STATE_OS_STOPPED
) {

716 
OSPrioHighRdy
 = 
	`OS_PrioGëHighe°
();

717 
OSPrioCur
 = 
OSPrioHighRdy
;

718 
OSTCBHighRdyPå
 = 
OSRdyLi°
[
OSPrioHighRdy
].
HódPå
;

719 
OSTCBCurPå
 = 
OSTCBHighRdyPå
;

720 
OSRu¬ög
 = 
OS_STATE_OS_RUNNING
;

721 
	`OSSèπHighRdy
();

722 *
p_îr
 = 
OS_ERR_FATAL_RETURN
;

724 *
p_îr
 = 
OS_ERR_OS_RUNNING
;

726 
	}
}

745 
CPU_INT16U
 
	$OSVîsi⁄
 (
OS_ERR
 *
p_îr
)

747 #ifde‡
OS_SAFETY_CRITICAL


748 i‡(
p_îr
 =(
OS_ERR
 *)0) {

749 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

750  ((
CPU_INT16U
)0u);

754 *
p_îr
 = 
OS_ERR_NONE
;

755  (
OS_VERSION
);

756 
	}
}

781 
	$OS_IdÀTask
 (*
p_¨g
)

783 
	`CPU_SR_ALLOC
();

787 
p_¨g
 =Ö_arg;

789 
DEF_ON
) {

790 
	`CPU_CRITICAL_ENTER
();

791 
OSIdÀTaskCå
++;

792 #i‡
OS_CFG_STAT_TASK_EN
 > 0u

793 
OSSètTaskCå
++;

795 
	`CPU_CRITICAL_EXIT
();

797 
	`OSIdÀTaskHook
();

799 
	}
}

816 
	$OS_IdÀTaskInô
 (
OS_ERR
 *
p_îr
)

818 #ifde‡
OS_SAFETY_CRITICAL


819 i‡(
p_îr
 =(
OS_ERR
 *)0) {

820 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

825 
OSIdÀTaskCå
 = (
OS_IDLE_CTR
)0;

827 
	`OSTaskCª©e
((
OS_TCB
 *)&
OSIdÀTaskTCB
,

828 (
CPU_CHAR
 *)((*)"uC/OS-III Idle Task"),

829 (
OS_TASK_PTR
)
OS_IdÀTask
,

831 (
OS_PRIO
 )(
OS_CFG_PRIO_MAX
 - 1u),

832 (
CPU_STK
 *)
OSCfg_IdÀTaskStkBa£På
,

833 (
CPU_STK_SIZE
)
OSCfg_IdÀTaskStkLimô
,

834 (
CPU_STK_SIZE
)
OSCfg_IdÀTaskStkSize
,

835 (
OS_MSG_QTY
 )0u,

836 (
OS_TICK
 )0u,

838 (
OS_OPT
 )(
OS_OPT_TASK_STK_CHK
 | 
OS_OPT_TASK_STK_CLR
 | 
OS_OPT_TASK_NO_TLS
),

839 (
OS_ERR
 *)
p_îr
);

840 
	}
}

873 
	$OS_Píd
 (
OS_PEND_DATA
 *
p_≥nd_d©a
,

874 
OS_PEND_OBJ
 *
p_obj
,

875 
OS_STATE
 
≥ndög_⁄
,

876 
OS_TICK
 
timeout
)

878 
OS_PEND_LIST
 *
p_≥nd_li°
;

882 
OSTCBCurPå
->
PídOn
 = 
≥ndög_⁄
;

883 
OSTCBCurPå
->
PídSètus
 = 
OS_STATUS_PEND_OK
;

885 
	`OS_TaskBlock
(
OSTCBCurPå
,

886 
timeout
);

888 i‡(
p_obj
 !(
OS_PEND_OBJ
 *)0) {

889 
p_≥nd_li°
 = &
p_obj
->
PídLi°
;

890 
p_≥nd_d©a
->
PídObjPå
 = 
p_obj
;

891 
	`OS_PídD©aInô
((
OS_TCB
 *)
OSTCBCurPå
,

892 (
OS_PEND_DATA
 *)
p_≥nd_d©a
,

893 (
OS_OBJ_QTY
 )1);

894 
	`OS_PídLi°In£πPrio
(
p_≥nd_li°
,

895 
p_≥nd_d©a
);

897 
OSTCBCurPå
->
PídD©aTblE¡rõs
 = (
OS_OBJ_QTY
 )0;

898 
OSTCBCurPå
->
PídD©aTblPå
 = (
OS_PEND_DATA
 *)0;

900 #i‡
OS_CFG_DBG_EN
 > 0u

901 
	`OS_PídDbgNameAdd
(
p_obj
,

902 
OSTCBCurPå
);

904 
	}
}

927 
	$OS_PídAb‹t
 (
OS_PEND_OBJ
 *
p_obj
,

928 
OS_TCB
 *
p_tcb
,

929 
CPU_TS
 
ts
)

931 
p_tcb
->
TaskSèã
) {

932 
OS_TASK_STATE_RDY
:

933 
OS_TASK_STATE_DLY
:

934 
OS_TASK_STATE_SUSPENDED
:

935 
OS_TASK_STATE_DLY_SUSPENDED
:

938 
OS_TASK_STATE_PEND
:

939 
OS_TASK_STATE_PEND_TIMEOUT
:

940 i‡(
p_tcb
->
PídOn
 =
OS_TASK_PEND_ON_MULTI
) {

941 
	`OS_PídAb‹t1
(
p_obj
,

942 
p_tcb
,

943 
ts
);

945 #i‡(
OS_MSG_EN
 > 0u)

946 
p_tcb
->
MsgPå
 = (*)0;

947 
p_tcb
->
MsgSize
 = (
OS_MSG_SIZE
)0u;

949 
p_tcb
->
TS
 = 
ts
;

950 i‡(
p_obj
 !(
OS_PEND_OBJ
 *)0) {

951 
	`OS_PídLi°Remove
(
p_tcb
);

953 
	`OS_TaskRdy
(
p_tcb
);

954 
p_tcb
->
TaskSèã
 = 
OS_TASK_STATE_RDY
;

955 
p_tcb
->
PídSètus
 = 
OS_STATUS_PEND_ABORT
;

956 
p_tcb
->
PídOn
 = 
OS_TASK_PEND_ON_NOTHING
;

959 
OS_TASK_STATE_PEND_SUSPENDED
:

960 
OS_TASK_STATE_PEND_TIMEOUT_SUSPENDED
:

961 i‡(
p_tcb
->
PídOn
 =
OS_TASK_PEND_ON_MULTI
) {

962 
	`OS_PídAb‹t1
(
p_obj
,

963 
p_tcb
,

964 
ts
);

966 #i‡(
OS_MSG_EN
 > 0u)

967 
p_tcb
->
MsgPå
 = (*)0;

968 
p_tcb
->
MsgSize
 = (
OS_MSG_SIZE
)0u;

970 
p_tcb
->
TS
 = 
ts
;

971 i‡(
p_obj
 !(
OS_PEND_OBJ
 *)0) {

972 
	`OS_PídLi°Remove
(
p_tcb
);

974 
	`OS_TickLi°Remove
(
p_tcb
);

975 
p_tcb
->
TaskSèã
 = 
OS_TASK_STATE_SUSPENDED
;

976 
p_tcb
->
PídSètus
 = 
OS_STATUS_PEND_ABORT
;

977 
p_tcb
->
PídOn
 = 
OS_TASK_PEND_ON_NOTHING
;

983 
	}
}

1033 
	$OS_PídAb‹t1
 (
OS_PEND_OBJ
 *
p_obj
,

1034 
OS_TCB
 *
p_tcb
,

1035 
CPU_TS
 
ts
)

1037 
OS_OBJ_QTY
 
n_≥nd_li°
;

1038 
OS_PEND_DATA
 *
p_≥nd_d©a
;

1042 
p_≥nd_d©a
 = 
p_tcb
->
PídD©aTblPå
;

1043 
n_≥nd_li°
 = 
p_tcb
->
PídD©aTblE¡rõs
;

1045 
n_≥nd_li°
 > (
OS_OBJ_QTY
)0) {

1046 i‡(
p_obj
 =
p_≥nd_d©a
->
PídObjPå
) {

1047 
p_≥nd_d©a
->
RdyObjPå
 = 
p_obj
;

1048 
p_≥nd_d©a
->
RdyTS
 = 
ts
;

1051 
p_≥nd_d©a
++;

1052 
n_≥nd_li°
--;

1054 
	}
}

1098 
	$OS_PídD©aInô
 (
OS_TCB
 *
p_tcb
,

1099 
OS_PEND_DATA
 *
p_≥nd_d©a_tbl
,

1100 
OS_OBJ_QTY
 
tbl_size
)

1102 
OS_OBJ_QTY
 
i
;

1106 
p_tcb
->
PídD©aTblE¡rõs
 = 
tbl_size
;

1107 
p_tcb
->
PídD©aTblPå
 = 
p_≥nd_d©a_tbl
;

1109 
i
 = 0u; i < 
tbl_size
; i++) {

1110 
p_≥nd_d©a_tbl
->
NextPå
 = (
OS_PEND_DATA
 *)0;

1111 
p_≥nd_d©a_tbl
->
PªvPå
 = (
OS_PEND_DATA
 *)0;

1112 
p_≥nd_d©a_tbl
->
RdyObjPå
 = (
OS_PEND_OBJ
 *)0;

1113 
p_≥nd_d©a_tbl
->
RdyMsgPå
 = (*)0;

1114 
p_≥nd_d©a_tbl
->
RdyMsgSize
 = (
OS_MSG_SIZE
 )0;

1115 
p_≥nd_d©a_tbl
->
RdyTS
 = (
CPU_TS
 )0;

1116 
p_≥nd_d©a_tbl
->
TCBPå
 = 
p_tcb
;

1117 
p_≥nd_d©a_tbl
++;

1119 
	}
}

1140 #i‡
OS_CFG_DBG_EN
 > 0u

1141 
	$OS_PídDbgNameAdd
 (
OS_PEND_OBJ
 *
p_obj
,

1142 
OS_TCB
 *
p_tcb
)

1144 
OS_PEND_LIST
 *
p_≥nd_li°
;

1145 
OS_PEND_DATA
 *
p_≥nd_d©a
;

1146 
OS_TCB
 *
p_tcb1
;

1149 i‡(
p_obj
 !(
OS_PEND_OBJ
 *)0) {

1150 
p_tcb
->
DbgNamePå
 = 
p_obj
->
NamePå
;

1151 
p_≥nd_li°
 = &
p_obj
->
PídLi°
;

1152 
p_≥nd_d©a
 = 
p_≥nd_li°
->
HódPå
;

1153 
p_tcb1
 = 
p_≥nd_d©a
->
TCBPå
;

1154 
p_obj
->
DbgNamePå
 = 
p_tcb1
->
NamePå
;

1156 
p_tcb
->
PídOn
) {

1157 
OS_TASK_PEND_ON_TASK_Q
:

1158 
p_tcb
->
DbgNamePå
 = (
CPU_CHAR
 *)((*)"Task Q");

1161 
OS_TASK_PEND_ON_TASK_SEM
:

1162 
p_tcb
->
DbgNamePå
 = (
CPU_CHAR
 *)((*)"Task Sem");

1166 
p_tcb
->
DbgNamePå
 = (
CPU_CHAR
 *)((*)" ");

1170 
	}
}

1174 
	$OS_PídDbgNameRemove
 (
OS_PEND_OBJ
 *
p_obj
,

1175 
OS_TCB
 *
p_tcb
)

1177 
OS_PEND_LIST
 *
p_≥nd_li°
;

1178 
OS_PEND_DATA
 *
p_≥nd_d©a
;

1179 
OS_TCB
 *
p_tcb1
;

1182 
p_tcb
->
DbgNamePå
 = (
CPU_CHAR
 *)((*)" ");

1183 
p_≥nd_li°
 = &
p_obj
->
PídLi°
;

1184 
p_≥nd_d©a
 = 
p_≥nd_li°
->
HódPå
;

1185 i‡(
p_≥nd_d©a
 !(
OS_PEND_DATA
 *)0) {

1186 
p_tcb1
 = 
p_≥nd_d©a
->
TCBPå
;

1187 
p_obj
->
DbgNamePå
 = 
p_tcb1
->
NamePå
;

1189 
p_obj
->
DbgNamePå
 = (
CPU_CHAR
 *)((*)" ");

1191 
	}
}

1276 
	$OS_PídLi°Ch™gePrio
 (
OS_TCB
 *
p_tcb
,

1277 
OS_PRIO
 
¥io_√w
)

1279 
OS_OBJ_QTY
 
n_≥nd_li°
;

1280 
OS_PEND_DATA
 *
p_≥nd_d©a
;

1281 
OS_PEND_LIST
 *
p_≥nd_li°
;

1282 
OS_PEND_OBJ
 *
p_obj
;

1285 
p_tcb
->
Prio
 = 
¥io_√w
;

1286 
p_≥nd_d©a
 = 
p_tcb
->
PídD©aTblPå
;

1287 
n_≥nd_li°
 = 
p_tcb
->
PídD©aTblE¡rõs
;

1289 
n_≥nd_li°
 > 0u) {

1290 
p_obj
 = 
p_≥nd_d©a
->
PídObjPå
;

1291 
p_≥nd_li°
 = &
p_obj
->
PídLi°
;

1292 i‡(
p_≥nd_li°
->
NbrE¡rõs
 > 1u) {

1293 
	`OS_PídLi°Remove1
(
p_≥nd_li°
,

1294 
p_≥nd_d©a
);

1295 
	`OS_PídLi°In£πPrio
(
p_≥nd_li°
,

1296 
p_≥nd_d©a
);

1298 
p_≥nd_d©a
++;

1299 
n_≥nd_li°
--;

1301 
	}
}

1319 
	$OS_PídLi°Inô
 (
OS_PEND_LIST
 *
p_≥nd_li°
)

1321 
p_≥nd_li°
->
HódPå
 = (
OS_PEND_DATA
 *)0;

1322 
p_≥nd_li°
->
TaûPå
 = (
OS_PEND_DATA
 *)0;

1323 
p_≥nd_li°
->
NbrE¡rõs
 = (
OS_OBJ_QTY
 )0;

1324 
	}
}

1373 
	$OS_PídLi°In£πHód
 (
OS_PEND_LIST
 *
p_≥nd_li°
,

1374 
OS_PEND_DATA
 *
p_≥nd_d©a
)

1376 
OS_PEND_DATA
 *
p_≥nd_d©a_√xt
;

1380 
p_≥nd_li°
->
NbrE¡rõs
++;

1381 
p_≥nd_d©a
->
NextPå
 = 
p_≥nd_li°
->
HódPå
;

1382 
p_≥nd_d©a
->
PªvPå
 = (
OS_PEND_DATA
 *)0;

1383 
p_≥nd_d©a_√xt
 = 
p_≥nd_li°
->
HódPå
;

1384 i‡(
p_≥nd_d©a_√xt
 !(
OS_PEND_DATA
 *)0) {

1385 
p_≥nd_d©a_√xt
->
PªvPå
 = 
p_≥nd_d©a
;

1387 
p_≥nd_li°
->
HódPå
 = 
p_≥nd_d©a
;

1388 i‡(
p_≥nd_li°
->
NbrE¡rõs
 == 1u) {

1389 
p_≥nd_li°
->
TaûPå
 = 
p_≥nd_d©a
;

1391 
	}
}

1461 
	$OS_PídLi°In£πPrio
 (
OS_PEND_LIST
 *
p_≥nd_li°
,

1462 
OS_PEND_DATA
 *
p_≥nd_d©a
)

1464 
OS_PRIO
 
¥io
;

1465 
OS_TCB
 *
p_tcb
;

1466 
OS_TCB
 *
p_tcb_√xt
;

1467 
OS_PEND_DATA
 *
p_≥nd_d©a_¥ev
;

1468 
OS_PEND_DATA
 *
p_≥nd_d©a_√xt
;

1472 
p_tcb
 = 
p_≥nd_d©a
->
TCBPå
;

1473 
¥io
 = 
p_tcb
->
Prio
;

1474 i‡(
p_≥nd_li°
->
NbrE¡rõs
 =(
OS_OBJ_QTY
)0) {

1475 
p_≥nd_li°
->
NbrE¡rõs
 = (
OS_OBJ_QTY
)1;

1476 
p_≥nd_d©a
->
NextPå
 = (
OS_PEND_DATA
 *)0;

1477 
p_≥nd_d©a
->
PªvPå
 = (
OS_PEND_DATA
 *)0;

1478 
p_≥nd_li°
->
HódPå
 = 
p_≥nd_d©a
;

1479 
p_≥nd_li°
->
TaûPå
 = 
p_≥nd_d©a
;

1481 
p_≥nd_li°
->
NbrE¡rõs
++;

1482 
p_≥nd_d©a_√xt
 = 
p_≥nd_li°
->
HódPå
;

1483 
p_≥nd_d©a_√xt
 !(
OS_PEND_DATA
 *)0) {

1484 
p_tcb_√xt
 = 
p_≥nd_d©a_√xt
->
TCBPå
;

1485 i‡(
¥io
 < 
p_tcb_√xt
->
Prio
) {

1488 
p_≥nd_d©a_√xt
 =Ö_≥nd_d©a_√xt->
NextPå
;

1491 i‡(
p_≥nd_d©a_√xt
 =(
OS_PEND_DATA
 *)0) {

1492 
p_≥nd_d©a
->
NextPå
 = (
OS_PEND_DATA
 *)0;

1493 
p_≥nd_d©a_¥ev
 = 
p_≥nd_li°
->
TaûPå
;

1494 
p_≥nd_d©a
->
PªvPå
 = 
p_≥nd_d©a_¥ev
;

1495 
p_≥nd_d©a_¥ev
->
NextPå
 = 
p_≥nd_d©a
;

1496 
p_≥nd_li°
->
TaûPå
 = 
p_≥nd_d©a
;

1498 i‡(
p_≥nd_d©a_√xt
->
PªvPå
 =(
OS_PEND_DATA
 *)0) {

1499 
p_≥nd_d©a_√xt
->
PªvPå
 = 
p_≥nd_d©a
;

1500 
p_≥nd_d©a
->
PªvPå
 = (
OS_PEND_DATA
 *)0;

1501 
p_≥nd_d©a
->
NextPå
 = 
p_≥nd_d©a_√xt
;

1502 
p_≥nd_li°
->
HódPå
 = 
p_≥nd_d©a
;

1504 
p_≥nd_d©a_¥ev
 = 
p_≥nd_d©a_√xt
->
PªvPå
;

1505 
p_≥nd_d©a
->
PªvPå
 = 
p_≥nd_d©a_¥ev
;

1506 
p_≥nd_d©a
->
NextPå
 = 
p_≥nd_d©a_√xt
;

1507 
p_≥nd_d©a_¥ev
->
NextPå
 = 
p_≥nd_d©a
;

1508 
p_≥nd_d©a_√xt
->
PªvPå
 = 
p_≥nd_d©a
;

1512 
	}
}

1564 
	$OS_PídLi°Remove
 (
OS_TCB
 *
p_tcb
)

1566 
OS_OBJ_QTY
 
n_≥nd_li°
;

1567 
OS_PEND_DATA
 *
p_≥nd_d©a
;

1568 
OS_PEND_LIST
 *
p_≥nd_li°
;

1569 
OS_PEND_OBJ
 *
p_obj
;

1573 
p_≥nd_d©a
 = 
p_tcb
->
PídD©aTblPå
;

1574 
n_≥nd_li°
 = 
p_tcb
->
PídD©aTblE¡rõs
;

1576 
n_≥nd_li°
 > (
OS_OBJ_QTY
)0) {

1577 
p_obj
 = 
p_≥nd_d©a
->
PídObjPå
;

1578 
p_≥nd_li°
 = &
p_obj
->
PídLi°
;

1579 
	`OS_PídLi°Remove1
(
p_≥nd_li°
,

1580 
p_≥nd_d©a
);

1581 
p_≥nd_d©a
++;

1582 
n_≥nd_li°
--;

1584 
p_tcb
->
PídD©aTblE¡rõs
 = (
OS_OBJ_QTY
 )0;

1585 
p_tcb
->
PídD©aTblPå
 = (
OS_PEND_DATA
 *)0;

1586 
	}
}

1639 
	$OS_PídLi°Remove1
 (
OS_PEND_LIST
 *
p_≥nd_li°
,

1640 
OS_PEND_DATA
 *
p_≥nd_d©a
)

1642 
OS_PEND_DATA
 *
p_¥ev
;

1643 
OS_PEND_DATA
 *
p_√xt
;

1647 i‡(
p_≥nd_li°
->
NbrE¡rõs
 == 1u) {

1648 
p_≥nd_li°
->
HódPå
 = (
OS_PEND_DATA
 *)0;

1649 
p_≥nd_li°
->
TaûPå
 = (
OS_PEND_DATA
 *)0;

1651 } i‡(
p_≥nd_d©a
->
PªvPå
 =(
OS_PEND_DATA
 *)0) {

1652 
p_√xt
 = 
p_≥nd_d©a
->
NextPå
;

1653 
p_√xt
->
PªvPå
 = (
OS_PEND_DATA
 *)0;

1654 
p_≥nd_li°
->
HódPå
 = 
p_√xt
;

1656 } i‡(
p_≥nd_d©a
->
NextPå
 =(
OS_PEND_DATA
 *)0) {

1657 
p_¥ev
 = 
p_≥nd_d©a
->
PªvPå
;

1658 
p_¥ev
->
NextPå
 = (
OS_PEND_DATA
 *)0;

1659 
p_≥nd_li°
->
TaûPå
 = 
p_¥ev
;

1662 
p_¥ev
 = 
p_≥nd_d©a
->
PªvPå
;

1663 
p_√xt
 = 
p_≥nd_d©a
->
NextPå
;

1664 
p_¥ev
->
NextPå
 = 
p_√xt
;

1665 
p_√xt
->
PªvPå
 = 
p_¥ev
;

1667 
p_≥nd_li°
->
NbrE¡rõs
--;

1668 
p_≥nd_d©a
->
NextPå
 = (
OS_PEND_DATA
 *)0;

1669 
p_≥nd_d©a
->
PªvPå
 = (
OS_PEND_DATA
 *)0;

1670 
	}
}

1693 
	$OS_PídObjDñ
 (
OS_PEND_OBJ
 *
p_obj
,

1694 
OS_TCB
 *
p_tcb
,

1695 
CPU_TS
 
ts
)

1697 
p_tcb
->
TaskSèã
) {

1698 
OS_TASK_STATE_RDY
:

1699 
OS_TASK_STATE_DLY
:

1700 
OS_TASK_STATE_SUSPENDED
:

1701 
OS_TASK_STATE_DLY_SUSPENDED
:

1704 
OS_TASK_STATE_PEND
:

1705 
OS_TASK_STATE_PEND_TIMEOUT
:

1706 i‡(
p_tcb
->
PídOn
 =
OS_TASK_PEND_ON_MULTI
) {

1707 
	`OS_PídObjDñ1
(
p_obj
,

1708 
p_tcb
,

1709 
ts
);

1711 #i‡(
OS_MSG_EN
 > 0u)

1712 
p_tcb
->
MsgPå
 = (*)0;

1713 
p_tcb
->
MsgSize
 = (
OS_MSG_SIZE
)0u;

1715 
p_tcb
->
TS
 = 
ts
;

1716 
	`OS_PídLi°Remove
(
p_tcb
);

1717 
	`OS_TaskRdy
(
p_tcb
);

1718 
p_tcb
->
TaskSèã
 = 
OS_TASK_STATE_RDY
;

1719 
p_tcb
->
PídSètus
 = 
OS_STATUS_PEND_DEL
;

1720 
p_tcb
->
PídOn
 = 
OS_TASK_PEND_ON_NOTHING
;

1723 
OS_TASK_STATE_PEND_SUSPENDED
:

1724 
OS_TASK_STATE_PEND_TIMEOUT_SUSPENDED
:

1725 i‡(
p_tcb
->
PídOn
 =
OS_TASK_PEND_ON_MULTI
) {

1726 
	`OS_PídObjDñ1
(
p_obj
,

1727 
p_tcb
,

1728 
ts
);

1730 #i‡(
OS_MSG_EN
 > 0u)

1731 
p_tcb
->
MsgPå
 = (*)0;

1732 
p_tcb
->
MsgSize
 = (
OS_MSG_SIZE
)0u;

1734 
p_tcb
->
TS
 = 
ts
;

1735 
	`OS_TickLi°Remove
(
p_tcb
);

1736 
	`OS_PídLi°Remove
(
p_tcb
);

1737 
p_tcb
->
TaskSèã
 = 
OS_TASK_STATE_SUSPENDED
;

1738 
p_tcb
->
PídSètus
 = 
OS_STATUS_PEND_DEL
;

1739 
p_tcb
->
PídOn
 = 
OS_TASK_PEND_ON_NOTHING
;

1745 
	}
}

1795 
	$OS_PídObjDñ1
 (
OS_PEND_OBJ
 *
p_obj
,

1796 
OS_TCB
 *
p_tcb
,

1797 
CPU_TS
 
ts
)

1799 
OS_OBJ_QTY
 
n_≥nd_li°
;

1800 
OS_PEND_DATA
 *
p_≥nd_d©a
;

1804 
p_≥nd_d©a
 = 
p_tcb
->
PídD©aTblPå
;

1805 
n_≥nd_li°
 = 
p_tcb
->
PídD©aTblE¡rõs
;

1807 
n_≥nd_li°
 > (
OS_OBJ_QTY
)0) {

1808 i‡(
p_obj
 =
p_≥nd_d©a
->
PídObjPå
) {

1809 
p_≥nd_d©a
->
RdyObjPå
 = 
p_obj
;

1810 
p_≥nd_d©a
->
RdyTS
 = 
ts
;

1813 
p_≥nd_d©a
++;

1814 
n_≥nd_li°
--;

1816 
	}
}

1844 
	$OS_Po°
 (
OS_PEND_OBJ
 *
p_obj
,

1845 
OS_TCB
 *
p_tcb
,

1846 *
p_void
,

1847 
OS_MSG_SIZE
 
msg_size
,

1848 
CPU_TS
 
ts
)

1850 
p_tcb
->
TaskSèã
) {

1851 
OS_TASK_STATE_RDY
:

1852 
OS_TASK_STATE_DLY
:

1853 
OS_TASK_STATE_SUSPENDED
:

1854 
OS_TASK_STATE_DLY_SUSPENDED
:

1857 
OS_TASK_STATE_PEND
:

1858 
OS_TASK_STATE_PEND_TIMEOUT
:

1859 i‡(
p_tcb
->
PídOn
 =
OS_TASK_PEND_ON_MULTI
) {

1860 
	`OS_Po°1
(
p_obj
,

1861 
p_tcb
,

1862 
p_void
,

1863 
msg_size
,

1864 
ts
);

1866 #i‡(
OS_MSG_EN
 > 0u)

1867 
p_tcb
->
MsgPå
 = 
p_void
;

1868 
p_tcb
->
MsgSize
 = 
msg_size
;

1870 
p_tcb
->
TS
 = 
ts
;

1872 i‡(
p_obj
 !(
OS_PEND_OBJ
 *)0) {

1873 
	`OS_PídLi°Remove
(
p_tcb
);

1874 #i‡
OS_CFG_DBG_EN
 > 0u

1875 
	`OS_PídDbgNameRemove
(
p_obj
,

1876 
p_tcb
);

1879 
	`OS_TaskRdy
(
p_tcb
);

1880 
p_tcb
->
TaskSèã
 = 
OS_TASK_STATE_RDY
;

1881 
p_tcb
->
PídSètus
 = 
OS_STATUS_PEND_OK
;

1882 
p_tcb
->
PídOn
 = 
OS_TASK_PEND_ON_NOTHING
;

1885 
OS_TASK_STATE_PEND_SUSPENDED
:

1886 
OS_TASK_STATE_PEND_TIMEOUT_SUSPENDED
:

1887 i‡(
p_tcb
->
PídOn
 =
OS_TASK_PEND_ON_MULTI
) {

1888 
	`OS_Po°1
(
p_obj
,

1889 
p_tcb
,

1890 
p_void
,

1891 
msg_size
,

1892 
ts
);

1894 #i‡(
OS_MSG_EN
 > 0u)

1895 
p_tcb
->
MsgPå
 = 
p_void
;

1896 
p_tcb
->
MsgSize
 = 
msg_size
;

1898 
p_tcb
->
TS
 = 
ts
;

1900 
	`OS_TickLi°Remove
(
p_tcb
);

1901 i‡(
p_obj
 !(
OS_PEND_OBJ
 *)0) {

1902 
	`OS_PídLi°Remove
(
p_tcb
);

1903 #i‡
OS_CFG_DBG_EN
 > 0u

1904 
	`OS_PídDbgNameRemove
(
p_obj
,

1905 
p_tcb
);

1908 
p_tcb
->
TaskSèã
 = 
OS_TASK_STATE_SUSPENDED
;

1909 
p_tcb
->
PídSètus
 = 
OS_STATUS_PEND_OK
;

1910 
p_tcb
->
PídOn
 = 
OS_TASK_PEND_ON_NOTHING
;

1916 
	}
}

1970 
	$OS_Po°1
 (
OS_PEND_OBJ
 *
p_obj
,

1971 
OS_TCB
 *
p_tcb
,

1972 *
p_void
,

1973 
OS_MSG_SIZE
 
msg_size
,

1974 
CPU_TS
 
ts
)

1976 
OS_OBJ_QTY
 
n_≥nd_li°
;

1977 
OS_PEND_DATA
 *
p_≥nd_d©a
;

1981 
p_≥nd_d©a
 = 
p_tcb
->
PídD©aTblPå
;

1982 
n_≥nd_li°
 = 
p_tcb
->
PídD©aTblE¡rõs
;

1984 
n_≥nd_li°
 > (
OS_OBJ_QTY
)0) {

1985 i‡(
p_obj
 =
p_≥nd_d©a
->
PídObjPå
) {

1986 
p_≥nd_d©a
->
RdyObjPå
 = 
p_obj
;

1987 
p_≥nd_d©a
->
RdyMsgPå
 = 
p_void
;

1988 
p_≥nd_d©a
->
RdyMsgSize
 = 
msg_size
;

1989 
p_≥nd_d©a
->
RdyTS
 = 
ts
;

1992 
p_≥nd_d©a
++;

1993 
n_≥nd_li°
--;

1995 
	}
}

2040 
	$OS_RdyLi°Inô
 ()

2042 
OS_PRIO
 
i
;

2043 
OS_RDY_LIST
 *
p_rdy_li°
;

2047 
i
 = 0u; i < 
OS_CFG_PRIO_MAX
; i++) {

2048 
p_rdy_li°
 = &
OSRdyLi°
[
i
];

2049 
p_rdy_li°
->
NbrE¡rõs
 = (
OS_OBJ_QTY
)0;

2050 
p_rdy_li°
->
HódPå
 = (
OS_TCB
 *)0;

2051 
p_rdy_li°
->
TaûPå
 = (
OS_TCB
 *)0;

2053 
	}
}

2074 
	$OS_RdyLi°In£π
 (
OS_TCB
 *
p_tcb
)

2076 
	`OS_PrioIn£π
(
p_tcb
->
Prio
);

2077 i‡(
p_tcb
->
Prio
 =
OSPrioCur
) {

2078 
	`OS_RdyLi°In£πTaû
(
p_tcb
);

2080 
	`OS_RdyLi°In£πHód
(
p_tcb
);

2082 
	}
}

2141 
	$OS_RdyLi°In£πHód
 (
OS_TCB
 *
p_tcb
)

2143 
OS_RDY_LIST
 *
p_rdy_li°
;

2144 
OS_TCB
 *
p_tcb2
;

2148 
p_rdy_li°
 = &
OSRdyLi°
[
p_tcb
->
Prio
];

2149 i‡(
p_rdy_li°
->
NbrE¡rõs
 =(
OS_OBJ_QTY
)0) {

2150 
p_rdy_li°
->
NbrE¡rõs
 = (
OS_OBJ_QTY
)1;

2151 
p_tcb
->
NextPå
 = (
OS_TCB
 *)0;

2152 
p_tcb
->
PªvPå
 = (
OS_TCB
 *)0;

2153 
p_rdy_li°
->
HódPå
 = 
p_tcb
;

2154 
p_rdy_li°
->
TaûPå
 = 
p_tcb
;

2156 
p_rdy_li°
->
NbrE¡rõs
++;

2157 
p_tcb
->
NextPå
 = 
p_rdy_li°
->
HódPå
;

2158 
p_tcb
->
PªvPå
 = (
OS_TCB
 *)0;

2159 
p_tcb2
 = 
p_rdy_li°
->
HódPå
;

2160 
p_tcb2
->
PªvPå
 = 
p_tcb
;

2161 
p_rdy_li°
->
HódPå
 = 
p_tcb
;

2163 
	}
}

2222 
	$OS_RdyLi°In£πTaû
 (
OS_TCB
 *
p_tcb
)

2224 
OS_RDY_LIST
 *
p_rdy_li°
;

2225 
OS_TCB
 *
p_tcb2
;

2229 
p_rdy_li°
 = &
OSRdyLi°
[
p_tcb
->
Prio
];

2230 i‡(
p_rdy_li°
->
NbrE¡rõs
 =(
OS_OBJ_QTY
)0) {

2231 
p_rdy_li°
->
NbrE¡rõs
 = (
OS_OBJ_QTY
)1;

2232 
p_tcb
->
NextPå
 = (
OS_TCB
 *)0;

2233 
p_tcb
->
PªvPå
 = (
OS_TCB
 *)0;

2234 
p_rdy_li°
->
HódPå
 = 
p_tcb
;

2235 
p_rdy_li°
->
TaûPå
 = 
p_tcb
;

2237 
p_rdy_li°
->
NbrE¡rõs
++;

2238 
p_tcb
->
NextPå
 = (
OS_TCB
 *)0;

2239 
p_tcb2
 = 
p_rdy_li°
->
TaûPå
;

2240 
p_tcb
->
PªvPå
 = 
p_tcb2
;

2241 
p_tcb2
->
NextPå
 = 
p_tcb
;

2242 
p_rdy_li°
->
TaûPå
 = 
p_tcb
;

2244 
	}
}

2299 
	$OS_RdyLi°MoveHódToTaû
 (
OS_RDY_LIST
 *
p_rdy_li°
)

2301 
OS_TCB
 *
p_tcb1
;

2302 
OS_TCB
 *
p_tcb2
;

2303 
OS_TCB
 *
p_tcb3
;

2307 
p_rdy_li°
->
NbrE¡rõs
) {

2313 
p_tcb1
 = 
p_rdy_li°
->
HódPå
;

2314 
p_tcb2
 = 
p_rdy_li°
->
TaûPå
;

2315 
p_tcb1
->
PªvPå
 = 
p_tcb2
;

2316 
p_tcb1
->
NextPå
 = (
OS_TCB
 *)0;

2317 
p_tcb2
->
PªvPå
 = (
OS_TCB
 *)0;

2318 
p_tcb2
->
NextPå
 = 
p_tcb1
;

2319 
p_rdy_li°
->
HódPå
 = 
p_tcb2
;

2320 
p_rdy_li°
->
TaûPå
 = 
p_tcb1
;

2324 
p_tcb1
 = 
p_rdy_li°
->
HódPå
;

2325 
p_tcb2
 = 
p_rdy_li°
->
TaûPå
;

2326 
p_tcb3
 = 
p_tcb1
->
NextPå
;

2327 
p_tcb3
->
PªvPå
 = (
OS_TCB
 *)0;

2328 
p_tcb1
->
NextPå
 = (
OS_TCB
 *)0;

2329 
p_tcb1
->
PªvPå
 = 
p_tcb2
;

2330 
p_tcb2
->
NextPå
 = 
p_tcb1
;

2331 
p_rdy_li°
->
HódPå
 = 
p_tcb3
;

2332 
p_rdy_li°
->
TaûPå
 = 
p_tcb1
;

2335 
	}
}

2386 
	$OS_RdyLi°Remove
 (
OS_TCB
 *
p_tcb
)

2388 
OS_RDY_LIST
 *
p_rdy_li°
;

2389 
OS_TCB
 *
p_tcb1
;

2390 
OS_TCB
 *
p_tcb2
;

2394 
p_rdy_li°
 = &
OSRdyLi°
[
p_tcb
->
Prio
];

2395 
p_tcb1
 = 
p_tcb
->
PªvPå
;

2396 
p_tcb2
 = 
p_tcb
->
NextPå
;

2397 i‡(
p_tcb1
 =(
OS_TCB
 *)0) {

2398 i‡(
p_tcb2
 =(
OS_TCB
 *)0) {

2399 
p_rdy_li°
->
NbrE¡rõs
 = (
OS_OBJ_QTY
)0;

2400 
p_rdy_li°
->
HódPå
 = (
OS_TCB
 *)0;

2401 
p_rdy_li°
->
TaûPå
 = (
OS_TCB
 *)0;

2402 
	`OS_PrioRemove
(
p_tcb
->
Prio
);

2404 
p_rdy_li°
->
NbrE¡rõs
--;

2405 
p_tcb2
->
PªvPå
 = (
OS_TCB
 *)0;

2406 
p_rdy_li°
->
HódPå
 = 
p_tcb2
;

2409 
p_rdy_li°
->
NbrE¡rõs
--;

2410 
p_tcb1
->
NextPå
 = 
p_tcb2
;

2411 i‡(
p_tcb2
 =(
OS_TCB
 *)0) {

2412 
p_rdy_li°
->
TaûPå
 = 
p_tcb1
;

2414 
p_tcb2
->
PªvPå
 = 
p_tcb1
;

2417 
p_tcb
->
PªvPå
 = (
OS_TCB
 *)0;

2418 
p_tcb
->
NextPå
 = (
OS_TCB
 *)0;

2419 
	}
}

2437 #i‡
OS_CFG_ISR_POST_DEFERRED_EN
 > 0u

2438 
	$OS_Sched0
 ()

2440 
	`CPU_SR_ALLOC
();

2444 
	`CPU_INT_DIS
();

2445 
OSPrioHighRdy
 = (
OS_PRIO
)0;

2446 
OSTCBHighRdyPå
 = &
OSI¡QTaskTCB
;

2447 #i‡
OS_CFG_TASK_PROFILE_EN
 > 0u

2448 
OSTCBHighRdyPå
->
CtxSwCå
++;

2450 
OSTaskCtxSwCå
++;

2451 
	`OS_TASK_SW
();

2452 
	`CPU_INT_EN
();

2453 
	}
}

2478 #i‡
OS_CFG_SCHED_LOCK_TIME_MEAS_EN
 > 0u

2479 
	$OS_SchedLockTimeMósSèπ
 ()

2481 i‡(
OSSchedLockNe°ögCå
 == 1u) {

2482 
OSSchedLockTimeBegö
 = 
	`CPU_TS_TmrRd
();

2484 
	}
}

2489 
	$OS_SchedLockTimeMósSt›
 ()

2491 
CPU_TS_TMR
 
dñè
;

2494 i‡(
OSSchedLockNe°ögCå
 =(
OS_NESTING_CTR
)0) {

2495 
dñè
 = 
	`CPU_TS_TmrRd
()

2496 - 
OSSchedLockTimeBegö
;

2497 i‡(
OSSchedLockTimeMax
 < 
dñè
) {

2498 
OSSchedLockTimeMax
 = 
dñè
;

2500 i‡(
OSSchedLockTimeMaxCur
 < 
dñè
) {

2501 
OSSchedLockTimeMaxCur
 = 
dñè
;

2504 
	}
}

2524 #i‡
OS_CFG_SCHED_ROUND_ROBIN_EN
 > 0u

2525 
	$OS_SchedRoundRobö
 (
OS_RDY_LIST
 *
p_rdy_li°
)

2527 
OS_TCB
 *
p_tcb
;

2528 
	`CPU_SR_ALLOC
();

2532 i‡(
OSSchedRoundRoböEn
 !
DEF_TRUE
) {

2536 
	`CPU_CRITICAL_ENTER
();

2537 
p_tcb
 = 
p_rdy_li°
->
HódPå
;

2539 i‡(
p_tcb
 =(
OS_TCB
 *)0) {

2540 
	`CPU_CRITICAL_EXIT
();

2544 i‡(
p_tcb
 =&
OSIdÀTaskTCB
) {

2545 
	`CPU_CRITICAL_EXIT
();

2549 i‡(
p_tcb
->
TimeQu™èCå
 > (
OS_TICK
)0) {

2550 
p_tcb
->
TimeQu™èCå
--;

2553 i‡(
p_tcb
->
TimeQu™èCå
 > (
OS_TICK
)0) {

2554 
	`CPU_CRITICAL_EXIT
();

2558 i‡(
p_rdy_li°
->
NbrE¡rõs
 < (
OS_OBJ_QTY
)2) {

2559 
	`CPU_CRITICAL_EXIT
();

2563 i‡(
OSSchedLockNe°ögCå
 > (
OS_NESTING_CTR
)0) {

2564 
	`CPU_CRITICAL_EXIT
();

2568 
	`OS_RdyLi°MoveHódToTaû
(
p_rdy_li°
);

2569 
p_tcb
 = 
p_rdy_li°
->
HódPå
;

2570 i‡(
p_tcb
->
TimeQu™è
 =(
OS_TICK
)0) {

2571 
p_tcb
->
TimeQu™èCå
 = 
OSSchedRoundRoböDÊtTimeQu™è
;

2573 
p_tcb
->
TimeQu™èCå
 =Ö_tcb->
TimeQu™è
;

2575 
	`CPU_CRITICAL_EXIT
();

2576 
	}
}

2598 
	$OS_TaskBlock
 (
OS_TCB
 *
p_tcb
,

2599 
OS_TICK
 
timeout
)

2601 
OS_ERR
 
îr
;

2604 i‡(
timeout
 > (
OS_TICK
)0) {

2605 
	`OS_TickLi°In£π
(
p_tcb
,

2606 
timeout
,

2607 
OS_OPT_TIME_TIMEOUT
,

2608 &
îr
);

2609 i‡(
îr
 =
OS_ERR_NONE
) {

2610 
p_tcb
->
TaskSèã
 = 
OS_TASK_STATE_PEND_TIMEOUT
;

2612 
p_tcb
->
TaskSèã
 = 
OS_TASK_STATE_PEND
;

2615 
p_tcb
->
TaskSèã
 = 
OS_TASK_STATE_PEND
;

2617 
	`OS_RdyLi°Remove
(
p_tcb
);

2618 
	}
}

2636 
	$OS_TaskRdy
 (
OS_TCB
 *
p_tcb
)

2638 
	`OS_TickLi°Remove
(
p_tcb
);

2639 i‡((
p_tcb
->
TaskSèã
 & 
OS_TASK_STATE_BIT_SUSPENDED
Ë=(
OS_STATE
)0) {

2640 
	`OS_RdyLi°In£π
(
p_tcb
);

2642 
	}
}

	@Source/os_dbg.c

33 
	#MICRIUM_SOURCE


	)

34 
	~<os.h
>

36 #ifde‡
VSC_INCLUDE_SOURCE_FILE_NAMES


37 c⁄° 
CPU_CHAR
 *
	gos_dbg__c
 = "$Id: $";

40 
CPU_INT16U
 c⁄° 
	gOSDbg_DbgEn
 = 
OS_CFG_DBG_EN
;

42 #i‡
OS_CFG_DBG_EN
 > 0u

50 
CPU_INT08U
 c⁄° 
	gOSDbg_ArgChkEn
 = 
OS_CFG_ARG_CHK_EN
;

51 
CPU_INT08U
 c⁄° 
	gOSDbg_AµHooksEn
 = 
OS_CFG_APP_HOOKS_EN
;

53 
CPU_INT32U
 c⁄° 
	gOSDbg_Endü¬essTe°
 = 0x12345678LU;

55 
CPU_INT08U
 c⁄° 
	gOSDbg_CÆÀdFromISRChkEn
 = 
OS_CFG_CALLED_FROM_ISR_CHK_EN
;

57 
CPU_INT08U
 c⁄° 
	gOSDbg_FœgEn
 = 
OS_CFG_FLAG_EN
;

58 
OS_FLAG_GRP
 c⁄° 
	gOSDbg_FœgGΩ
 = { 0u };

59 #i‡
OS_CFG_FLAG_EN
 > 0u

60 
CPU_INT08U
 c⁄° 
	gOSDbg_FœgDñEn
 = 
OS_CFG_FLAG_DEL_EN
;

61 
CPU_INT08U
 c⁄° 
	gOSDbg_FœgModeCÃEn
 = 
OS_CFG_FLAG_MODE_CLR_EN
;

62 
CPU_INT08U
 c⁄° 
	gOSDbg_FœgPídAb‹tEn
 = 
OS_CFG_FLAG_PEND_ABORT_EN
;

63 
CPU_INT16U
 c⁄° 
	gOSDbg_FœgGΩSize
 = (
OS_FLAG_GRP
);

64 
CPU_INT16U
 c⁄° 
	gOSDbg_FœgWidth
 = (
OS_FLAGS
);

66 
CPU_INT08U
 c⁄° 
	gOSDbg_FœgDñEn
 = 0u;

67 
CPU_INT08U
 c⁄° 
	gOSDbg_FœgModeCÃEn
 = 0u;

68 
CPU_INT08U
 c⁄° 
	gOSDbg_FœgPídAb‹tEn
 = 0u;

69 
CPU_INT16U
 c⁄° 
	gOSDbg_FœgGΩSize
 = 0u;

70 
CPU_INT16U
 c⁄° 
	gOSDbg_FœgWidth
 = 0u;

73 #i‡
OS_CFG_ISR_POST_DEFERRED_EN
 > 0u

74 
CPU_INT16U
 c⁄° 
	gOSDbg_I¡Q
 = (
OS_INT_Q
);

76 
CPU_INT16U
 c⁄° 
	gOSDbg_I¡Q
 = 0u;

79 
CPU_INT08U
 c⁄° 
	gOSDbg_ISRPo°De„ºedEn
 = 
OS_CFG_ISR_POST_DEFERRED_EN
;

81 
OS_MEM
 c⁄° 
	gOSDbg_Mem
 = { 0u };

82 
CPU_INT08U
 c⁄° 
	gOSDbg_MemEn
 = 
OS_CFG_MEM_EN
;

83 #i‡
OS_CFG_MEM_EN
 > 0u

84 
CPU_INT16U
 c⁄° 
	gOSDbg_MemSize
 = (
OS_MEM
);

86 
CPU_INT16U
 c⁄° 
	gOSDbg_MemSize
 = 0u;

90 
CPU_INT08U
 c⁄° 
	gOSDbg_MsgEn
 = 
OS_MSG_EN
;

91 #i‡(
OS_MSG_EN
) > 0u

92 
CPU_INT16U
 c⁄° 
	gOSDbg_MsgSize
 = (
OS_MSG
);

93 
CPU_INT16U
 c⁄° 
	gOSDbg_MsgPoﬁSize
 = (
OS_MSG_POOL
);

94 
CPU_INT16U
 c⁄° 
	gOSDbg_MsgQSize
 = (
OS_MSG_Q
);

96 
CPU_INT16U
 c⁄° 
	gOSDbg_MsgSize
 = 0u;

97 
CPU_INT16U
 c⁄° 
	gOSDbg_MsgPoﬁSize
 = 0u;

98 
CPU_INT16U
 c⁄° 
	gOSDbg_MsgQSize
 = 0u;

102 
OS_MUTEX
 c⁄° 
	gOSDbg_Muãx
 = { 0u };

103 
CPU_INT08U
 c⁄° 
	gOSDbg_MuãxEn
 = 
OS_CFG_MUTEX_EN
;

104 #i‡
OS_CFG_MUTEX_EN
 > 0u

105 
CPU_INT08U
 c⁄° 
	gOSDbg_MuãxDñEn
 = 
OS_CFG_MUTEX_DEL_EN
;

106 
CPU_INT08U
 c⁄° 
	gOSDbg_MuãxPídAb‹tEn
 = 
OS_CFG_MUTEX_PEND_ABORT_EN
;

107 
CPU_INT16U
 c⁄° 
	gOSDbg_MuãxSize
 = (
OS_MUTEX
);

109 
CPU_INT08U
 c⁄° 
	gOSDbg_MuãxDñEn
 = 0u;

110 
CPU_INT08U
 c⁄° 
	gOSDbg_MuãxPídAb‹tEn
 = 0u;

111 
CPU_INT16U
 c⁄° 
	gOSDbg_MuãxSize
 = 0u;

114 
CPU_INT08U
 c⁄° 
	gOSDbg_ObjTy≥ChkEn
 = 
OS_CFG_OBJ_TYPE_CHK_EN
;

117 
CPU_INT08U
 c⁄° 
	gOSDbg_PídMu…iEn
 = 
OS_CFG_PEND_MULTI_EN
;

118 
CPU_INT16U
 c⁄° 
	gOSDbg_PídD©aSize
 = (
OS_PEND_DATA
);

119 
CPU_INT16U
 c⁄° 
	gOSDbg_PídLi°Size
 = (
OS_PEND_LIST
);

120 
CPU_INT16U
 c⁄° 
	gOSDbg_PídObjSize
 = (
OS_PEND_OBJ
);

123 
CPU_INT16U
 c⁄° 
	gOSDbg_PrioMax
 = 
OS_CFG_PRIO_MAX
;

124 
CPU_INT16U
 c⁄° 
	gOSDbg_PrioTblSize
 = (
OSPrioTbl
);

126 
CPU_INT16U
 c⁄° 
	gOSDbg_PåSize
 = (*);

129 
OS_Q
 c⁄° 
	gOSDbg_Q
 = { 0u };

130 
CPU_INT08U
 c⁄° 
	gOSDbg_QEn
 = 
OS_CFG_Q_EN
;

131 #i‡
OS_CFG_Q_EN
 > 0u

132 
CPU_INT08U
 c⁄° 
	gOSDbg_QDñEn
 = 
OS_CFG_Q_DEL_EN
;

133 
CPU_INT08U
 c⁄° 
	gOSDbg_QFlushEn
 = 
OS_CFG_Q_FLUSH_EN
;

134 
CPU_INT08U
 c⁄° 
	gOSDbg_QPídAb‹tEn
 = 
OS_CFG_Q_PEND_ABORT_EN
;

135 
CPU_INT16U
 c⁄° 
	gOSDbg_QSize
 = (
OS_Q
);

137 
CPU_INT08U
 c⁄° 
	gOSDbg_QDñEn
 = 0u;

138 
CPU_INT08U
 c⁄° 
	gOSDbg_QFlushEn
 = 0u;

139 
CPU_INT08U
 c⁄° 
	gOSDbg_QPídAb‹tEn
 = 0u;

140 
CPU_INT16U
 c⁄° 
	gOSDbg_QSize
 = 0u;

144 
CPU_INT08U
 c⁄° 
	gOSDbg_SchedRoundRoböEn
 = 
OS_CFG_SCHED_ROUND_ROBIN_EN
;

147 
OS_SEM
 c⁄° 
	gOSDbg_Sem
 = { 0u };

148 
CPU_INT08U
 c⁄° 
	gOSDbg_SemEn
 = 
OS_CFG_SEM_EN
;

149 #i‡
OS_CFG_SEM_EN
 > 0u

150 
CPU_INT08U
 c⁄° 
	gOSDbg_SemDñEn
 = 
OS_CFG_SEM_DEL_EN
;

151 
CPU_INT08U
 c⁄° 
	gOSDbg_SemPídAb‹tEn
 = 
OS_CFG_SEM_PEND_ABORT_EN
;

152 
CPU_INT08U
 c⁄° 
	gOSDbg_SemSëEn
 = 
OS_CFG_SEM_SET_EN
;

153 
CPU_INT16U
 c⁄° 
	gOSDbg_SemSize
 = (
OS_SEM
);

155 
CPU_INT08U
 c⁄° 
	gOSDbg_SemDñEn
 = 0u;

156 
CPU_INT08U
 c⁄° 
	gOSDbg_SemPídAb‹tEn
 = 0u;

157 
CPU_INT08U
 c⁄° 
	gOSDbg_SemSëEn
 = 0u;

158 
CPU_INT16U
 c⁄° 
	gOSDbg_SemSize
 = 0u;

162 
CPU_INT16U
 c⁄° 
	gOSDbg_RdyLi°
 = (
OS_RDY_LIST
);

163 
CPU_INT32U
 c⁄° 
	gOSDbg_RdyLi°Size
 = (
OSRdyLi°
);

165 
CPU_INT08U
 c⁄° 
	gOSDbg_StkWidth
 = (
CPU_STK
);

167 
CPU_INT08U
 c⁄° 
	gOSDbg_SètTaskEn
 = 
OS_CFG_STAT_TASK_EN
;

168 
CPU_INT08U
 c⁄° 
	gOSDbg_SètTaskStkChkEn
 = 
OS_CFG_STAT_TASK_STK_CHK_EN
;

170 
CPU_INT08U
 c⁄° 
	gOSDbg_TaskCh™gePrioEn
 = 
OS_CFG_TASK_CHANGE_PRIO_EN
;

171 
CPU_INT08U
 c⁄° 
	gOSDbg_TaskDñEn
 = 
OS_CFG_TASK_DEL_EN
;

172 
CPU_INT08U
 c⁄° 
	gOSDbg_TaskQEn
 = 
OS_CFG_TASK_Q_EN
;

173 
CPU_INT08U
 c⁄° 
	gOSDbg_TaskQPídAb‹tEn
 = 
OS_CFG_TASK_Q_PEND_ABORT_EN
;

174 
CPU_INT08U
 c⁄° 
	gOSDbg_TaskProfûeEn
 = 
OS_CFG_TASK_PROFILE_EN
;

175 
CPU_INT16U
 c⁄° 
	gOSDbg_TaskRegTblSize
 = 
OS_CFG_TASK_REG_TBL_SIZE
;

176 
CPU_INT08U
 c⁄° 
	gOSDbg_TaskSemPídAb‹tEn
 = 
OS_CFG_TASK_SEM_PEND_ABORT_EN
;

177 
CPU_INT08U
 c⁄° 
	gOSDbg_TaskSu•ídEn
 = 
OS_CFG_TASK_SUSPEND_EN
;

180 
CPU_INT16U
 c⁄° 
	gOSDbg_TCBSize
 = (
OS_TCB
);

182 
CPU_INT16U
 c⁄° 
	gOSDbg_TickSpokeSize
 = (
OS_TICK_SPOKE
);

184 
CPU_INT08U
 c⁄° 
	gOSDbg_TimeDlyHMSMEn
 = 
OS_CFG_TIME_DLY_HMSM_EN
;

185 
CPU_INT08U
 c⁄° 
	gOSDbg_TimeDlyResumeEn
 = 
OS_CFG_TIME_DLY_RESUME_EN
;

187 #i‡
deföed
(
OS_CFG_TLS_TBL_SIZE
) && (OS_CFG_TLS_TBL_SIZE > 0u)

188 
CPU_INT16U
 c⁄° 
	gOSDbg_TLS_TblSize
 = 
OS_CFG_TLS_TBL_SIZE
 * (
OS_TLS
);

190 
CPU_INT16U
 c⁄° 
	gOSDbg_TLS_TblSize
 = 0u;

194 
OS_TMR
 c⁄° 
	gOSDbg_Tmr
 = { 0u };

195 
CPU_INT08U
 c⁄° 
	gOSDbg_TmrEn
 = 
OS_CFG_TMR_EN
;

196 #i‡
OS_CFG_TMR_EN
 > 0u

197 
CPU_INT08U
 c⁄° 
	gOSDbg_TmrDñEn
 = 
OS_CFG_TMR_DEL_EN
;

198 
CPU_INT16U
 c⁄° 
	gOSDbg_TmrSize
 = (
OS_TMR
);

199 
CPU_INT16U
 c⁄° 
	gOSDbg_TmrSpokeSize
 = (
OS_TMR_SPOKE
);

201 
CPU_INT08U
 c⁄° 
	gOSDbg_TmrDñEn
 = 0u;

202 
CPU_INT16U
 c⁄° 
	gOSDbg_TmrSize
 = 0u;

203 
CPU_INT16U
 c⁄° 
	gOSDbg_TmrSpokeSize
 = 0u;

206 
CPU_INT16U
 c⁄° 
	gOSDbg_Vîsi⁄Nbr
 = 
OS_VERSION
;

216 
CPU_INT32U
 c⁄° 
	gOSDbg_D©aSize
 = (
OSI¡Ne°ögCå
)

218 #i‡
OS_CFG_APP_HOOKS_EN
 > 0u

219 + (
OS_AµTaskCª©eHookPå
)

220 + (
OS_AµTaskDñHookPå
)

221 + (
OS_AµTaskRëu∫HookPå
)

223 + (
OS_AµIdÀTaskHookPå
)

224 + (
OS_AµSètTaskHookPå
)

225 + (
OS_AµTaskSwHookPå
)

226 + (
OS_AµTimeTickHookPå
)

229 + (
OSIdÀTaskCå
)

230 + (
OSIdÀTaskTCB
)

232 #ifde‡
CPU_CFG_INT_DIS_MEAS_EN


233 + (
OSI¡DisTimeMax
)

236 #i‡
OS_CFG_ISR_POST_DEFERRED_EN
 > 0u

237 + (
OSI¡QInPå
)

238 + (
OSI¡QOutPå
)

239 + (
OSI¡QNbrE¡rõs
)

240 + (
OSI¡QNbrE¡rõsMax
)

241 + (
OSI¡QOvfCå
)

242 + (
OSI¡QTaskTCB
)

243 + (
OSI¡QTaskTimeMax
)

246 + (
OSRu¬ög
)

248 #ifde‡
OS_SAFETY_CRITICAL_IEC61508


249 + (
OSSa„tyCrôiˇlSèπFœg
)

252 #i‡
OS_CFG_FLAG_EN
 > 0u

253 + (
OSFœgDbgLi°På
)

254 + (
OSFœgQty
)

257 #i‡
OS_CFG_MEM_EN
 > 0u

258 #i‡
OS_CFG_DBG_EN
 > 0u

259 + (
OSMemDbgLi°På
)

261 + (
OSMemQty
)

264 #i‡
OS_MSG_EN
 > 0u

265 + (
OSMsgPoﬁ
)

268 #i‡
OS_CFG_MUTEX_EN
 > 0u

269 #i‡
OS_CFG_DBG_EN
 > 0u

270 + (
OSMuãxDbgLi°På
)

272 + (
OSMuãxQty
)

275 + (
OSPrioCur
)

276 + (
OSPrioHighRdy
)

277 + (
OSPrioSaved
)

278 + (
OSPrioTbl
)

280 #i‡
OS_CFG_Q_EN
 > 0u

281 #i‡
OS_CFG_DBG_EN
 > 0u

282 + (
OSQDbgLi°På
)

284 + (
OSQQty
)

287 + (
OSRdyLi°
)

289 + (
OSSchedLockNe°ögCå
)

291 #i‡
OS_CFG_SCHED_LOCK_TIME_MEAS_EN
 > 0u

292 + (
OSSchedLockTimeBegö
)

293 + (
OSSchedLockTimeMax
)

294 + (
OSSchedLockTimeMaxCur
)

297 #i‡
OS_CFG_SCHED_ROUND_ROBIN_EN


298 + (
OSSchedRoundRoböDÊtTimeQu™è
)

299 + (
OSSchedRoundRoböEn
)

302 #i‡
OS_CFG_SEM_EN
 > 0u

303 #i‡
OS_CFG_DBG_EN
 > 0u

304 + (
OSSemDbgLi°På
)

306 + (
OSSemQty
)

308 + (
OSTaskCtxSwCå
)

309 #i‡
OS_CFG_DBG_EN
 > 0u

310 + (
OSTaskDbgLi°På
)

312 + (
OSTaskQty
)

314 #i‡
OS_CFG_STAT_TASK_EN
 > 0u

315 + (
OSSètRe£tFœg
)

316 + (
OSSètTaskCPUUßge
)

317 + (
OSSètTaskCPUUßgeMax
)

318 + (
OSSètTaskCå
)

319 + (
OSSètTaskCåMax
)

320 + (
OSSètTaskCåRun
)

321 + (
OSSètTaskRdy
)

322 + (
OSSètTaskTCB
)

323 + (
OSSètTaskTimeMax
)

326 + (
OSTickCå
)

327 + (
OSTickTaskTCB
)

328 + (
OSTickTaskTimeMax
)

330 #i‡
OS_CFG_TMR_EN
 > 0u

331 #i‡
OS_CFG_DBG_EN
 > 0u

332 + (
OSTmrDbgLi°På
)

334 + (
OSTmrQty
)

335 + (
OSTmrTaskTCB
)

336 + (
OSTmrTaskTimeMax
)

337 + (
OSTmrTickCå
)

338 + (
OSTmrUpd©eC¡
)

339 + (
OSTmrUpd©eCå
)

342 #i‡
OS_CFG_TASK_REG_TBL_SIZE
 > 0u

343 + (
OSTaskRegNextAvaûID
)

346 + (
OSTCBCurPå
)

347 + (
OSTCBHighRdyPå
);

369 
	$OS_Dbg_Inô
 ()

371 c⁄° *
p_ãmp
;

374 
p_ãmp
 = (c⁄° *)&
OSDbg_DbgEn
;

376 
p_ãmp
 = (c⁄° *)&
OSDbg_D©aSize
;

378 
p_ãmp
 = (c⁄° *)&
OSDbg_ArgChkEn
;

379 
p_ãmp
 = (c⁄° *)&
OSDbg_AµHooksEn
;

381 
p_ãmp
 = (c⁄° *)&
OSDbg_Endü¬essTe°
;

383 
p_ãmp
 = (c⁄° *)&
OSDbg_CÆÀdFromISRChkEn
;

385 
p_ãmp
 = (c⁄° *)&
OSDbg_FœgGΩ
;

386 
p_ãmp
 = (c⁄° *)&
OSDbg_FœgEn
;

387 #i‡
OS_CFG_FLAG_EN
 > 0u

388 
p_ãmp
 = (c⁄° *)&
OSDbg_FœgDñEn
;

389 
p_ãmp
 = (c⁄° *)&
OSDbg_FœgModeCÃEn
;

390 
p_ãmp
 = (c⁄° *)&
OSDbg_FœgPídAb‹tEn
;

391 
p_ãmp
 = (c⁄° *)&
OSDbg_FœgGΩSize
;

392 
p_ãmp
 = (c⁄° *)&
OSDbg_FœgWidth
;

395 #i‡
OS_CFG_ISR_POST_DEFERRED_EN
 > 0u

396 
p_ãmp
 = (c⁄° *)&
OSDbg_I¡Q
;

399 
p_ãmp
 = (c⁄° *)&
OSDbg_ISRPo°De„ºedEn
;

401 
p_ãmp
 = (c⁄° *)&
OSDbg_Mem
;

402 
p_ãmp
 = (c⁄° *)&
OSDbg_MemEn
;

403 #i‡
OS_CFG_MEM_EN
 > 0u

404 
p_ãmp
 = (c⁄° *)&
OSDbg_MemSize
;

407 
p_ãmp
 = (c⁄° *)&
OSDbg_MsgEn
;

408 #i‡(
OS_MSG_EN
) > 0u

409 
p_ãmp
 = (c⁄° *)&
OSDbg_MsgSize
;

410 
p_ãmp
 = (c⁄° *)&
OSDbg_MsgPoﬁSize
;

411 
p_ãmp
 = (c⁄° *)&
OSDbg_MsgQSize
;

414 
p_ãmp
 = (c⁄° *)&
OSDbg_Muãx
;

415 
p_ãmp
 = (c⁄° *)&
OSDbg_MuãxEn
;

416 #i‡(
OS_CFG_MUTEX_EN
) > 0u

417 
p_ãmp
 = (c⁄° *)&
OSDbg_MuãxDñEn
;

418 
p_ãmp
 = (c⁄° *)&
OSDbg_MuãxPídAb‹tEn
;

419 
p_ãmp
 = (c⁄° *)&
OSDbg_MuãxSize
;

422 
p_ãmp
 = (c⁄° *)&
OSDbg_ObjTy≥ChkEn
;

424 
p_ãmp
 = (c⁄° *)&
OSDbg_PídMu…iEn
;

425 
p_ãmp
 = (c⁄° *)&
OSDbg_PídD©aSize
;

426 
p_ãmp
 = (c⁄° *)&
OSDbg_PídLi°Size
;

427 
p_ãmp
 = (c⁄° *)&
OSDbg_PídObjSize
;

429 
p_ãmp
 = (c⁄° *)&
OSDbg_PrioMax
;

430 
p_ãmp
 = (c⁄° *)&
OSDbg_PrioTblSize
;

432 
p_ãmp
 = (c⁄° *)&
OSDbg_PåSize
;

434 
p_ãmp
 = (c⁄° *)&
OSDbg_Q
;

435 
p_ãmp
 = (c⁄° *)&
OSDbg_QEn
;

436 #i‡(
OS_CFG_Q_EN
) > 0u

437 
p_ãmp
 = (c⁄° *)&
OSDbg_QDñEn
;

438 
p_ãmp
 = (c⁄° *)&
OSDbg_QFlushEn
;

439 
p_ãmp
 = (c⁄° *)&
OSDbg_QPídAb‹tEn
;

440 
p_ãmp
 = (c⁄° *)&
OSDbg_QSize
;

443 
p_ãmp
 = (c⁄° *)&
OSDbg_SchedRoundRoböEn
;

445 
p_ãmp
 = (c⁄° *)&
OSDbg_Sem
;

446 
p_ãmp
 = (c⁄° *)&
OSDbg_SemEn
;

447 #i‡(
OS_CFG_SEM_EN
) > 0u

448 
p_ãmp
 = (c⁄° *)&
OSDbg_SemDñEn
;

449 
p_ãmp
 = (c⁄° *)&
OSDbg_SemPídAb‹tEn
;

450 
p_ãmp
 = (c⁄° *)&
OSDbg_SemSëEn
;

451 
p_ãmp
 = (c⁄° *)&
OSDbg_SemSize
;

454 
p_ãmp
 = (c⁄° *)&
OSDbg_RdyLi°
;

455 
p_ãmp
 = (c⁄° *)&
OSDbg_RdyLi°Size
;

457 
p_ãmp
 = (c⁄° *)&
OSDbg_StkWidth
;

459 
p_ãmp
 = (c⁄° *)&
OSDbg_SètTaskEn
;

460 
p_ãmp
 = (c⁄° *)&
OSDbg_SètTaskStkChkEn
;

462 
p_ãmp
 = (c⁄° *)&
OSDbg_TaskCh™gePrioEn
;

463 
p_ãmp
 = (c⁄° *)&
OSDbg_TaskDñEn
;

464 
p_ãmp
 = (c⁄° *)&
OSDbg_TaskQEn
;

465 
p_ãmp
 = (c⁄° *)&
OSDbg_TaskQPídAb‹tEn
;

466 
p_ãmp
 = (c⁄° *)&
OSDbg_TaskProfûeEn
;

467 
p_ãmp
 = (c⁄° *)&
OSDbg_TaskRegTblSize
;

468 
p_ãmp
 = (c⁄° *)&
OSDbg_TaskSemPídAb‹tEn
;

469 
p_ãmp
 = (c⁄° *)&
OSDbg_TaskSu•ídEn
;

471 
p_ãmp
 = (c⁄° *)&
OSDbg_TCBSize
;

473 
p_ãmp
 = (c⁄° *)&
OSDbg_TickSpokeSize
;

475 
p_ãmp
 = (c⁄° *)&
OSDbg_TimeDlyHMSMEn
;

476 
p_ãmp
 = (c⁄° *)&
OSDbg_TimeDlyResumeEn
;

479 
p_ãmp
 = (c⁄° *)&
OSDbg_Tmr
;

480 
p_ãmp
 = (c⁄° *)&
OSDbg_TmrEn
;

481 #i‡(
OS_CFG_TMR_EN
) > 0u

482 
p_ãmp
 = (c⁄° *)&
OSDbg_TmrDñEn
;

483 
p_ãmp
 = (c⁄° *)&
OSDbg_TmrSize
;

484 
p_ãmp
 = (c⁄° *)&
OSDbg_TmrSpokeSize
;

487 
p_ãmp
 = (c⁄° *)&
OSDbg_Vîsi⁄Nbr
;

489 
p_ãmp
 =Ö_temp;

490 
	}
}

	@Source/os_flag.c

33 
	#MICRIUM_SOURCE


	)

34 
	~<os.h
>

36 #ifde‡
VSC_INCLUDE_SOURCE_FILE_NAMES


37 c⁄° 
CPU_CHAR
 *
	gos_Êag__c
 = "$Id: $";

41 #i‡
OS_CFG_FLAG_EN
 > 0u

70 
	$OSFœgCª©e
 (
OS_FLAG_GRP
 *
p_gΩ
,

71 
CPU_CHAR
 *
p_«me
,

72 
OS_FLAGS
 
Êags
,

73 
OS_ERR
 *
p_îr
)

75 
	`CPU_SR_ALLOC
();

79 #ifde‡
OS_SAFETY_CRITICAL


80 i‡(
p_îr
 =(
OS_ERR
 *)0) {

81 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

86 #ifde‡
OS_SAFETY_CRITICAL_IEC61508


87 i‡(
OSSa„tyCrôiˇlSèπFœg
 =
DEF_TRUE
) {

88 *
p_îr
 = 
OS_ERR_ILLEGAL_CREATE_RUN_TIME
;

93 #i‡
OS_CFG_CALLED_FROM_ISR_CHK_EN
 > 0u

94 i‡(
OSI¡Ne°ögCå
 > (
OS_NESTING_CTR
)0) {

95 *
p_îr
 = 
OS_ERR_CREATE_ISR
;

100 #i‡
OS_CFG_ARG_CHK_EN
 > 0u

101 i‡(
p_gΩ
 =(
OS_FLAG_GRP
 *)0) {

102 *
p_îr
 = 
OS_ERR_OBJ_PTR_NULL
;

107 
	`OS_CRITICAL_ENTER
();

108 
p_gΩ
->
Ty≥
 = 
OS_OBJ_TYPE_FLAG
;

109 
p_gΩ
->
NamePå
 = 
p_«me
;

110 
p_gΩ
->
Fœgs
 = 
Êags
;

111 
p_gΩ
->
TS
 = (
CPU_TS
)0;

112 
	`OS_PídLi°Inô
(&
p_gΩ
->
PídLi°
);

114 #i‡
OS_CFG_DBG_EN
 > 0u

115 
	`OS_FœgDbgLi°Add
(
p_gΩ
);

117 
OSFœgQty
++;

119 
	`OS_CRITICAL_EXIT_NO_SCHED
();

120 *
p_îr
 = 
OS_ERR_NONE
;

121 
	}
}

155 #i‡
OS_CFG_FLAG_DEL_EN
 > 0u

156 
OS_OBJ_QTY
 
	$OSFœgDñ
 (
OS_FLAG_GRP
 *
p_gΩ
,

157 
OS_OPT
 
›t
,

158 
OS_ERR
 *
p_îr
)

160 
OS_OBJ_QTY
 
˙t
;

161 
OS_OBJ_QTY
 
nbr_èsks
;

162 
OS_PEND_DATA
 *
p_≥nd_d©a
;

163 
OS_PEND_LIST
 *
p_≥nd_li°
;

164 
OS_TCB
 *
p_tcb
;

165 
CPU_TS
 
ts
;

166 
	`CPU_SR_ALLOC
();

170 #ifde‡
OS_SAFETY_CRITICAL


171 i‡(
p_îr
 =(
OS_ERR
 *)0) {

172 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

173  ((
OS_OBJ_QTY
)0);

177 #i‡
OS_CFG_CALLED_FROM_ISR_CHK_EN
 > 0u

178 i‡(
OSI¡Ne°ögCå
 > (
OS_NESTING_CTR
)0) {

179 *
p_îr
 = 
OS_ERR_DEL_ISR
;

180  ((
OS_OBJ_QTY
)0);

184 #i‡
OS_CFG_ARG_CHK_EN
 > 0u

185 i‡(
p_gΩ
 =(
OS_FLAG_GRP
 *)0) {

186 *
p_îr
 = 
OS_ERR_OBJ_PTR_NULL
;

187  ((
OS_OBJ_QTY
)0);

189 
›t
) {

190 
OS_OPT_DEL_NO_PEND
:

191 
OS_OPT_DEL_ALWAYS
:

195 *
p_îr
 = 
OS_ERR_OPT_INVALID
;

196  ((
OS_OBJ_QTY
)0);

200 #i‡
OS_CFG_OBJ_TYPE_CHK_EN
 > 0u

201 i‡(
p_gΩ
->
Ty≥
 !
OS_OBJ_TYPE_FLAG
) {

202 *
p_îr
 = 
OS_ERR_OBJ_TYPE
;

203  ((
OS_OBJ_QTY
)0);

206 
	`OS_CRITICAL_ENTER
();

207 
p_≥nd_li°
 = &
p_gΩ
->
PídLi°
;

208 
˙t
 = 
p_≥nd_li°
->
NbrE¡rõs
;

209 
nbr_èsks
 = 
˙t
;

210 
›t
) {

211 
OS_OPT_DEL_NO_PEND
:

212 i‡(
nbr_èsks
 =(
OS_OBJ_QTY
)0) {

213 #i‡
OS_CFG_DBG_EN
 > 0u

214 
	`OS_FœgDbgLi°Remove
(
p_gΩ
);

216 
OSFœgQty
--;

217 
	`OS_FœgCÃ
(
p_gΩ
);

219 
	`OS_CRITICAL_EXIT
();

220 *
p_îr
 = 
OS_ERR_NONE
;

222 
	`OS_CRITICAL_EXIT
();

223 *
p_îr
 = 
OS_ERR_TASK_WAITING
;

227 
OS_OPT_DEL_ALWAYS
:

228 
ts
 = 
	`OS_TS_GET
();

229 
˙t
 > 0u) {

230 
p_≥nd_d©a
 = 
p_≥nd_li°
->
HódPå
;

231 
p_tcb
 = 
p_≥nd_d©a
->
TCBPå
;

232 
	`OS_PídObjDñ
((
OS_PEND_OBJ
 *)((*)
p_gΩ
),

233 
p_tcb
,

234 
ts
);

235 
˙t
--;

237 #i‡
OS_CFG_DBG_EN
 > 0u

238 
	`OS_FœgDbgLi°Remove
(
p_gΩ
);

240 
OSFœgQty
--;

241 
	`OS_FœgCÃ
(
p_gΩ
);

242 
	`OS_CRITICAL_EXIT_NO_SCHED
();

243 
	`OSSched
();

244 *
p_îr
 = 
OS_ERR_NONE
;

248 
	`OS_CRITICAL_EXIT
();

249 *
p_îr
 = 
OS_ERR_OPT_INVALID
;

252  (
nbr_èsks
);

253 
	}
}

315 
OS_FLAGS
 
	$OSFœgPíd
 (
OS_FLAG_GRP
 *
p_gΩ
,

316 
OS_FLAGS
 
Êags
,

317 
OS_TICK
 
timeout
,

318 
OS_OPT
 
›t
,

319 
CPU_TS
 *
p_ts
,

320 
OS_ERR
 *
p_îr
)

322 
CPU_BOOLEAN
 
c⁄sume
;

323 
OS_FLAGS
 
Êags_rdy
;

324 
OS_OPT
 
mode
;

325 
OS_PEND_DATA
 
≥nd_d©a
;

326 
	`CPU_SR_ALLOC
();

330 #ifde‡
OS_SAFETY_CRITICAL


331 i‡(
p_îr
 =(
OS_ERR
 *)0) {

332 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

333  ((
OS_FLAGS
)0);

337 #i‡
OS_CFG_CALLED_FROM_ISR_CHK_EN
 > 0u

338 i‡(
OSI¡Ne°ögCå
 > (
OS_NESTING_CTR
)0) {

339 *
p_îr
 = 
OS_ERR_PEND_ISR
;

340  ((
OS_FLAGS
)0);

344 #i‡
OS_CFG_ARG_CHK_EN
 > 0u

345 i‡(
p_gΩ
 =(
OS_FLAG_GRP
 *)0) {

346 *
p_îr
 = 
OS_ERR_OBJ_PTR_NULL
;

347  ((
OS_FLAGS
)0);

349 
›t
) {

350 
OS_OPT_PEND_FLAG_CLR_ALL
:

351 
OS_OPT_PEND_FLAG_CLR_ANY
:

352 
OS_OPT_PEND_FLAG_SET_ALL
:

353 
OS_OPT_PEND_FLAG_SET_ANY
:

354 
OS_OPT_PEND_FLAG_CLR_ALL
 | 
OS_OPT_PEND_FLAG_CONSUME
:

355 
OS_OPT_PEND_FLAG_CLR_ANY
 | 
OS_OPT_PEND_FLAG_CONSUME
:

356 
OS_OPT_PEND_FLAG_SET_ALL
 | 
OS_OPT_PEND_FLAG_CONSUME
:

357 
OS_OPT_PEND_FLAG_SET_ANY
 | 
OS_OPT_PEND_FLAG_CONSUME
:

358 
OS_OPT_PEND_FLAG_CLR_ALL
 | 
OS_OPT_PEND_NON_BLOCKING
:

359 
OS_OPT_PEND_FLAG_CLR_ANY
 | 
OS_OPT_PEND_NON_BLOCKING
:

360 
OS_OPT_PEND_FLAG_SET_ALL
 | 
OS_OPT_PEND_NON_BLOCKING
:

361 
OS_OPT_PEND_FLAG_SET_ANY
 | 
OS_OPT_PEND_NON_BLOCKING
:

362 
OS_OPT_PEND_FLAG_CLR_ALL
 | 
OS_OPT_PEND_FLAG_CONSUME
 | 
OS_OPT_PEND_NON_BLOCKING
:

363 
OS_OPT_PEND_FLAG_CLR_ANY
 | 
OS_OPT_PEND_FLAG_CONSUME
 | 
OS_OPT_PEND_NON_BLOCKING
:

364 
OS_OPT_PEND_FLAG_SET_ALL
 | 
OS_OPT_PEND_FLAG_CONSUME
 | 
OS_OPT_PEND_NON_BLOCKING
:

365 
OS_OPT_PEND_FLAG_SET_ANY
 | 
OS_OPT_PEND_FLAG_CONSUME
 | 
OS_OPT_PEND_NON_BLOCKING
:

369 *
p_îr
 = 
OS_ERR_OPT_INVALID
;

370  ((
OS_OBJ_QTY
)0);

374 #i‡
OS_CFG_OBJ_TYPE_CHK_EN
 > 0u

375 i‡(
p_gΩ
->
Ty≥
 !
OS_OBJ_TYPE_FLAG
) {

376 *
p_îr
 = 
OS_ERR_OBJ_TYPE
;

377  ((
OS_FLAGS
)0);

381 i‡((
›t
 & 
OS_OPT_PEND_FLAG_CONSUME
Ë!(
OS_OPT
)0) {

382 
c⁄sume
 = 
DEF_TRUE
;

384 
c⁄sume
 = 
DEF_FALSE
;

387 i‡(
p_ts
 !(
CPU_TS
 *)0) {

388 *
p_ts
 = (
CPU_TS
)0;

391 
mode
 = 
›t
 & 
OS_OPT_PEND_FLAG_MASK
;

392 
	`CPU_CRITICAL_ENTER
();

393 
mode
) {

394 
OS_OPT_PEND_FLAG_SET_ALL
:

395 
Êags_rdy
 = (
OS_FLAGS
)(
p_gΩ
->
Fœgs
 & 
Êags
);

396 i‡(
Êags_rdy
 =
Êags
) {

397 i‡(
c⁄sume
 =
DEF_TRUE
) {

398 
p_gΩ
->
Fœgs
 &~
Êags_rdy
;

400 
OSTCBCurPå
->
FœgsRdy
 = 
Êags_rdy
;

401 i‡(
p_ts
 !(
CPU_TS
 *)0) {

402 *
p_ts
 = 
p_gΩ
->
TS
;

404 
	`CPU_CRITICAL_EXIT
();

405 *
p_îr
 = 
OS_ERR_NONE
;

406  (
Êags_rdy
);

408 i‡((
›t
 & 
OS_OPT_PEND_NON_BLOCKING
Ë!(
OS_OPT
)0) {

409 
	`CPU_CRITICAL_EXIT
();

410 *
p_îr
 = 
OS_ERR_PEND_WOULD_BLOCK
;

411  ((
OS_FLAGS
)0);

413 i‡(
OSSchedLockNe°ögCå
 > (
OS_NESTING_CTR
)0) {

414 
	`CPU_CRITICAL_EXIT
();

415 *
p_îr
 = 
OS_ERR_SCHED_LOCKED
;

416  ((
OS_FLAGS
)0);

420 
	`OS_CRITICAL_ENTER_CPU_CRITICAL_EXIT
();

421 
	`OS_FœgBlock
(&
≥nd_d©a
,

422 
p_gΩ
,

423 
Êags
,

424 
›t
,

425 
timeout
);

426 
	`OS_CRITICAL_EXIT_NO_SCHED
();

430 
OS_OPT_PEND_FLAG_SET_ANY
:

431 
Êags_rdy
 = (
OS_FLAGS
)(
p_gΩ
->
Fœgs
 & 
Êags
);

432 i‡(
Êags_rdy
 !(
OS_FLAGS
)0) {

433 i‡(
c⁄sume
 =
DEF_TRUE
) {

434 
p_gΩ
->
Fœgs
 &~
Êags_rdy
;

436 
OSTCBCurPå
->
FœgsRdy
 = 
Êags_rdy
;

437 i‡(
p_ts
 !(
CPU_TS
 *)0) {

438 *
p_ts
 = 
p_gΩ
->
TS
;

440 
	`CPU_CRITICAL_EXIT
();

441 *
p_îr
 = 
OS_ERR_NONE
;

442  (
Êags_rdy
);

444 i‡((
›t
 & 
OS_OPT_PEND_NON_BLOCKING
Ë!(
OS_OPT
)0) {

445 
	`CPU_CRITICAL_EXIT
();

446 *
p_îr
 = 
OS_ERR_PEND_WOULD_BLOCK
;

447  ((
OS_FLAGS
)0);

449 i‡(
OSSchedLockNe°ögCå
 > (
OS_NESTING_CTR
)0) {

450 
	`CPU_CRITICAL_EXIT
();

451 *
p_îr
 = 
OS_ERR_SCHED_LOCKED
;

452  ((
OS_FLAGS
)0);

456 
	`OS_CRITICAL_ENTER_CPU_CRITICAL_EXIT
();

457 
	`OS_FœgBlock
(&
≥nd_d©a
,

458 
p_gΩ
,

459 
Êags
,

460 
›t
,

461 
timeout
);

462 
	`OS_CRITICAL_EXIT_NO_SCHED
();

466 #i‡
OS_CFG_FLAG_MODE_CLR_EN
 > 0u

467 
OS_OPT_PEND_FLAG_CLR_ALL
:

468 
Êags_rdy
 = (
OS_FLAGS
)(~
p_gΩ
->
Fœgs
 & 
Êags
);

469 i‡(
Êags_rdy
 =
Êags
) {

470 i‡(
c⁄sume
 =
DEF_TRUE
) {

471 
p_gΩ
->
Fœgs
 |
Êags_rdy
;

473 
OSTCBCurPå
->
FœgsRdy
 = 
Êags_rdy
;

474 i‡(
p_ts
 !(
CPU_TS
 *)0) {

475 *
p_ts
 = 
p_gΩ
->
TS
;

477 
	`CPU_CRITICAL_EXIT
();

478 *
p_îr
 = 
OS_ERR_NONE
;

479  (
Êags_rdy
);

481 i‡((
›t
 & 
OS_OPT_PEND_NON_BLOCKING
Ë!(
OS_OPT
)0) {

482 
	`CPU_CRITICAL_EXIT
();

483 *
p_îr
 = 
OS_ERR_PEND_WOULD_BLOCK
;

484  ((
OS_FLAGS
)0);

486 i‡(
OSSchedLockNe°ögCå
 > (
OS_NESTING_CTR
)0) {

487 
	`CPU_CRITICAL_EXIT
();

488 *
p_îr
 = 
OS_ERR_SCHED_LOCKED
;

489  ((
OS_FLAGS
)0);

493 
	`OS_CRITICAL_ENTER_CPU_CRITICAL_EXIT
();

494 
	`OS_FœgBlock
(&
≥nd_d©a
,

495 
p_gΩ
,

496 
Êags
,

497 
›t
,

498 
timeout
);

499 
	`OS_CRITICAL_EXIT_NO_SCHED
();

503 
OS_OPT_PEND_FLAG_CLR_ANY
:

504 
Êags_rdy
 = (
OS_FLAGS
)(~
p_gΩ
->
Fœgs
 & 
Êags
);

505 i‡(
Êags_rdy
 !(
OS_FLAGS
)0) {

506 i‡(
c⁄sume
 =
DEF_TRUE
) {

507 
p_gΩ
->
Fœgs
 |
Êags_rdy
;

509 
OSTCBCurPå
->
FœgsRdy
 = 
Êags_rdy
;

510 i‡(
p_ts
 !(
CPU_TS
 *)0) {

511 *
p_ts
 = 
p_gΩ
->
TS
;

513 
	`CPU_CRITICAL_EXIT
();

514 *
p_îr
 = 
OS_ERR_NONE
;

515  (
Êags_rdy
);

517 i‡((
›t
 & 
OS_OPT_PEND_NON_BLOCKING
Ë!(
OS_OPT
)0) {

518 
	`CPU_CRITICAL_EXIT
();

519 *
p_îr
 = 
OS_ERR_PEND_WOULD_BLOCK
;

520  ((
OS_FLAGS
)0);

522 i‡(
OSSchedLockNe°ögCå
 > (
OS_NESTING_CTR
)0) {

523 
	`CPU_CRITICAL_EXIT
();

524 *
p_îr
 = 
OS_ERR_SCHED_LOCKED
;

525  ((
OS_FLAGS
)0);

529 
	`OS_CRITICAL_ENTER_CPU_CRITICAL_EXIT
();

530 
	`OS_FœgBlock
(&
≥nd_d©a
,

531 
p_gΩ
,

532 
Êags
,

533 
›t
,

534 
timeout
);

535 
	`OS_CRITICAL_EXIT_NO_SCHED
();

541 
	`CPU_CRITICAL_EXIT
();

542 *
p_îr
 = 
OS_ERR_OPT_INVALID
;

543  ((
OS_FLAGS
)0);

546 
	`OSSched
();

548 
	`CPU_CRITICAL_ENTER
();

549 
OSTCBCurPå
->
PídSètus
) {

550 
OS_STATUS_PEND_OK
:

551 i‡(
p_ts
 !(
CPU_TS
 *)0) {

552 *
p_ts
 = 
OSTCBCurPå
->
TS
;

554 *
p_îr
 = 
OS_ERR_NONE
;

557 
OS_STATUS_PEND_ABORT
:

558 i‡(
p_ts
 !(
CPU_TS
 *)0) {

559 *
p_ts
 = 
OSTCBCurPå
->
TS
;

561 
	`CPU_CRITICAL_EXIT
();

562 *
p_îr
 = 
OS_ERR_PEND_ABORT
;

563  ((
OS_FLAGS
)0);

565 
OS_STATUS_PEND_TIMEOUT
:

566 i‡(
p_ts
 !(
CPU_TS
 *)0) {

567 *
p_ts
 = (
CPU_TS
 )0;

569 
	`CPU_CRITICAL_EXIT
();

570 *
p_îr
 = 
OS_ERR_TIMEOUT
;

571  ((
OS_FLAGS
)0);

573 
OS_STATUS_PEND_DEL
:

574 i‡(
p_ts
 !(
CPU_TS
 *)0) {

575 *
p_ts
 = 
OSTCBCurPå
->
TS
;

577 
	`CPU_CRITICAL_EXIT
();

578 *
p_îr
 = 
OS_ERR_OBJ_DEL
;

579  ((
OS_FLAGS
)0);

582 
	`CPU_CRITICAL_EXIT
();

583 *
p_îr
 = 
OS_ERR_STATUS_INVALID
;

584  ((
OS_FLAGS
)0);

587 
Êags_rdy
 = 
OSTCBCurPå
->
FœgsRdy
;

588 i‡(
c⁄sume
 =
DEF_TRUE
) {

589 
mode
) {

590 
OS_OPT_PEND_FLAG_SET_ALL
:

591 
OS_OPT_PEND_FLAG_SET_ANY
:

592 
p_gΩ
->
Fœgs
 &~
Êags_rdy
;

595 #i‡
OS_CFG_FLAG_MODE_CLR_EN
 > 0u

596 
OS_OPT_PEND_FLAG_CLR_ALL
:

597 
OS_OPT_PEND_FLAG_CLR_ANY
:

598 
p_gΩ
->
Fœgs
 |
Êags_rdy
;

602 
	`CPU_CRITICAL_EXIT
();

603 *
p_îr
 = 
OS_ERR_OPT_INVALID
;

604  ((
OS_FLAGS
)0);

607 
	`CPU_CRITICAL_EXIT
();

608 *
p_îr
 = 
OS_ERR_NONE
;

609  (
Êags_rdy
);

610 
	}
}

646 #i‡
OS_CFG_FLAG_PEND_ABORT_EN
 > 0u

647 
OS_OBJ_QTY
 
	$OSFœgPídAb‹t
 (
OS_FLAG_GRP
 *
p_gΩ
,

648 
OS_OPT
 
›t
,

649 
OS_ERR
 *
p_îr
)

651 
OS_PEND_LIST
 *
p_≥nd_li°
;

652 
OS_TCB
 *
p_tcb
;

653 
CPU_TS
 
ts
;

654 
OS_OBJ_QTY
 
nbr_èsks
;

655 
	`CPU_SR_ALLOC
();

659 #ifde‡
OS_SAFETY_CRITICAL


660 i‡(
p_îr
 =(
OS_ERR
 *)0) {

661 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

662  ((
OS_OBJ_QTY
)0u);

666 #i‡
OS_CFG_CALLED_FROM_ISR_CHK_EN
 > 0u

667 i‡(
OSI¡Ne°ögCå
 > (
OS_NESTING_CTR
)0u) {

668 *
p_îr
 = 
OS_ERR_PEND_ABORT_ISR
;

669  ((
OS_OBJ_QTY
)0u);

673 #i‡
OS_CFG_ARG_CHK_EN
 > 0u

674 i‡(
p_gΩ
 =(
OS_FLAG_GRP
 *)0) {

675 *
p_îr
 = 
OS_ERR_OBJ_PTR_NULL
;

676  ((
OS_OBJ_QTY
)0u);

678 
›t
) {

679 
OS_OPT_PEND_ABORT_1
:

680 
OS_OPT_PEND_ABORT_ALL
:

681 
OS_OPT_PEND_ABORT_1
 | 
OS_OPT_POST_NO_SCHED
:

682 
OS_OPT_PEND_ABORT_ALL
 | 
OS_OPT_POST_NO_SCHED
:

686 *
p_îr
 = 
OS_ERR_OPT_INVALID
;

687  ((
OS_OBJ_QTY
)0u);

691 #i‡
OS_CFG_OBJ_TYPE_CHK_EN
 > 0u

692 i‡(
p_gΩ
->
Ty≥
 !
OS_OBJ_TYPE_FLAG
) {

693 *
p_îr
 = 
OS_ERR_OBJ_TYPE
;

694  ((
OS_OBJ_QTY
)0u);

698 
	`CPU_CRITICAL_ENTER
();

699 
p_≥nd_li°
 = &
p_gΩ
->
PídLi°
;

700 i‡(
p_≥nd_li°
->
NbrE¡rõs
 =(
OS_OBJ_QTY
)0u) {

701 
	`CPU_CRITICAL_EXIT
();

702 *
p_îr
 = 
OS_ERR_PEND_ABORT_NONE
;

703  ((
OS_OBJ_QTY
)0u);

706 
	`OS_CRITICAL_ENTER_CPU_CRITICAL_EXIT
();

707 
nbr_èsks
 = 0u;

708 
ts
 = 
	`OS_TS_GET
();

709 
p_≥nd_li°
->
NbrE¡rõs
 > (
OS_OBJ_QTY
)0u) {

710 
p_tcb
 = 
p_≥nd_li°
->
HódPå
->
TCBPå
;

711 
	`OS_PídAb‹t
((
OS_PEND_OBJ
 *)((*)
p_gΩ
),

712 
p_tcb
,

713 
ts
);

714 
nbr_èsks
++;

715 i‡(
›t
 !
OS_OPT_PEND_ABORT_ALL
) {

719 
	`OS_CRITICAL_EXIT_NO_SCHED
();

721 i‡((
›t
 & 
OS_OPT_POST_NO_SCHED
Ë=(
OS_OPT
)0u) {

722 
	`OSSched
();

725 *
p_îr
 = 
OS_ERR_NONE
;

726  (
nbr_èsks
);

727 
	}
}

747 
OS_FLAGS
 
	$OSFœgPídGëFœgsRdy
 (
OS_ERR
 *
p_îr
)

749 
OS_FLAGS
 
Êags
;

750 
	`CPU_SR_ALLOC
();

754 #ifde‡
OS_SAFETY_CRITICAL


755 i‡(
p_îr
 =(
OS_ERR
 *)0) {

756 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

757  ((
OS_FLAGS
)0);

761 #i‡
OS_CFG_CALLED_FROM_ISR_CHK_EN
 > 0u

762 i‡(
OSI¡Ne°ögCå
 > (
OS_NESTING_CTR
)0) {

763 *
p_îr
 = 
OS_ERR_PEND_ISR
;

764  ((
OS_FLAGS
)0);

768 
	`CPU_CRITICAL_ENTER
();

769 
Êags
 = 
OSTCBCurPå
->
FœgsRdy
;

770 
	`CPU_CRITICAL_EXIT
();

771 *
p_îr
 = 
OS_ERR_NONE
;

772  (
Êags
);

773 
	}
}

817 
OS_FLAGS
 
	$OSFœgPo°
 (
OS_FLAG_GRP
 *
p_gΩ
,

818 
OS_FLAGS
 
Êags
,

819 
OS_OPT
 
›t
,

820 
OS_ERR
 *
p_îr
)

822 
OS_FLAGS
 
Êags_cur
;

823 
CPU_TS
 
ts
;

827 #ifde‡
OS_SAFETY_CRITICAL


828 i‡(
p_îr
 =(
OS_ERR
 *)0) {

829 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

830  ((
OS_FLAGS
)0);

834 #i‡
OS_CFG_ARG_CHK_EN
 > 0u

835 i‡(
p_gΩ
 =(
OS_FLAG_GRP
 *)0) {

836 *
p_îr
 = 
OS_ERR_OBJ_PTR_NULL
;

837  ((
OS_FLAGS
)0);

839 
›t
) {

840 
OS_OPT_POST_FLAG_SET
:

841 
OS_OPT_POST_FLAG_CLR
:

842 
OS_OPT_POST_FLAG_SET
 | 
OS_OPT_POST_NO_SCHED
:

843 
OS_OPT_POST_FLAG_CLR
 | 
OS_OPT_POST_NO_SCHED
:

847 *
p_îr
 = 
OS_ERR_OPT_INVALID
;

848  ((
OS_FLAGS
)0);

852 #i‡
OS_CFG_OBJ_TYPE_CHK_EN
 > 0u

853 i‡(
p_gΩ
->
Ty≥
 !
OS_OBJ_TYPE_FLAG
) {

854 *
p_îr
 = 
OS_ERR_OBJ_TYPE
;

855  ((
OS_FLAGS
)0);

859 
ts
 = 
	`OS_TS_GET
();

860 #i‡
OS_CFG_ISR_POST_DEFERRED_EN
 > 0u

861 i‡(
OSI¡Ne°ögCå
 > (
OS_NESTING_CTR
)0) {

862 
	`OS_I¡QPo°
((
OS_OBJ_TYPE
)
OS_OBJ_TYPE_FLAG
,

863 (*)
p_gΩ
,

865 (
OS_MSG_SIZE
)0,

866 (
OS_FLAGS
 )
Êags
,

867 (
OS_OPT
 )
›t
,

868 (
CPU_TS
 )
ts
,

869 (
OS_ERR
 *)
p_îr
);

870  ((
OS_FLAGS
)0);

874 
Êags_cur
 = 
	`OS_FœgPo°
(
p_gΩ
,

875 
Êags
,

876 
›t
,

877 
ts
,

878 
p_îr
);

880  (
Êags_cur
);

881 
	}
}

920 
	$OS_FœgBlock
 (
OS_PEND_DATA
 *
p_≥nd_d©a
,

921 
OS_FLAG_GRP
 *
p_gΩ
,

922 
OS_FLAGS
 
Êags
,

923 
OS_OPT
 
›t
,

924 
OS_TICK
 
timeout
)

926 
OSTCBCurPå
->
FœgsPíd
 = 
Êags
;

927 
OSTCBCurPå
->
FœgsO±
 = 
›t
;

928 
OSTCBCurPå
->
FœgsRdy
 = (
OS_FLAGS
)0;

930 
	`OS_Píd
(
p_≥nd_d©a
,

931 (
OS_PEND_OBJ
 *)((*)
p_gΩ
),

932 
OS_TASK_PEND_ON_FLAG
,

933 
timeout
);

934 
	}
}

953 
	$OS_FœgCÃ
 (
OS_FLAG_GRP
 *
p_gΩ
)

955 
OS_PEND_LIST
 *
p_≥nd_li°
;

959 
p_gΩ
->
Ty≥
 = 
OS_OBJ_TYPE_NONE
;

960 
p_gΩ
->
NamePå
 = (
CPU_CHAR
 *)((*)"?FLAG");

961 
p_gΩ
->
Fœgs
 = (
OS_FLAGS
 )0;

962 
p_≥nd_li°
 = &
p_gΩ
->
PídLi°
;

963 
	`OS_PídLi°Inô
(
p_≥nd_li°
);

964 
	}
}

984 
	$OS_FœgInô
 (
OS_ERR
 *
p_îr
)

986 #ifde‡
OS_SAFETY_CRITICAL


987 i‡(
p_îr
 =(
OS_ERR
 *)0) {

988 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

993 #i‡
OS_CFG_DBG_EN
 > 0u

994 
OSFœgDbgLi°På
 = (
OS_FLAG_GRP
 *)0;

997 
OSFœgQty
 = (
OS_OBJ_QTY
 )0;

998 *
p_îr
 = 
OS_ERR_NONE
;

999 
	}
}

1017 #i‡
OS_CFG_DBG_EN
 > 0u

1018 
	$OS_FœgDbgLi°Add
 (
OS_FLAG_GRP
 *
p_gΩ
)

1020 
p_gΩ
->
DbgNamePå
 = (
CPU_CHAR
 *)((*)" ");

1021 
p_gΩ
->
DbgPªvPå
 = (
OS_FLAG_GRP
 *)0;

1022 i‡(
OSFœgDbgLi°På
 =(
OS_FLAG_GRP
 *)0) {

1023 
p_gΩ
->
DbgNextPå
 = (
OS_FLAG_GRP
 *)0;

1025 
p_gΩ
->
DbgNextPå
 = 
OSFœgDbgLi°På
;

1026 
OSFœgDbgLi°På
->
DbgPªvPå
 = 
p_gΩ
;

1028 
OSFœgDbgLi°På
 = 
p_gΩ
;

1029 
	}
}

1033 
	$OS_FœgDbgLi°Remove
 (
OS_FLAG_GRP
 *
p_gΩ
)

1035 
OS_FLAG_GRP
 *
p_gΩ_√xt
;

1036 
OS_FLAG_GRP
 *
p_gΩ_¥ev
;

1039 
p_gΩ_¥ev
 = 
p_gΩ
->
DbgPªvPå
;

1040 
p_gΩ_√xt
 = 
p_gΩ
->
DbgNextPå
;

1042 i‡(
p_gΩ_¥ev
 =(
OS_FLAG_GRP
 *)0) {

1043 
OSFœgDbgLi°På
 = 
p_gΩ_√xt
;

1044 i‡(
p_gΩ_√xt
 !(
OS_FLAG_GRP
 *)0) {

1045 
p_gΩ_√xt
->
DbgPªvPå
 = (
OS_FLAG_GRP
 *)0;

1047 
p_gΩ
->
DbgNextPå
 = (
OS_FLAG_GRP
 *)0;

1049 } i‡(
p_gΩ_√xt
 =(
OS_FLAG_GRP
 *)0) {

1050 
p_gΩ_¥ev
->
DbgNextPå
 = (
OS_FLAG_GRP
 *)0;

1051 
p_gΩ
->
DbgPªvPå
 = (
OS_FLAG_GRP
 *)0;

1054 
p_gΩ_¥ev
->
DbgNextPå
 = 
p_gΩ_√xt
;

1055 
p_gΩ_√xt
->
DbgPªvPå
 = 
p_gΩ_¥ev
;

1056 
p_gΩ
->
DbgNextPå
 = (
OS_FLAG_GRP
 *)0;

1057 
p_gΩ
->
DbgPªvPå
 = (
OS_FLAG_GRP
 *)0;

1059 
	}
}

1106 
OS_FLAGS
 
	$OS_FœgPo°
 (
OS_FLAG_GRP
 *
p_gΩ
,

1107 
OS_FLAGS
 
Êags
,

1108 
OS_OPT
 
›t
,

1109 
CPU_TS
 
ts
,

1110 
OS_ERR
 *
p_îr
)

1112 
OS_FLAGS
 
Êags_cur
;

1113 
OS_FLAGS
 
Êags_rdy
;

1114 
OS_OPT
 
mode
;

1115 
OS_PEND_DATA
 *
p_≥nd_d©a
;

1116 
OS_PEND_DATA
 *
p_≥nd_d©a_√xt
;

1117 
OS_PEND_LIST
 *
p_≥nd_li°
;

1118 
OS_TCB
 *
p_tcb
;

1119 
	`CPU_SR_ALLOC
();

1123 
	`CPU_CRITICAL_ENTER
();

1124 
›t
) {

1125 
OS_OPT_POST_FLAG_SET
:

1126 
OS_OPT_POST_FLAG_SET
 | 
OS_OPT_POST_NO_SCHED
:

1127 
p_gΩ
->
Fœgs
 |
Êags
;

1130 
OS_OPT_POST_FLAG_CLR
:

1131 
OS_OPT_POST_FLAG_CLR
 | 
OS_OPT_POST_NO_SCHED
:

1132 
p_gΩ
->
Fœgs
 &~
Êags
;

1136 
	`CPU_CRITICAL_EXIT
();

1137 *
p_îr
 = 
OS_ERR_OPT_INVALID
;

1138  ((
OS_FLAGS
)0);

1140 
p_gΩ
->
TS
 = 
ts
;

1141 
p_≥nd_li°
 = &
p_gΩ
->
PídLi°
;

1142 i‡(
p_≥nd_li°
->
NbrE¡rõs
 == 0u) {

1143 
	`CPU_CRITICAL_EXIT
();

1144 *
p_îr
 = 
OS_ERR_NONE
;

1145  (
p_gΩ
->
Fœgs
);

1148 
	`OS_CRITICAL_ENTER_CPU_CRITICAL_EXIT
();

1149 
p_≥nd_d©a
 = 
p_≥nd_li°
->
HódPå
;

1150 
p_tcb
 = 
p_≥nd_d©a
->
TCBPå
;

1151 
p_tcb
 !(
OS_TCB
 *)0) {

1152 
p_≥nd_d©a_√xt
 = 
p_≥nd_d©a
->
NextPå
;

1153 
mode
 = 
p_tcb
->
FœgsO±
 & 
OS_OPT_PEND_FLAG_MASK
;

1154 
mode
) {

1155 
OS_OPT_PEND_FLAG_SET_ALL
:

1156 
Êags_rdy
 = (
OS_FLAGS
)(
p_gΩ
->
Fœgs
 & 
p_tcb
->
FœgsPíd
);

1157 i‡(
Êags_rdy
 =
p_tcb
->
FœgsPíd
) {

1158 
	`OS_FœgTaskRdy
(
p_tcb
,

1159 
Êags_rdy
,

1160 
ts
);

1164 
OS_OPT_PEND_FLAG_SET_ANY
:

1165 
Êags_rdy
 = (
OS_FLAGS
)(
p_gΩ
->
Fœgs
 & 
p_tcb
->
FœgsPíd
);

1166 i‡(
Êags_rdy
 !(
OS_FLAGS
)0) {

1167 
	`OS_FœgTaskRdy
(
p_tcb
,

1168 
Êags_rdy
,

1169 
ts
);

1173 #i‡
OS_CFG_FLAG_MODE_CLR_EN
 > 0u

1174 
OS_OPT_PEND_FLAG_CLR_ALL
:

1175 
Êags_rdy
 = (
OS_FLAGS
)(~
p_gΩ
->
Fœgs
 & 
p_tcb
->
FœgsPíd
);

1176 i‡(
Êags_rdy
 =
p_tcb
->
FœgsPíd
) {

1177 
	`OS_FœgTaskRdy
(
p_tcb
,

1178 
Êags_rdy
,

1179 
ts
);

1183 
OS_OPT_PEND_FLAG_CLR_ANY
:

1184 
Êags_rdy
 = (
OS_FLAGS
)(~
p_gΩ
->
Fœgs
 & 
p_tcb
->
FœgsPíd
);

1185 i‡(
Êags_rdy
 !(
OS_FLAGS
)0) {

1186 
	`OS_FœgTaskRdy
(
p_tcb
,

1187 
Êags_rdy
,

1188 
ts
);

1193 
	`OS_CRITICAL_EXIT
();

1194 *
p_îr
 = 
OS_ERR_FLAG_PEND_OPT
;

1195  ((
OS_FLAGS
)0);

1197 
p_≥nd_d©a
 = 
p_≥nd_d©a_√xt
;

1198 i‡(
p_≥nd_d©a
 !(
OS_PEND_DATA
 *)0) {

1199 
p_tcb
 = 
p_≥nd_d©a
->
TCBPå
;

1201 
p_tcb
 = (
OS_TCB
 *)0;

1204 
	`OS_CRITICAL_EXIT_NO_SCHED
();

1206 i‡((
›t
 & 
OS_OPT_POST_NO_SCHED
Ë=(
OS_OPT
)0) {

1207 
	`OSSched
();

1210 
	`CPU_CRITICAL_ENTER
();

1211 
Êags_cur
 = 
p_gΩ
->
Fœgs
;

1212 
	`CPU_CRITICAL_EXIT
();

1213 *
p_îr
 = 
OS_ERR_NONE
;

1214  (
Êags_cur
);

1215 
	}
}

1238 
	$OS_FœgTaskRdy
 (
OS_TCB
 *
p_tcb
,

1239 
OS_FLAGS
 
Êags_rdy
,

1240 
CPU_TS
 
ts
)

1242 
p_tcb
->
FœgsRdy
 = 
Êags_rdy
;

1243 
p_tcb
->
PídSètus
 = 
OS_STATUS_PEND_OK
;

1244 
p_tcb
->
PídOn
 = 
OS_TASK_PEND_ON_NOTHING
;

1245 
p_tcb
->
TS
 = 
ts
;

1246 
p_tcb
->
TaskSèã
) {

1247 
OS_TASK_STATE_RDY
:

1248 
OS_TASK_STATE_DLY
:

1249 
OS_TASK_STATE_DLY_SUSPENDED
:

1250 
OS_TASK_STATE_SUSPENDED
:

1253 
OS_TASK_STATE_PEND
:

1254 
OS_TASK_STATE_PEND_TIMEOUT
:

1255 
	`OS_TaskRdy
(
p_tcb
);

1256 
p_tcb
->
TaskSèã
 = 
OS_TASK_STATE_RDY
;

1259 
OS_TASK_STATE_PEND_SUSPENDED
:

1260 
OS_TASK_STATE_PEND_TIMEOUT_SUSPENDED
:

1261 
p_tcb
->
TaskSèã
 = 
OS_TASK_STATE_SUSPENDED
;

1267 
	`OS_PídLi°Remove
(
p_tcb
);

1268 
	}
}

	@Source/os_int.c

33 
	#MICRIUM_SOURCE


	)

34 
	~<os.h
>

36 #ifde‡
VSC_INCLUDE_SOURCE_FILE_NAMES


37 c⁄° 
CPU_CHAR
 *
	gos_öt__c
 = "$Id: $";

41 #i‡
OS_CFG_ISR_POST_DEFERRED_EN
 > 0u

91 
	$OS_I¡QPo°
 (
OS_OBJ_TYPE
 
ty≥
,

92 *
p_obj
,

93 *
p_void
,

94 
OS_MSG_SIZE
 
msg_size
,

95 
OS_FLAGS
 
Êags
,

96 
OS_OPT
 
›t
,

97 
CPU_TS
 
ts
,

98 
OS_ERR
 *
p_îr
)

100 
	`CPU_SR_ALLOC
();

104 #ifde‡
OS_SAFETY_CRITICAL


105 i‡(
p_îr
 =(
OS_ERR
 *)0) {

106 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

111 
	`CPU_CRITICAL_ENTER
();

112 i‡(
OSI¡QNbrE¡rõs
 < 
OSCfg_I¡QSize
) {

113 
OSI¡QNbrE¡rõs
++;

115 i‡(
OSI¡QNbrE¡rõsMax
 < 
OSI¡QNbrE¡rõs
) {

116 
OSI¡QNbrE¡rõsMax
 = 
OSI¡QNbrE¡rõs
;

119 
OSI¡QInPå
->
Ty≥
 = 
ty≥
;

120 
OSI¡QInPå
->
ObjPå
 = 
p_obj
;

121 
OSI¡QInPå
->
MsgPå
 = 
p_void
;

122 
OSI¡QInPå
->
MsgSize
 = 
msg_size
;

123 
OSI¡QInPå
->
Fœgs
 = 
Êags
;

124 
OSI¡QInPå
->
O±
 = 
›t
;

125 
OSI¡QInPå
->
TS
 = 
ts
;

127 
OSI¡QInPå
 = OSI¡QInPå->
NextPå
;

129 
OSRdyLi°
[0].
NbrE¡rõs
 = (
OS_OBJ_QTY
)1;

130 
OSRdyLi°
[0].
HódPå
 = &
OSI¡QTaskTCB
;

131 
OSRdyLi°
[0].
TaûPå
 = &
OSI¡QTaskTCB
;

132 
	`OS_PrioIn£π
(0u);

133 i‡(
OSPrioCur
 != 0) {

134 
OSPrioSaved
 = 
OSPrioCur
;

137 *
p_îr
 = 
OS_ERR_NONE
;

139 
OSI¡QOvfCå
++;

140 *
p_îr
 = 
OS_ERR_INT_Q_FULL
;

142 
	`CPU_CRITICAL_EXIT
();

143 
	}
}

159 
	$OS_I¡QRePo°
 ()

161 
CPU_TS
 
ts
;

162 
OS_ERR
 
îr
;

165 
OSI¡QOutPå
->
Ty≥
) {

166 
OS_OBJ_TYPE_FLAG
:

167 #i‡
OS_CFG_FLAG_EN
 > 0u

168 ()
	`OS_FœgPo°
((
OS_FLAG_GRP
 *Ë
OSI¡QOutPå
->
ObjPå
,

169 (
OS_FLAGS
 ) 
OSI¡QOutPå
->
Fœgs
,

170 (
OS_OPT
 ) 
OSI¡QOutPå
->
O±
,

171 (
CPU_TS
 ) 
OSI¡QOutPå
->
TS
,

172 (
OS_ERR
 *)&
îr
);

176 
OS_OBJ_TYPE_Q
:

177 #i‡
OS_CFG_Q_EN
 > 0u

178 
	`OS_QPo°
((
OS_Q
 *Ë
OSI¡QOutPå
->
ObjPå
,

179 (*Ë
OSI¡QOutPå
->
MsgPå
,

180 (
OS_MSG_SIZE
Ë
OSI¡QOutPå
->
MsgSize
,

181 (
OS_OPT
 ) 
OSI¡QOutPå
->
O±
,

182 (
CPU_TS
 ) 
OSI¡QOutPå
->
TS
,

183 (
OS_ERR
 *)&
îr
);

187 
OS_OBJ_TYPE_SEM
:

188 #i‡
OS_CFG_SEM_EN
 > 0u

189 ()
	`OS_SemPo°
((
OS_SEM
 *Ë
OSI¡QOutPå
->
ObjPå
,

190 (
OS_OPT
 ) 
OSI¡QOutPå
->
O±
,

191 (
CPU_TS
 ) 
OSI¡QOutPå
->
TS
,

192 (
OS_ERR
 *)&
îr
);

196 
OS_OBJ_TYPE_TASK_MSG
:

197 #i‡
OS_CFG_TASK_Q_EN
 > 0u

198 
	`OS_TaskQPo°
((
OS_TCB
 *Ë
OSI¡QOutPå
->
ObjPå
,

199 (*Ë
OSI¡QOutPå
->
MsgPå
,

200 (
OS_MSG_SIZE
Ë
OSI¡QOutPå
->
MsgSize
,

201 (
OS_OPT
 ) 
OSI¡QOutPå
->
O±
,

202 (
CPU_TS
 ) 
OSI¡QOutPå
->
TS
,

203 (
OS_ERR
 *)&
îr
);

207 
OS_OBJ_TYPE_TASK_RESUME
:

208 #i‡
OS_CFG_TASK_SUSPEND_EN
 > 0u

209 ()
	`OS_TaskResume
((
OS_TCB
 *Ë
OSI¡QOutPå
->
ObjPå
,

210 (
OS_ERR
 *)&
îr
);

214 
OS_OBJ_TYPE_TASK_SIGNAL
:

215 ()
	`OS_TaskSemPo°
((
OS_TCB
 *Ë
OSI¡QOutPå
->
ObjPå
,

216 (
OS_OPT
 ) 
OSI¡QOutPå
->
O±
,

217 (
CPU_TS
 ) 
OSI¡QOutPå
->
TS
,

218 (
OS_ERR
 *)&
îr
);

221 
OS_OBJ_TYPE_TASK_SUSPEND
:

222 #i‡
OS_CFG_TASK_SUSPEND_EN
 > 0u

223 ()
	`OS_TaskSu•íd
((
OS_TCB
 *Ë
OSI¡QOutPå
->
ObjPå
,

224 (
OS_ERR
 *)&
îr
);

228 
OS_OBJ_TYPE_TICK
:

229 #i‡
OS_CFG_SCHED_ROUND_ROBIN_EN
 > 0u

230 
	`OS_SchedRoundRobö
(&
OSRdyLi°
[
OSPrioSaved
]);

233 ()
	`OS_TaskSemPo°
((
OS_TCB
 *)&
OSTickTaskTCB
,

234 (
OS_OPT
 ) 
OS_OPT_POST_NONE
,

235 (
CPU_TS
 ) 
OSI¡QOutPå
->
TS
,

236 (
OS_ERR
 *)&
îr
);

237 #i‡
OS_CFG_TMR_EN
 > 0u

238 
OSTmrUpd©eCå
--;

239 i‡(
OSTmrUpd©eCå
 =(
OS_CTR
)0u) {

240 
OSTmrUpd©eCå
 = 
OSTmrUpd©eC¡
;

241 
ts
 = 
	`OS_TS_GET
();

242 ()
	`OS_TaskSemPo°
((
OS_TCB
 *)&
OSTmrTaskTCB
,

243 (
OS_OPT
 ) 
OS_OPT_POST_NONE
,

244 (
CPU_TS
 ) 
ts
,

245 (
OS_ERR
 *)&
îr
);

253 
	}
}

269 
	$OS_I¡QTask
 (*
p_¨g
)

271 
CPU_BOOLEAN
 
d⁄e
;

272 
CPU_TS
 
ts_°¨t
;

273 
CPU_TS
 
ts_íd
;

274 
	`CPU_SR_ALLOC
();

278 
p_¨g
 =Ö_arg;

279 
DEF_ON
) {

280 
d⁄e
 = 
DEF_FALSE
;

281 
d⁄e
 =
DEF_FALSE
) {

282 
	`CPU_CRITICAL_ENTER
();

283 i‡(
OSI¡QNbrE¡rõs
 =(
OS_OBJ_QTY
)0u) {

284 
OSRdyLi°
[0].
NbrE¡rõs
 = (
OS_OBJ_QTY
)0u;

285 
OSRdyLi°
[0].
HódPå
 = (
OS_TCB
 *)0;

286 
OSRdyLi°
[0].
TaûPå
 = (
OS_TCB
 *)0;

287 
	`OS_PrioRemove
(0u);

288 
	`CPU_CRITICAL_EXIT
();

289 
	`OSSched
();

290 
d⁄e
 = 
DEF_TRUE
;

292 
	`CPU_CRITICAL_EXIT
();

293 
ts_°¨t
 = 
	`OS_TS_GET
();

294 
	`OS_I¡QRePo°
();

295 
ts_íd
 = 
	`OS_TS_GET
(Ë- 
ts_°¨t
;

296 i‡(
OSI¡QTaskTimeMax
 < 
ts_íd
) {

297 
OSI¡QTaskTimeMax
 = 
ts_íd
;

299 
	`CPU_CRITICAL_ENTER
();

300 
OSI¡QOutPå
 = OSI¡QOutPå->
NextPå
;

301 
OSI¡QNbrE¡rõs
--;

302 
	`CPU_CRITICAL_EXIT
();

306 
	}
}

331 
	$OS_I¡QTaskInô
 (
OS_ERR
 *
p_îr
)

333 
OS_INT_Q
 *
p_öt_q
;

334 
OS_INT_Q
 *
p_öt_q_√xt
;

335 
OS_OBJ_QTY
 
i
;

339 #ifde‡
OS_SAFETY_CRITICAL


340 i‡(
p_îr
 =(
OS_ERR
 *)0) {

341 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

346 
OSI¡QOvfCå
 = (
OS_QTY
)0u;

348 i‡(
OSCfg_I¡QBa£På
 =(
OS_INT_Q
 *)0) {

349 *
p_îr
 = 
OS_ERR_INT_Q
;

353 i‡(
OSCfg_I¡QSize
 < (
OS_OBJ_QTY
)2u) {

354 *
p_îr
 = 
OS_ERR_INT_Q_SIZE
;

358 
OSI¡QTaskTimeMax
 = (
CPU_TS
)0;

360 
p_öt_q
 = 
OSCfg_I¡QBa£På
;

361 
p_öt_q_√xt
 = 
p_öt_q
;

362 
p_öt_q_√xt
++;

363 
i
 = 0u; i < 
OSCfg_I¡QSize
; i++) {

364 
p_öt_q
->
Ty≥
 = 
OS_OBJ_TYPE_NONE
;

365 
p_öt_q
->
ObjPå
 = (*)0;

366 
p_öt_q
->
MsgPå
 = (*)0;

367 
p_öt_q
->
MsgSize
 = (
OS_MSG_SIZE
)0u;

368 
p_öt_q
->
Fœgs
 = (
OS_FLAGS
 )0u;

369 
p_öt_q
->
O±
 = (
OS_OPT
 )0u;

370 
p_öt_q
->
NextPå
 = 
p_öt_q_√xt
;

371 
p_öt_q
++;

372 
p_öt_q_√xt
++;

374 
p_öt_q
--;

375 
p_öt_q_√xt
 = 
OSCfg_I¡QBa£På
;

376 
p_öt_q
->
NextPå
 = 
p_öt_q_√xt
;

377 
OSI¡QInPå
 = 
p_öt_q_√xt
;

378 
OSI¡QOutPå
 = 
p_öt_q_√xt
;

379 
OSI¡QNbrE¡rõs
 = (
OS_OBJ_QTY
)0u;

380 
OSI¡QNbrE¡rõsMax
 = (
OS_OBJ_QTY
)0u;

383 i‡(
OSCfg_I¡QTaskStkBa£På
 =(
CPU_STK
 *)0) {

384 *
p_îr
 = 
OS_ERR_INT_Q_STK_INVALID
;

388 i‡(
OSCfg_I¡QTaskStkSize
 < 
OSCfg_StkSizeMö
) {

389 *
p_îr
 = 
OS_ERR_INT_Q_STK_SIZE_INVALID
;

393 
	`OSTaskCª©e
((
OS_TCB
 *)&
OSI¡QTaskTCB
,

394 (
CPU_CHAR
 *)((*)"uC/OS-III ISR Queue Task"),

395 (
OS_TASK_PTR
 )
OS_I¡QTask
,

397 (
OS_PRIO
 )0u,

398 (
CPU_STK
 *)
OSCfg_I¡QTaskStkBa£På
,

399 (
CPU_STK_SIZE
)
OSCfg_I¡QTaskStkLimô
,

400 (
CPU_STK_SIZE
)
OSCfg_I¡QTaskStkSize
,

401 (
OS_MSG_QTY
 )0u,

402 (
OS_TICK
 )0u,

404 (
OS_OPT
 )(
OS_OPT_TASK_STK_CHK
 | 
OS_OPT_TASK_STK_CLR
),

405 (
OS_ERR
 *)
p_îr
);

406 
	}
}

	@Source/os_mem.c

33 
	#MICRIUM_SOURCE


	)

34 
	~<os.h
>

36 #ifde‡
VSC_INCLUDE_SOURCE_FILE_NAMES


37 c⁄° 
CPU_CHAR
 *
	gos_mem__c
 = "$Id: $";

41 #i‡
OS_CFG_MEM_EN
 > 0u

75 
	$OSMemCª©e
 (
OS_MEM
 *
p_mem
,

76 
CPU_CHAR
 *
p_«me
,

77 *
p_addr
,

78 
OS_MEM_QTY
 
n_blks
,

79 
OS_MEM_SIZE
 
blk_size
,

80 
OS_ERR
 *
p_îr
)

82 #i‡
OS_CFG_ARG_CHK_EN
 > 0u

83 
CPU_DATA
 
Æign_msk
;

85 
OS_MEM_QTY
 
i
;

86 
OS_MEM_QTY
 
lo›s
;

87 
CPU_INT08U
 *
p_blk
;

88 **
p_lök
;

89 
	`CPU_SR_ALLOC
();

93 #ifde‡
OS_SAFETY_CRITICAL


94 i‡(
p_îr
 =(
OS_ERR
 *)0) {

95 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

100 #ifde‡
OS_SAFETY_CRITICAL_IEC61508


101 i‡(
OSSa„tyCrôiˇlSèπFœg
 =
DEF_TRUE
) {

102 *
p_îr
 = 
OS_ERR_ILLEGAL_CREATE_RUN_TIME
;

107 #i‡
OS_CFG_CALLED_FROM_ISR_CHK_EN
 > 0u

108 i‡(
OSI¡Ne°ögCå
 > (
OS_NESTING_CTR
)0) {

109 *
p_îr
 = 
OS_ERR_MEM_CREATE_ISR
;

114 #i‡
OS_CFG_ARG_CHK_EN
 > 0u

115 i‡(
p_addr
 == (*)0) {

116 *
p_îr
 = 
OS_ERR_MEM_INVALID_P_ADDR
;

119 i‡(
n_blks
 < (
OS_MEM_QTY
)2) {

120 *
p_îr
 = 
OS_ERR_MEM_INVALID_BLKS
;

123 i‡(
blk_size
 < (*)) {

124 *
p_îr
 = 
OS_ERR_MEM_INVALID_SIZE
;

127 
Æign_msk
 = (*) - 1u;

128 i‡(
Æign_msk
 > 0) {

129 i‡(((
CPU_ADDR
)
p_addr
 & 
Æign_msk
) != 0u){

130 *
p_îr
 = 
OS_ERR_MEM_INVALID_P_ADDR
;

133 i‡((
blk_size
 & 
Æign_msk
) != 0u) {

134 *
p_îr
 = 
OS_ERR_MEM_INVALID_SIZE
;

140 
p_lök
 = (**)
p_addr
;

141 
p_blk
 = (
CPU_INT08U
 *)
p_addr
;

142 
lo›s
 = 
n_blks
 - 1u;

143 
i
 = 0u; i < 
lo›s
; i++) {

144 
p_blk
 +
blk_size
;

145 *
p_lök
 = (*)
p_blk
;

146 
p_lök
 = (**)(*)
p_blk
;

148 *
p_lök
 = (*)0;

150 
	`OS_CRITICAL_ENTER
();

151 
p_mem
->
Ty≥
 = 
OS_OBJ_TYPE_MEM
;

152 
p_mem
->
NamePå
 = 
p_«me
;

153 
p_mem
->
AddrPå
 = 
p_addr
;

154 
p_mem
->
FªeLi°På
 = 
p_addr
;

155 
p_mem
->
NbrFªe
 = 
n_blks
;

156 
p_mem
->
NbrMax
 = 
n_blks
;

157 
p_mem
->
BlkSize
 = 
blk_size
;

159 #i‡
OS_CFG_DBG_EN
 > 0u

160 
	`OS_MemDbgLi°Add
(
p_mem
);

163 
OSMemQty
++;

165 
	`OS_CRITICAL_EXIT_NO_SCHED
();

166 *
p_îr
 = 
OS_ERR_NONE
;

167 
	}
}

190 *
	$OSMemGë
 (
OS_MEM
 *
p_mem
,

191 
OS_ERR
 *
p_îr
)

193 *
p_blk
;

194 
	`CPU_SR_ALLOC
();

198 #ifde‡
OS_SAFETY_CRITICAL


199 i‡(
p_îr
 =(
OS_ERR
 *)0) {

200 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

205 #i‡
OS_CFG_ARG_CHK_EN
 > 0u

206 i‡(
p_mem
 =(
OS_MEM
 *)0) {

207 *
p_îr
 = 
OS_ERR_MEM_INVALID_P_MEM
;

212 
	`CPU_CRITICAL_ENTER
();

213 i‡(
p_mem
->
NbrFªe
 =(
OS_MEM_QTY
)0) {

214 
	`CPU_CRITICAL_EXIT
();

215 *
p_îr
 = 
OS_ERR_MEM_NO_FREE_BLKS
;

218 
p_blk
 = 
p_mem
->
FªeLi°På
;

219 
p_mem
->
FªeLi°På
 = *(**)
p_blk
;

220 
p_mem
->
NbrFªe
--;

221 
	`CPU_CRITICAL_EXIT
();

222 *
p_îr
 = 
OS_ERR_NONE
;

223  (
p_blk
);

224 
	}
}

247 
	$OSMemPut
 (
OS_MEM
 *
p_mem
,

248 *
p_blk
,

249 
OS_ERR
 *
p_îr
)

251 
	`CPU_SR_ALLOC
();

255 #ifde‡
OS_SAFETY_CRITICAL


256 i‡(
p_îr
 =(
OS_ERR
 *)0) {

257 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

262 #i‡
OS_CFG_ARG_CHK_EN
 > 0u

263 i‡(
p_mem
 =(
OS_MEM
 *)0) {

264 *
p_îr
 = 
OS_ERR_MEM_INVALID_P_MEM
;

267 i‡(
p_blk
 == (*)0) {

268 *
p_îr
 = 
OS_ERR_MEM_INVALID_P_BLK
;

273 
	`CPU_CRITICAL_ENTER
();

274 i‡(
p_mem
->
NbrFªe
 >p_mem->
NbrMax
) {

275 
	`CPU_CRITICAL_EXIT
();

276 *
p_îr
 = 
OS_ERR_MEM_FULL
;

279 *(**)
p_blk
 = 
p_mem
->
FªeLi°På
;

280 
p_mem
->
FªeLi°På
 = 
p_blk
;

281 
p_mem
->
NbrFªe
++;

282 
	`CPU_CRITICAL_EXIT
();

283 *
p_îr
 = 
OS_ERR_NONE
;

284 
	}
}

301 #i‡
OS_CFG_DBG_EN
 > 0u

302 
	$OS_MemDbgLi°Add
 (
OS_MEM
 *
p_mem
)

304 
p_mem
->
DbgPªvPå
 = (
OS_MEM
 *)0;

305 i‡(
OSMemDbgLi°På
 =(
OS_MEM
 *)0) {

306 
p_mem
->
DbgNextPå
 = (
OS_MEM
 *)0;

308 
p_mem
->
DbgNextPå
 = 
OSMemDbgLi°På
;

309 
OSMemDbgLi°På
->
DbgPªvPå
 = 
p_mem
;

311 
OSMemDbgLi°På
 = 
p_mem
;

312 
	}
}

331 
	$OS_MemInô
 (
OS_ERR
 *
p_îr
)

333 #ifde‡
OS_SAFETY_CRITICAL


334 i‡(
p_îr
 =(
OS_ERR
 *)0) {

335 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

340 #i‡
OS_CFG_DBG_EN
 > 0u

341 
OSMemDbgLi°På
 = (
OS_MEM
 *)0;

344 
OSMemQty
 = (
OS_OBJ_QTY
)0;

345 *
p_îr
 = 
OS_ERR_NONE
;

346 
	}
}

	@Source/os_msg.c

33 
	#MICRIUM_SOURCE


	)

34 
	~<os.h
>

36 #ifde‡
VSC_INCLUDE_SOURCE_FILE_NAMES


37 c⁄° 
CPU_CHAR
 *
	gos_msg__c
 = "$Id: $";

41 #i‡
OS_MSG_EN
 > 0u

62 
	$OS_MsgPoﬁCª©e
 (
OS_MSG
 *
p_msg
,

63 
OS_MSG_QTY
 
size
)

65 
OS_MSG
 *
p_msg1
;

66 
OS_MSG
 *
p_msg2
;

67 
OS_MSG_QTY
 
i
;

68 
OS_MSG_QTY
 
lo›s
;

72 
p_msg1
 = 
p_msg
;

73 
p_msg2
 = 
p_msg
;

74 
p_msg2
++;

75 
lo›s
 = 
size
 - 1u;

76 
i
 = 0u; i < 
lo›s
; i++) {

77 
p_msg1
->
NextPå
 = 
p_msg2
;

78 
p_msg1
->
MsgPå
 = (*)0;

79 
p_msg1
->
MsgSize
 = (
OS_MSG_SIZE
)0u;

80 
p_msg1
->
MsgTS
 = (
CPU_TS
 )0u;

81 
p_msg1
++;

82 
p_msg2
++;

84 
p_msg1
->
NextPå
 = (
OS_MSG
 *)0;

85 
p_msg1
->
MsgPå
 = (*)0;

86 
p_msg1
->
MsgSize
 = (
OS_MSG_SIZE
)0u;

87 
p_msg1
->
MsgTS
 = (
CPU_TS
 )0u;

88 
	}
}

109 
	$OS_MsgPoﬁInô
 (
OS_ERR
 *
p_îr
)

111 #ifde‡
OS_SAFETY_CRITICAL


112 i‡(
p_îr
 =(
OS_ERR
 *)0) {

113 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

118 #i‡
OS_CFG_ARG_CHK_EN
 > 0u

119 i‡(
OSCfg_MsgPoﬁBa£På
 =(
OS_MSG
 *)0) {

120 *
p_îr
 = 
OS_ERR_MSG_POOL_NULL_PTR
;

123 i‡(
OSCfg_MsgPoﬁSize
 =(
OS_MSG_QTY
)0) {

124 *
p_îr
 = 
OS_ERR_MSG_POOL_EMPTY
;

129 
	`OS_MsgPoﬁCª©e
(
OSCfg_MsgPoﬁBa£På
,

130 
OSCfg_MsgPoﬁSize
);

131 
OSMsgPoﬁ
.
NextPå
 = 
OSCfg_MsgPoﬁBa£På
;

132 
OSMsgPoﬁ
.
NbrFªe
 = 
OSCfg_MsgPoﬁSize
;

133 
OSMsgPoﬁ
.
NbrU£d
 = (
OS_MSG_QTY
)0;

134 
OSMsgPoﬁ
.
NbrU£dMax
 = (
OS_MSG_QTY
)0;

135 *
p_îr
 = 
OS_ERR_NONE
;

136 
	}
}

154 
OS_MSG_QTY
 
	$OS_MsgQFªeAŒ
 (
OS_MSG_Q
 *
p_msg_q
)

156 
OS_MSG
 *
p_msg
;

157 
OS_MSG_QTY
 
qty
;

161 
qty
 = 
p_msg_q
->
NbrE¡rõs
;

162 i‡(
p_msg_q
->
NbrE¡rõs
 > (
OS_MSG_QTY
)0) {

163 
p_msg
 = 
p_msg_q
->
InPå
;

164 
p_msg
->
NextPå
 = 
OSMsgPoﬁ
.NextPtr;

165 
OSMsgPoﬁ
.
NextPå
 = 
p_msg_q
->
OutPå
;

166 
OSMsgPoﬁ
.
NbrU£d
 -
p_msg_q
->
NbrE¡rõs
;

167 
OSMsgPoﬁ
.
NbrFªe
 +
p_msg_q
->
NbrE¡rõs
;

168 
p_msg_q
->
NbrE¡rõs
 = (
OS_MSG_QTY
)0;

169 
p_msg_q
->
NbrE¡rõsMax
 = (
OS_MSG_QTY
)0;

170 
p_msg_q
->
InPå
 = (
OS_MSG
 *)0;

171 
p_msg_q
->
OutPå
 = (
OS_MSG
 *)0;

173  (
qty
);

174 
	}
}

194 
	$OS_MsgQInô
 (
OS_MSG_Q
 *
p_msg_q
,

195 
OS_MSG_QTY
 
size
)

197 
p_msg_q
->
NbrE¡rõsSize
 = (
OS_MSG_QTY
)
size
;

198 
p_msg_q
->
NbrE¡rõs
 = (
OS_MSG_QTY
)0;

199 
p_msg_q
->
NbrE¡rõsMax
 = (
OS_MSG_QTY
)0;

200 
p_msg_q
->
InPå
 = (
OS_MSG
 *)0;

201 
p_msg_q
->
OutPå
 = (
OS_MSG
 *)0;

202 
	}
}

229 *
	$OS_MsgQGë
 (
OS_MSG_Q
 *
p_msg_q
,

230 
OS_MSG_SIZE
 *
p_msg_size
,

231 
CPU_TS
 *
p_ts
,

232 
OS_ERR
 *
p_îr
)

234 
OS_MSG
 *
p_msg
;

235 *
p_void
;

239 #ifde‡
OS_SAFETY_CRITICAL


240 i‡(
p_îr
 =(
OS_ERR
 *)0) {

241 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

246 i‡(
p_msg_q
->
NbrE¡rõs
 =(
OS_MSG_QTY
)0) {

247 *
p_msg_size
 = (
OS_MSG_SIZE
)0;

248 i‡(
p_ts
 !(
CPU_TS
 *)0) {

249 *
p_ts
 = (
CPU_TS
 )0;

251 *
p_îr
 = 
OS_ERR_Q_EMPTY
;

255 
p_msg
 = 
p_msg_q
->
OutPå
;

256 
p_void
 = 
p_msg
->
MsgPå
;

257 *
p_msg_size
 = 
p_msg
->
MsgSize
;

258 i‡(
p_ts
 !(
CPU_TS
 *)0) {

259 *
p_ts
 = 
p_msg
->
MsgTS
;

261 
p_msg_q
->
OutPå
 = 
p_msg
->
NextPå
;

262 i‡(
p_msg_q
->
OutPå
 =(
OS_MSG
 *)0) {

263 
p_msg_q
->
InPå
 = (
OS_MSG
 *)0;

264 
p_msg_q
->
NbrE¡rõs
 = (
OS_MSG_QTY
)0;

266 
p_msg_q
->
NbrE¡rõs
--;

268 
p_msg
->
NextPå
 = 
OSMsgPoﬁ
.NextPtr;

269 
OSMsgPoﬁ
.
NextPå
 = 
p_msg
;

270 
OSMsgPoﬁ
.
NbrFªe
++;

271 
OSMsgPoﬁ
.
NbrU£d
--;

272 *
p_îr
 = 
OS_ERR_NONE
;

273  (
p_void
);

274 
	}
}

309 
	$OS_MsgQPut
 (
OS_MSG_Q
 *
p_msg_q
,

310 *
p_void
,

311 
OS_MSG_SIZE
 
msg_size
,

312 
OS_OPT
 
›t
,

313 
CPU_TS
 
ts
,

314 
OS_ERR
 *
p_îr
)

316 
OS_MSG
 *
p_msg
;

317 
OS_MSG
 *
p_msg_ö
;

321 #ifde‡
OS_SAFETY_CRITICAL


322 i‡(
p_îr
 =(
OS_ERR
 *)0) {

323 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

328 i‡(
p_msg_q
->
NbrE¡rõs
 >p_msg_q->
NbrE¡rõsSize
) {

329 *
p_îr
 = 
OS_ERR_Q_MAX
;

333 i‡(
OSMsgPoﬁ
.
NbrFªe
 =(
OS_MSG_QTY
)0) {

334 *
p_îr
 = 
OS_ERR_MSG_POOL_EMPTY
;

338 
p_msg
 = 
OSMsgPoﬁ
.
NextPå
;

339 
OSMsgPoﬁ
.
NextPå
 = 
p_msg
->NextPtr;

340 
OSMsgPoﬁ
.
NbrFªe
--;

341 
OSMsgPoﬁ
.
NbrU£d
++;

342 i‡(
OSMsgPoﬁ
.
NbrU£dMax
 < OSMsgPoﬁ.
NbrU£d
) {

343 
OSMsgPoﬁ
.
NbrU£dMax
 = OSMsgPoﬁ.
NbrU£d
;

345 i‡(
p_msg_q
->
NbrE¡rõs
 =(
OS_MSG_QTY
)0) {

346 
p_msg_q
->
InPå
 = 
p_msg
;

347 
p_msg_q
->
OutPå
 = 
p_msg
;

348 
p_msg_q
->
NbrE¡rõs
 = (
OS_MSG_QTY
)1;

350 i‡((
›t
 & 
OS_OPT_POST_LIFO
Ë=
OS_OPT_POST_FIFO
) {

351 
p_msg_ö
 = 
p_msg_q
->
InPå
;

352 
p_msg_ö
->
NextPå
 = 
p_msg
;

353 
p_msg
->
NextPå
 = (
OS_MSG
 *)0;

354 
p_msg_q
->
InPå
 = 
p_msg
;

356 
p_msg
->
NextPå
 = 
p_msg_q
->
OutPå
;

357 
p_msg_q
->
OutPå
 = 
p_msg
;

359 
p_msg_q
->
NbrE¡rõs
++;

361 i‡(
p_msg_q
->
NbrE¡rõsMax
 <Ö_msg_q->
NbrE¡rõs
) {

362 
p_msg_q
->
NbrE¡rõsMax
 =Ö_msg_q->
NbrE¡rõs
;

364 
p_msg
->
MsgPå
 = 
p_void
;

365 
p_msg
->
MsgSize
 = 
msg_size
;

366 
p_msg
->
MsgTS
 = 
ts
;

367 *
p_îr
 = 
OS_ERR_NONE
;

368 
	}
}

	@Source/os_mutex.c

33 
	#MICRIUM_SOURCE


	)

34 
	~<os.h
>

36 #ifde‡
VSC_INCLUDE_SOURCE_FILE_NAMES


37 c⁄° 
CPU_CHAR
 *
	gos_muãx__c
 = "$Id: $";

41 #i‡
OS_CFG_MUTEX_EN
 > 0u

67 
	$OSMuãxCª©e
 (
OS_MUTEX
 *
p_muãx
,

68 
CPU_CHAR
 *
p_«me
,

69 
OS_ERR
 *
p_îr
)

71 
	`CPU_SR_ALLOC
();

75 #ifde‡
OS_SAFETY_CRITICAL


76 i‡(
p_îr
 =(
OS_ERR
 *)0) {

77 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

82 #ifde‡
OS_SAFETY_CRITICAL_IEC61508


83 i‡(
OSSa„tyCrôiˇlSèπFœg
 =
DEF_TRUE
) {

84 *
p_îr
 = 
OS_ERR_ILLEGAL_CREATE_RUN_TIME
;

89 #i‡
OS_CFG_CALLED_FROM_ISR_CHK_EN
 > 0u

90 i‡(
OSI¡Ne°ögCå
 > (
OS_NESTING_CTR
)0) {

91 *
p_îr
 = 
OS_ERR_CREATE_ISR
;

96 #i‡
OS_CFG_ARG_CHK_EN
 > 0u

97 i‡(
p_muãx
 =(
OS_MUTEX
 *)0) {

98 *
p_îr
 = 
OS_ERR_OBJ_PTR_NULL
;

103 
	`OS_CRITICAL_ENTER
();

104 
p_muãx
->
Ty≥
 = 
OS_OBJ_TYPE_MUTEX
;

105 
p_muãx
->
NamePå
 = 
p_«me
;

106 
p_muãx
->
Ow√rTCBPå
 = (
OS_TCB
 *)0;

107 
p_muãx
->
Ow√rNe°ögCå
 = (
OS_NESTING_CTR
)0;

108 
p_muãx
->
TS
 = (
CPU_TS
 )0;

109 
p_muãx
->
Ow√rOrigöÆPrio
 = 
OS_CFG_PRIO_MAX
;

110 
	`OS_PídLi°Inô
(&
p_muãx
->
PídLi°
);

112 #i‡
OS_CFG_DBG_EN
 > 0u

113 
	`OS_MuãxDbgLi°Add
(
p_muãx
);

115 
OSMuãxQty
++;

117 
	`OS_CRITICAL_EXIT_NO_SCHED
();

118 *
p_îr
 = 
OS_ERR_NONE
;

119 
	}
}

159 #i‡
OS_CFG_MUTEX_DEL_EN
 > 0u

160 
OS_OBJ_QTY
 
	$OSMuãxDñ
 (
OS_MUTEX
 *
p_muãx
,

161 
OS_OPT
 
›t
,

162 
OS_ERR
 *
p_îr
)

164 
OS_OBJ_QTY
 
˙t
;

165 
OS_OBJ_QTY
 
nbr_èsks
;

166 
OS_PEND_DATA
 *
p_≥nd_d©a
;

167 
OS_PEND_LIST
 *
p_≥nd_li°
;

168 
OS_TCB
 *
p_tcb
;

169 
OS_TCB
 *
p_tcb_ow√r
;

170 
CPU_TS
 
ts
;

171 
	`CPU_SR_ALLOC
();

175 #ifde‡
OS_SAFETY_CRITICAL


176 i‡(
p_îr
 =(
OS_ERR
 *)0) {

177 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

178  ((
OS_OBJ_QTY
)0);

182 #i‡
OS_CFG_CALLED_FROM_ISR_CHK_EN
 > 0u

183 i‡(
OSI¡Ne°ögCå
 > (
OS_NESTING_CTR
)0) {

184 *
p_îr
 = 
OS_ERR_DEL_ISR
;

185  ((
OS_OBJ_QTY
)0);

189 #i‡
OS_CFG_ARG_CHK_EN
 > 0u

190 i‡(
p_muãx
 =(
OS_MUTEX
 *)0) {

191 *
p_îr
 = 
OS_ERR_OBJ_PTR_NULL
;

192  ((
OS_OBJ_QTY
)0);

194 
›t
) {

195 
OS_OPT_DEL_NO_PEND
:

196 
OS_OPT_DEL_ALWAYS
:

200 *
p_îr
 = 
OS_ERR_OPT_INVALID
;

201  ((
OS_OBJ_QTY
)0);

205 #i‡
OS_CFG_OBJ_TYPE_CHK_EN
 > 0u

206 i‡(
p_muãx
->
Ty≥
 !
OS_OBJ_TYPE_MUTEX
) {

207 *
p_îr
 = 
OS_ERR_OBJ_TYPE
;

208  ((
OS_OBJ_QTY
)0);

212 
	`OS_CRITICAL_ENTER
();

213 
p_≥nd_li°
 = &
p_muãx
->
PídLi°
;

214 
˙t
 = 
p_≥nd_li°
->
NbrE¡rõs
;

215 
nbr_èsks
 = 
˙t
;

216 
›t
) {

217 
OS_OPT_DEL_NO_PEND
:

218 i‡(
nbr_èsks
 =(
OS_OBJ_QTY
)0) {

219 #i‡
OS_CFG_DBG_EN
 > 0u

220 
	`OS_MuãxDbgLi°Remove
(
p_muãx
);

222 
OSMuãxQty
--;

223 
	`OS_MuãxCÃ
(
p_muãx
);

224 
	`OS_CRITICAL_EXIT
();

225 *
p_îr
 = 
OS_ERR_NONE
;

227 
	`OS_CRITICAL_EXIT
();

228 *
p_îr
 = 
OS_ERR_TASK_WAITING
;

232 
OS_OPT_DEL_ALWAYS
:

233 
p_tcb_ow√r
 = 
p_muãx
->
Ow√rTCBPå
;

234 i‡((
p_tcb_ow√r
 !(
OS_TCB
 *)0) &&

235 (
p_tcb_ow√r
->
Prio
 !
p_muãx
->
Ow√rOrigöÆPrio
)) {

236 
p_tcb_ow√r
->
TaskSèã
) {

237 
OS_TASK_STATE_RDY
:

238 
	`OS_RdyLi°Remove
(
p_tcb_ow√r
);

239 
p_tcb_ow√r
->
Prio
 = 
p_muãx
->
Ow√rOrigöÆPrio
;

240 
	`OS_PrioIn£π
(
p_tcb_ow√r
->
Prio
);

241 
	`OS_RdyLi°In£πTaû
(
p_tcb_ow√r
);

244 
OS_TASK_STATE_DLY
:

245 
OS_TASK_STATE_SUSPENDED
:

246 
OS_TASK_STATE_DLY_SUSPENDED
:

247 
p_tcb_ow√r
->
Prio
 = 
p_muãx
->
Ow√rOrigöÆPrio
;

250 
OS_TASK_STATE_PEND
:

251 
OS_TASK_STATE_PEND_TIMEOUT
:

252 
OS_TASK_STATE_PEND_SUSPENDED
:

253 
OS_TASK_STATE_PEND_TIMEOUT_SUSPENDED
:

254 
	`OS_PídLi°Ch™gePrio
(
p_tcb_ow√r
,

255 
p_muãx
->
Ow√rOrigöÆPrio
);

259 
	`OS_CRITICAL_EXIT
();

260 *
p_îr
 = 
OS_ERR_STATE_INVALID
;

261  ((
OS_OBJ_QTY
)0);

265 
ts
 = 
	`OS_TS_GET
();

266 
˙t
 > 0u) {

267 
p_≥nd_d©a
 = 
p_≥nd_li°
->
HódPå
;

268 
p_tcb
 = 
p_≥nd_d©a
->
TCBPå
;

269 
	`OS_PídObjDñ
((
OS_PEND_OBJ
 *)((*)
p_muãx
),

270 
p_tcb
,

271 
ts
);

272 
˙t
--;

274 #i‡
OS_CFG_DBG_EN
 > 0u

275 
	`OS_MuãxDbgLi°Remove
(
p_muãx
);

277 
OSMuãxQty
--;

278 
	`OS_MuãxCÃ
(
p_muãx
);

279 
	`OS_CRITICAL_EXIT_NO_SCHED
();

280 
	`OSSched
();

281 *
p_îr
 = 
OS_ERR_NONE
;

285 
	`OS_CRITICAL_EXIT
();

286 *
p_îr
 = 
OS_ERR_OPT_INVALID
;

289  (
nbr_èsks
);

290 
	}
}

339 
	$OSMuãxPíd
 (
OS_MUTEX
 *
p_muãx
,

340 
OS_TICK
 
timeout
,

341 
OS_OPT
 
›t
,

342 
CPU_TS
 *
p_ts
,

343 
OS_ERR
 *
p_îr
)

345 
OS_PEND_DATA
 
≥nd_d©a
;

346 
OS_TCB
 *
p_tcb
;

347 
	`CPU_SR_ALLOC
();

351 #ifde‡
OS_SAFETY_CRITICAL


352 i‡(
p_îr
 =(
OS_ERR
 *)0) {

353 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

358 #i‡
OS_CFG_CALLED_FROM_ISR_CHK_EN
 > 0u

359 i‡(
OSI¡Ne°ögCå
 > (
OS_NESTING_CTR
)0) {

360 *
p_îr
 = 
OS_ERR_PEND_ISR
;

365 #i‡
OS_CFG_ARG_CHK_EN
 > 0u

366 i‡(
p_muãx
 =(
OS_MUTEX
 *)0) {

367 *
p_îr
 = 
OS_ERR_OBJ_PTR_NULL
;

370 
›t
) {

371 
OS_OPT_PEND_BLOCKING
:

372 
OS_OPT_PEND_NON_BLOCKING
:

376 *
p_îr
 = 
OS_ERR_OPT_INVALID
;

381 #i‡
OS_CFG_OBJ_TYPE_CHK_EN
 > 0u

382 i‡(
p_muãx
->
Ty≥
 !
OS_OBJ_TYPE_MUTEX
) {

383 *
p_îr
 = 
OS_ERR_OBJ_TYPE
;

388 i‡(
p_ts
 !(
CPU_TS
 *)0) {

389 *
p_ts
 = (
CPU_TS
 )0;

392 
	`CPU_CRITICAL_ENTER
();

393 i‡(
p_muãx
->
Ow√rNe°ögCå
 =(
OS_NESTING_CTR
)0) {

394 
p_muãx
->
Ow√rTCBPå
 = 
OSTCBCurPå
;

395 
p_muãx
->
Ow√rOrigöÆPrio
 = 
OSTCBCurPå
->
Prio
;

396 
p_muãx
->
Ow√rNe°ögCå
 = (
OS_NESTING_CTR
)1;

397 i‡(
p_ts
 !(
CPU_TS
 *)0) {

398 *
p_ts
 = 
p_muãx
->
TS
;

400 
	`CPU_CRITICAL_EXIT
();

401 *
p_îr
 = 
OS_ERR_NONE
;

405 i‡(
OSTCBCurPå
 =
p_muãx
->
Ow√rTCBPå
) {

406 
p_muãx
->
Ow√rNe°ögCå
++;

407 i‡(
p_ts
 !(
CPU_TS
 *)0) {

408 *
p_ts
 = 
p_muãx
->
TS
;

410 
	`CPU_CRITICAL_EXIT
();

411 *
p_îr
 = 
OS_ERR_MUTEX_OWNER
;

415 i‡((
›t
 & 
OS_OPT_PEND_NON_BLOCKING
Ë!(
OS_OPT
)0) {

416 
	`CPU_CRITICAL_EXIT
();

417 *
p_îr
 = 
OS_ERR_PEND_WOULD_BLOCK
;

420 i‡(
OSSchedLockNe°ögCå
 > (
OS_NESTING_CTR
)0) {

421 
	`CPU_CRITICAL_EXIT
();

422 *
p_îr
 = 
OS_ERR_SCHED_LOCKED
;

427 
	`OS_CRITICAL_ENTER_CPU_CRITICAL_EXIT
();

428 
p_tcb
 = 
p_muãx
->
Ow√rTCBPå
;

429 i‡(
p_tcb
->
Prio
 > 
OSTCBCurPå
->Prio) {

430 
p_tcb
->
TaskSèã
) {

431 
OS_TASK_STATE_RDY
:

432 
	`OS_RdyLi°Remove
(
p_tcb
);

433 
p_tcb
->
Prio
 = 
OSTCBCurPå
->Prio;

434 
	`OS_PrioIn£π
(
p_tcb
->
Prio
);

435 
	`OS_RdyLi°In£πHód
(
p_tcb
);

438 
OS_TASK_STATE_DLY
:

439 
OS_TASK_STATE_DLY_SUSPENDED
:

440 
OS_TASK_STATE_SUSPENDED
:

441 
p_tcb
->
Prio
 = 
OSTCBCurPå
->Prio;

444 
OS_TASK_STATE_PEND
:

445 
OS_TASK_STATE_PEND_TIMEOUT
:

446 
OS_TASK_STATE_PEND_SUSPENDED
:

447 
OS_TASK_STATE_PEND_TIMEOUT_SUSPENDED
:

448 
	`OS_PídLi°Ch™gePrio
(
p_tcb
,

449 
OSTCBCurPå
->
Prio
);

453 
	`OS_CRITICAL_EXIT
();

454 *
p_îr
 = 
OS_ERR_STATE_INVALID
;

459 
	`OS_Píd
(&
≥nd_d©a
,

460 (
OS_PEND_OBJ
 *)((*)
p_muãx
),

461 
OS_TASK_PEND_ON_MUTEX
,

462 
timeout
);

464 
	`OS_CRITICAL_EXIT_NO_SCHED
();

466 
	`OSSched
();

468 
	`CPU_CRITICAL_ENTER
();

469 
OSTCBCurPå
->
PídSètus
) {

470 
OS_STATUS_PEND_OK
:

471 i‡(
p_ts
 !(
CPU_TS
 *)0) {

472 *
p_ts
 = 
OSTCBCurPå
->
TS
;

474 *
p_îr
 = 
OS_ERR_NONE
;

477 
OS_STATUS_PEND_ABORT
:

478 i‡(
p_ts
 !(
CPU_TS
 *)0) {

479 *
p_ts
 = 
OSTCBCurPå
->
TS
;

481 *
p_îr
 = 
OS_ERR_PEND_ABORT
;

484 
OS_STATUS_PEND_TIMEOUT
:

485 i‡(
p_ts
 !(
CPU_TS
 *)0) {

486 *
p_ts
 = (
CPU_TS
 )0;

488 *
p_îr
 = 
OS_ERR_TIMEOUT
;

491 
OS_STATUS_PEND_DEL
:

492 i‡(
p_ts
 !(
CPU_TS
 *)0) {

493 *
p_ts
 = 
OSTCBCurPå
->
TS
;

495 *
p_îr
 = 
OS_ERR_OBJ_DEL
;

499 *
p_îr
 = 
OS_ERR_STATUS_INVALID
;

502 
	`CPU_CRITICAL_EXIT
();

503 
	}
}

537 #i‡
OS_CFG_MUTEX_PEND_ABORT_EN
 > 0u

538 
OS_OBJ_QTY
 
	$OSMuãxPídAb‹t
 (
OS_MUTEX
 *
p_muãx
,

539 
OS_OPT
 
›t
,

540 
OS_ERR
 *
p_îr
)

542 
OS_PEND_LIST
 *
p_≥nd_li°
;

543 
OS_TCB
 *
p_tcb
;

544 
CPU_TS
 
ts
;

545 
OS_OBJ_QTY
 
nbr_èsks
;

546 
	`CPU_SR_ALLOC
();

550 #ifde‡
OS_SAFETY_CRITICAL


551 i‡(
p_îr
 =(
OS_ERR
 *)0) {

552 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

553  ((
OS_OBJ_QTY
)0u);

557 #i‡
OS_CFG_CALLED_FROM_ISR_CHK_EN
 > 0u

558 i‡(
OSI¡Ne°ögCå
 > (
OS_NESTING_CTR
)0u) {

559 *
p_îr
 = 
OS_ERR_PEND_ABORT_ISR
;

560  ((
OS_OBJ_QTY
)0u);

564 #i‡
OS_CFG_ARG_CHK_EN
 > 0u

565 i‡(
p_muãx
 =(
OS_MUTEX
 *)0) {

566 *
p_îr
 = 
OS_ERR_OBJ_PTR_NULL
;

567  ((
OS_OBJ_QTY
)0u);

569 
›t
) {

570 
OS_OPT_PEND_ABORT_1
:

571 
OS_OPT_PEND_ABORT_ALL
:

572 
OS_OPT_PEND_ABORT_1
 | 
OS_OPT_POST_NO_SCHED
:

573 
OS_OPT_PEND_ABORT_ALL
 | 
OS_OPT_POST_NO_SCHED
:

577 *
p_îr
 = 
OS_ERR_OPT_INVALID
;

578  ((
OS_OBJ_QTY
)0u);

582 #i‡
OS_CFG_OBJ_TYPE_CHK_EN
 > 0u

583 i‡(
p_muãx
->
Ty≥
 !
OS_OBJ_TYPE_MUTEX
) {

584 *
p_îr
 = 
OS_ERR_OBJ_TYPE
;

585  ((
OS_OBJ_QTY
)0u);

589 
	`CPU_CRITICAL_ENTER
();

590 
p_≥nd_li°
 = &
p_muãx
->
PídLi°
;

591 i‡(
p_≥nd_li°
->
NbrE¡rõs
 =(
OS_OBJ_QTY
)0u) {

592 
	`CPU_CRITICAL_EXIT
();

593 *
p_îr
 = 
OS_ERR_PEND_ABORT_NONE
;

594  ((
OS_OBJ_QTY
)0u);

597 
	`OS_CRITICAL_ENTER_CPU_CRITICAL_EXIT
();

598 
nbr_èsks
 = 0u;

599 
ts
 = 
	`OS_TS_GET
();

600 
p_≥nd_li°
->
NbrE¡rõs
 > (
OS_OBJ_QTY
)0u) {

601 
p_tcb
 = 
p_≥nd_li°
->
HódPå
->
TCBPå
;

602 
	`OS_PídAb‹t
((
OS_PEND_OBJ
 *)((*)
p_muãx
),

603 
p_tcb
,

604 
ts
);

605 
nbr_èsks
++;

606 i‡(
›t
 !
OS_OPT_PEND_ABORT_ALL
) {

610 
	`OS_CRITICAL_EXIT_NO_SCHED
();

612 i‡((
›t
 & 
OS_OPT_POST_NO_SCHED
Ë=(
OS_OPT
)0u) {

613 
	`OSSched
();

616 *
p_îr
 = 
OS_ERR_NONE
;

617  (
nbr_èsks
);

618 
	}
}

648 
	$OSMuãxPo°
 (
OS_MUTEX
 *
p_muãx
,

649 
OS_OPT
 
›t
,

650 
OS_ERR
 *
p_îr
)

652 
OS_PEND_LIST
 *
p_≥nd_li°
;

653 
OS_TCB
 *
p_tcb
;

654 
CPU_TS
 
ts
;

655 
	`CPU_SR_ALLOC
();

659 #ifde‡
OS_SAFETY_CRITICAL


660 i‡(
p_îr
 =(
OS_ERR
 *)0) {

661 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

666 #i‡
OS_CFG_CALLED_FROM_ISR_CHK_EN
 > 0u

667 i‡(
OSI¡Ne°ögCå
 > (
OS_NESTING_CTR
)0) {

668 *
p_îr
 = 
OS_ERR_POST_ISR
;

673 #i‡
OS_CFG_ARG_CHK_EN
 > 0u

674 i‡(
p_muãx
 =(
OS_MUTEX
 *)0) {

675 *
p_îr
 = 
OS_ERR_OBJ_PTR_NULL
;

678 
›t
) {

679 
OS_OPT_POST_NONE
:

680 
OS_OPT_POST_NO_SCHED
:

684 *
p_îr
 = 
OS_ERR_OPT_INVALID
;

689 #i‡
OS_CFG_OBJ_TYPE_CHK_EN
 > 0u

690 i‡(
p_muãx
->
Ty≥
 !
OS_OBJ_TYPE_MUTEX
) {

691 *
p_îr
 = 
OS_ERR_OBJ_TYPE
;

696 
	`CPU_CRITICAL_ENTER
();

697 i‡(
OSTCBCurPå
 !
p_muãx
->
Ow√rTCBPå
) {

698 
	`CPU_CRITICAL_EXIT
();

699 *
p_îr
 = 
OS_ERR_MUTEX_NOT_OWNER
;

703 
	`OS_CRITICAL_ENTER_CPU_CRITICAL_EXIT
();

704 
ts
 = 
	`OS_TS_GET
();

705 
p_muãx
->
TS
 = 
ts
;

706 
p_muãx
->
Ow√rNe°ögCå
--;

707 i‡(
p_muãx
->
Ow√rNe°ögCå
 > (
OS_NESTING_CTR
)0) {

708 
	`OS_CRITICAL_EXIT
();

709 *
p_îr
 = 
OS_ERR_MUTEX_NESTING
;

713 
p_≥nd_li°
 = &
p_muãx
->
PídLi°
;

714 i‡(
p_≥nd_li°
->
NbrE¡rõs
 =(
OS_OBJ_QTY
)0) {

715 
p_muãx
->
Ow√rTCBPå
 = (
OS_TCB
 *)0;

716 
p_muãx
->
Ow√rNe°ögCå
 = (
OS_NESTING_CTR
)0;

717 
	`OS_CRITICAL_EXIT
();

718 *
p_îr
 = 
OS_ERR_NONE
;

722 i‡(
OSTCBCurPå
->
Prio
 !
p_muãx
->
Ow√rOrigöÆPrio
) {

723 
	`OS_RdyLi°Remove
(
OSTCBCurPå
);

724 
OSTCBCurPå
->
Prio
 = 
p_muãx
->
Ow√rOrigöÆPrio
;

725 
	`OS_PrioIn£π
(
OSTCBCurPå
->
Prio
);

726 
	`OS_RdyLi°In£πTaû
(
OSTCBCurPå
);

727 
OSPrioCur
 = 
OSTCBCurPå
->
Prio
;

730 
p_tcb
 = 
p_≥nd_li°
->
HódPå
->
TCBPå
;

731 
p_muãx
->
Ow√rTCBPå
 = 
p_tcb
;

732 
p_muãx
->
Ow√rOrigöÆPrio
 = 
p_tcb
->
Prio
;

733 
p_muãx
->
Ow√rNe°ögCå
 = (
OS_NESTING_CTR
)1;

735 
	`OS_Po°
((
OS_PEND_OBJ
 *)((*)
p_muãx
),

736 (
OS_TCB
 *)
p_tcb
,

738 (
OS_MSG_SIZE
 )0,

739 (
CPU_TS
 )
ts
);

741 
	`OS_CRITICAL_EXIT_NO_SCHED
();

743 i‡((
›t
 & 
OS_OPT_POST_NO_SCHED
Ë=(
OS_OPT
)0) {

744 
	`OSSched
();

747 *
p_îr
 = 
OS_ERR_NONE
;

748 
	}
}

767 
	$OS_MuãxCÃ
 (
OS_MUTEX
 *
p_muãx
)

769 
p_muãx
->
Ty≥
 = 
OS_OBJ_TYPE_NONE
;

770 
p_muãx
->
NamePå
 = (
CPU_CHAR
 *)((*)"?MUTEX");

771 
p_muãx
->
Ow√rTCBPå
 = (
OS_TCB
 *)0;

772 
p_muãx
->
Ow√rNe°ögCå
 = (
OS_NESTING_CTR
)0;

773 
p_muãx
->
TS
 = (
CPU_TS
 )0;

774 
p_muãx
->
Ow√rOrigöÆPrio
 = 
OS_CFG_PRIO_MAX
;

775 
	`OS_PídLi°Inô
(&
p_muãx
->
PídLi°
);

776 
	}
}

794 #i‡
OS_CFG_DBG_EN
 > 0u

795 
	$OS_MuãxDbgLi°Add
 (
OS_MUTEX
 *
p_muãx
)

797 
p_muãx
->
DbgNamePå
 = (
CPU_CHAR
 *)((*)" ");

798 
p_muãx
->
DbgPªvPå
 = (
OS_MUTEX
 *)0;

799 i‡(
OSMuãxDbgLi°På
 =(
OS_MUTEX
 *)0) {

800 
p_muãx
->
DbgNextPå
 = (
OS_MUTEX
 *)0;

802 
p_muãx
->
DbgNextPå
 = 
OSMuãxDbgLi°På
;

803 
OSMuãxDbgLi°På
->
DbgPªvPå
 = 
p_muãx
;

805 
OSMuãxDbgLi°På
 = 
p_muãx
;

806 
	}
}

810 
	$OS_MuãxDbgLi°Remove
 (
OS_MUTEX
 *
p_muãx
)

812 
OS_MUTEX
 *
p_muãx_√xt
;

813 
OS_MUTEX
 *
p_muãx_¥ev
;

816 
p_muãx_¥ev
 = 
p_muãx
->
DbgPªvPå
;

817 
p_muãx_√xt
 = 
p_muãx
->
DbgNextPå
;

819 i‡(
p_muãx_¥ev
 =(
OS_MUTEX
 *)0) {

820 
OSMuãxDbgLi°På
 = 
p_muãx_√xt
;

821 i‡(
p_muãx_√xt
 !(
OS_MUTEX
 *)0) {

822 
p_muãx_√xt
->
DbgPªvPå
 = (
OS_MUTEX
 *)0;

824 
p_muãx
->
DbgNextPå
 = (
OS_MUTEX
 *)0;

826 } i‡(
p_muãx_√xt
 =(
OS_MUTEX
 *)0) {

827 
p_muãx_¥ev
->
DbgNextPå
 = (
OS_MUTEX
 *)0;

828 
p_muãx
->
DbgPªvPå
 = (
OS_MUTEX
 *)0;

831 
p_muãx_¥ev
->
DbgNextPå
 = 
p_muãx_√xt
;

832 
p_muãx_√xt
->
DbgPªvPå
 = 
p_muãx_¥ev
;

833 
p_muãx
->
DbgNextPå
 = (
OS_MUTEX
 *)0;

834 
p_muãx
->
DbgPªvPå
 = (
OS_MUTEX
 *)0;

836 
	}
}

857 
	$OS_MuãxInô
 (
OS_ERR
 *
p_îr
)

859 #ifde‡
OS_SAFETY_CRITICAL


860 i‡(
p_îr
 =(
OS_ERR
 *)0) {

861 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

866 #i‡
OS_CFG_DBG_EN
 > 0u

867 
OSMuãxDbgLi°På
 = (
OS_MUTEX
 *)0;

870 
OSMuãxQty
 = (
OS_OBJ_QTY
)0;

871 *
p_îr
 = 
OS_ERR_NONE
;

872 
	}
}

	@Source/os_pend_multi.c

33 
	#MICRIUM_SOURCE


	)

34 
	~<os.h
>

36 #ifde‡
VSC_INCLUDE_SOURCE_FILE_NAMES


37 c⁄° 
CPU_CHAR
 *
	gos_≥nd_mu…i__c
 = "$Id: $";

41 #i‡(((
OS_CFG_Q_EN
 > 0uË|| (
OS_CFG_SEM_EN
 > 0u)Ë&& (
OS_CFG_PEND_MULTI_EN
 > 0u))

121 
OS_OBJ_QTY
 
	$OSPídMu…i
 (
OS_PEND_DATA
 *
p_≥nd_d©a_tbl
,

122 
OS_OBJ_QTY
 
tbl_size
,

123 
OS_TICK
 
timeout
,

124 
OS_OPT
 
›t
,

125 
OS_ERR
 *
p_îr
)

127 
CPU_BOOLEAN
 
vÆid
;

128 
OS_OBJ_QTY
 
nbr_obj_rdy
;

129 
	`CPU_SR_ALLOC
();

133 #ifde‡
OS_SAFETY_CRITICAL


134 i‡(
p_îr
 =(
OS_ERR
 *)0) {

135 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

136  ((
OS_OBJ_QTY
)0);

140 #i‡
OS_CFG_CALLED_FROM_ISR_CHK_EN
 > 0u

141 i‡(
OSI¡Ne°ögCå
 > (
OS_NESTING_CTR
)0) {

142 *
p_îr
 = 
OS_ERR_PEND_ISR
;

143  ((
OS_OBJ_QTY
)0);

147 #i‡
OS_CFG_ARG_CHK_EN
 > 0u

148 i‡(
p_≥nd_d©a_tbl
 =(
OS_PEND_DATA
 *)0) {

149 *
p_îr
 = 
OS_ERR_PTR_INVALID
;

150  ((
OS_OBJ_QTY
)0);

152 i‡(
tbl_size
 =(
OS_OBJ_QTY
)0) {

153 *
p_îr
 = 
OS_ERR_PTR_INVALID
;

154  ((
OS_OBJ_QTY
)0);

156 
›t
) {

157 
OS_OPT_PEND_BLOCKING
:

158 
OS_OPT_PEND_NON_BLOCKING
:

162 *
p_îr
 = 
OS_ERR_OPT_INVALID
;

163  ((
OS_OBJ_QTY
)0);

167 
vÆid
 = 
	`OS_PídMu…iVÆid©e
(
p_≥nd_d©a_tbl
,

168 
tbl_size
);

169 i‡(
vÆid
 =
DEF_FALSE
) {

170 *
p_îr
 = 
OS_ERR_OBJ_TYPE
;

171  ((
OS_OBJ_QTY
)0);

175 
	`CPU_CRITICAL_ENTER
();

176 
nbr_obj_rdy
 = 
	`OS_PídMu…iGëRdy
(
p_≥nd_d©a_tbl
,

177 
tbl_size
);

178 i‡(
nbr_obj_rdy
 > (
OS_OBJ_QTY
)0) {

179 
	`CPU_CRITICAL_EXIT
();

180 *
p_îr
 = 
OS_ERR_NONE
;

181  ((
OS_OBJ_QTY
)
nbr_obj_rdy
);

184 i‡((
›t
 & 
OS_OPT_PEND_NON_BLOCKING
Ë!(
OS_OPT
)0) {

185 
	`CPU_CRITICAL_EXIT
();

186 *
p_îr
 = 
OS_ERR_PEND_WOULD_BLOCK
;

187  ((
OS_OBJ_QTY
)0);

189 i‡(
OSSchedLockNe°ögCå
 > (
OS_NESTING_CTR
)0) {

190 
	`CPU_CRITICAL_EXIT
();

191 *
p_îr
 = 
OS_ERR_SCHED_LOCKED
;

192  ((
OS_OBJ_QTY
)0);

195 
	`OS_CRITICAL_ENTER_CPU_CRITICAL_EXIT
();

197 
	`OS_PídMu…iWaô
(
p_≥nd_d©a_tbl
,

198 
tbl_size
,

199 
timeout
);

201 
	`OS_CRITICAL_EXIT_NO_SCHED
();

203 
	`OSSched
();

205 
	`CPU_CRITICAL_ENTER
();

206 
OSTCBCurPå
->
PídSètus
) {

207 
OS_STATUS_PEND_OK
:

208 *
p_îr
 = 
OS_ERR_NONE
;

211 
OS_STATUS_PEND_ABORT
:

212 *
p_îr
 = 
OS_ERR_PEND_ABORT
;

215 
OS_STATUS_PEND_TIMEOUT
:

216 *
p_îr
 = 
OS_ERR_TIMEOUT
;

219 
OS_STATUS_PEND_DEL
:

220 *
p_îr
 = 
OS_ERR_OBJ_DEL
;

224 *
p_îr
 = 
OS_ERR_STATUS_INVALID
;

228 
OSTCBCurPå
->
PídSètus
 = 
OS_STATUS_PEND_OK
;

229 
	`CPU_CRITICAL_EXIT
();

231  ((
OS_OBJ_QTY
)1);

232 
	}
}

253 
OS_OBJ_QTY
 
	$OS_PídMu…iGëRdy
 (
OS_PEND_DATA
 *
p_≥nd_d©a_tbl
,

254 
OS_OBJ_QTY
 
tbl_size
)

256 
OS_OBJ_QTY
 
i
;

257 
OS_OBJ_QTY
 
nbr_obj_rdy
;

258 #i‡
OS_CFG_Q_EN
 > 0u

259 
OS_ERR
 
îr
;

260 
OS_MSG_SIZE
 
msg_size
;

261 
OS_Q
 *
p_q
;

262 *
p_void
;

263 
CPU_TS
 
ts
;

265 #i‡
OS_CFG_SEM_EN
 > 0u

266 
OS_SEM
 *
p_£m
;

271 
nbr_obj_rdy
 = (
OS_OBJ_QTY
)0;

272 
i
 = 0u; i < 
tbl_size
; i++) {

273 
p_≥nd_d©a_tbl
->
RdyObjPå
 = (
OS_PEND_OBJ
 *)0;

274 
p_≥nd_d©a_tbl
->
RdyMsgPå
 = (*)0;

275 
p_≥nd_d©a_tbl
->
RdyMsgSize
 = (
OS_MSG_SIZE
 )0;

276 
p_≥nd_d©a_tbl
->
RdyTS
 = (
CPU_TS
 )0;

277 
p_≥nd_d©a_tbl
->
NextPå
 = (
OS_PEND_DATA
 *)0;

278 
p_≥nd_d©a_tbl
->
PªvPå
 = (
OS_PEND_DATA
 *)0;

279 
p_≥nd_d©a_tbl
->
TCBPå
 = (
OS_TCB
 *)0;

280 #i‡
OS_CFG_Q_EN
 > 0u

281 
p_q
 = (
OS_Q
 *)((*)
p_≥nd_d©a_tbl
->
PídObjPå
);

282 i‡(
p_q
->
Ty≥
 =
OS_OBJ_TYPE_Q
) {

283 
p_void
 = 
	`OS_MsgQGë
(&
p_q
->
MsgQ
,

284 &
msg_size
,

285 &
ts
,

286 &
îr
);

287 i‡(
îr
 =
OS_ERR_NONE
) {

288 
p_≥nd_d©a_tbl
->
RdyObjPå
 =Ö_≥nd_d©a_tbl->
PídObjPå
;

289 
p_≥nd_d©a_tbl
->
RdyMsgPå
 = 
p_void
;

290 
p_≥nd_d©a_tbl
->
RdyMsgSize
 = 
msg_size
;

291 
p_≥nd_d©a_tbl
->
RdyTS
 = 
ts
;

292 
nbr_obj_rdy
++;

297 #i‡
OS_CFG_SEM_EN
 > 0u

298 
p_£m
 = (
OS_SEM
 *)((*)
p_≥nd_d©a_tbl
->
PídObjPå
);

299 i‡(
p_£m
->
Ty≥
 =
OS_OBJ_TYPE_SEM
) {

300 i‡(
p_£m
->
Cå
 > 0u) {

301 
p_£m
->
Cå
--;

302 
p_≥nd_d©a_tbl
->
RdyObjPå
 =Ö_≥nd_d©a_tbl->
PídObjPå
;

303 
p_≥nd_d©a_tbl
->
RdyTS
 = 
p_£m
->
TS
;

304 
nbr_obj_rdy
++;

309 
p_≥nd_d©a_tbl
++;

311  (
nbr_obj_rdy
);

312 
	}
}

334 
CPU_BOOLEAN
 
	$OS_PídMu…iVÆid©e
 (
OS_PEND_DATA
 *
p_≥nd_d©a_tbl
,

335 
OS_OBJ_QTY
 
tbl_size
)

337 
OS_OBJ_QTY
 
i
;

338 
OS_OBJ_QTY
 
˘r
;

339 #i‡
OS_CFG_SEM_EN
 > 0u

340 
OS_SEM
 *
p_£m
;

342 #i‡
OS_CFG_Q_EN
 > 0u

343 
OS_Q
 *
p_q
;

347 
i
 = 0u; i < 
tbl_size
; i++) {

348 i‡(
p_≥nd_d©a_tbl
->
PídObjPå
 =(
OS_PEND_OBJ
 *)0) {

349  (
DEF_FALSE
);

352 
˘r
 = 0u;

353 #i‡
OS_CFG_SEM_EN
 > 0u

354 
p_£m
 = (
OS_SEM
 *)((*)
p_≥nd_d©a_tbl
->
PídObjPå
);

355 i‡(
p_£m
->
Ty≥
 =
OS_OBJ_TYPE_SEM
) {

356 
˘r
++;

360 #i‡
OS_CFG_Q_EN
 > 0u

361 
p_q
 = (
OS_Q
 *)((*)
p_≥nd_d©a_tbl
->
PídObjPå
);

362 i‡(
p_q
->
Ty≥
 =
OS_OBJ_TYPE_Q
) {

363 
˘r
++;

367 i‡(
˘r
 =(
OS_OBJ_QTY
)0) {

368  (
DEF_FALSE
);

370 
p_≥nd_d©a_tbl
++;

372  (
DEF_TRUE
);

373 
	}
}

396 
	$OS_PídMu…iWaô
 (
OS_PEND_DATA
 *
p_≥nd_d©a_tbl
,

397 
OS_OBJ_QTY
 
tbl_size
,

398 
OS_TICK
 
timeout
)

400 
OS_OBJ_QTY
 
i
;

401 
OS_PEND_LIST
 *
p_≥nd_li°
;

403 #i‡
OS_CFG_Q_EN
 > 0u

404 
OS_Q
 *
p_q
;

407 #i‡
OS_CFG_SEM_EN
 > 0u

408 
OS_SEM
 *
p_£m
;

413 
OSTCBCurPå
->
PídOn
 = 
OS_TASK_PEND_ON_MULTI
;

414 
OSTCBCurPå
->
PídSètus
 = 
OS_STATUS_PEND_OK
;

415 
OSTCBCurPå
->
PídD©aTblE¡rõs
 = 
tbl_size
;

416 
OSTCBCurPå
->
PídD©aTblPå
 = 
p_≥nd_d©a_tbl
;

418 
	`OS_TaskBlock
(
OSTCBCurPå
,

419 
timeout
);

421 
i
 = 0u; i < 
tbl_size
; i++) {

422 
p_≥nd_d©a_tbl
->
TCBPå
 = 
OSTCBCurPå
;

424 #i‡
OS_CFG_SEM_EN
 > 0u

425 
p_£m
 = (
OS_SEM
 *)((*)
p_≥nd_d©a_tbl
->
PídObjPå
);

426 i‡(
p_£m
->
Ty≥
 =
OS_OBJ_TYPE_SEM
) {

427 
p_≥nd_li°
 = &
p_£m
->
PídLi°
;

428 
	`OS_PídLi°In£πPrio
(
p_≥nd_li°
,

429 
p_≥nd_d©a_tbl
);

433 #i‡
OS_CFG_Q_EN
 > 0u

434 
p_q
 = (
OS_Q
 *)((*)
p_≥nd_d©a_tbl
->
PídObjPå
);

435 i‡(
p_q
->
Ty≥
 =
OS_OBJ_TYPE_Q
) {

436 
p_≥nd_li°
 = &
p_q
->
PídLi°
;

437 
	`OS_PídLi°In£πPrio
(
p_≥nd_li°
,

438 
p_≥nd_d©a_tbl
);

442 
p_≥nd_d©a_tbl
++;

444 
	}
}

	@Source/os_prio.c

33 
	#MICRIUM_SOURCE


	)

34 
	~<os.h
>

36 #ifde‡
VSC_INCLUDE_SOURCE_FILE_NAMES


37 c⁄° 
CPU_CHAR
 *
	gos_¥io__c
 = "$Id: $";

41 
CPU_DATA
 
	gOSPrioTbl
[
OS_PRIO_TBL_SIZE
];

59 
	$OS_PrioInô
 ()

61 
CPU_DATA
 
i
;

65 
i
 = 0u; i < 
OS_PRIO_TBL_SIZE
; i++) {

66 
OSPrioTbl
[
i
] = (
CPU_DATA
)0;

68 
	}
}

85 
OS_PRIO
 
	$OS_PrioGëHighe°
 ()

87 
CPU_DATA
 *
p_tbl
;

88 
OS_PRIO
 
¥io
;

91 
¥io
 = (
OS_PRIO
)0;

92 
p_tbl
 = &
OSPrioTbl
[0];

93 *
p_tbl
 =(
CPU_DATA
)0) {

94 
¥io
 +
DEF_INT_CPU_NBR_BITS
;

95 
p_tbl
++;

97 
¥io
 +(
OS_PRIO
)
	`CPU_C¡LódZîos
(*
p_tbl
);

98  (
¥io
);

99 
	}
}

115 
	$OS_PrioIn£π
 (
OS_PRIO
 
¥io
)

117 
CPU_DATA
 
bô
;

118 
CPU_DATA
 
bô_nbr
;

119 
OS_PRIO
 
ix
;

122 
ix
 = 
¥io
 / 
DEF_INT_CPU_NBR_BITS
;

123 
bô_nbr
 = (
CPU_DATA
)
¥io
 & (
DEF_INT_CPU_NBR_BITS
 - 1u);

124 
bô
 = 1u;

125 
bô
 <<(
DEF_INT_CPU_NBR_BITS
 - 1uË- 
bô_nbr
;

126 
OSPrioTbl
[
ix
] |
bô
;

127 
	}
}

143 
	$OS_PrioRemove
 (
OS_PRIO
 
¥io
)

145 
CPU_DATA
 
bô
;

146 
CPU_DATA
 
bô_nbr
;

147 
OS_PRIO
 
ix
;

150 
ix
 = 
¥io
 / 
DEF_INT_CPU_NBR_BITS
;

151 
bô_nbr
 = (
CPU_DATA
)
¥io
 & (
DEF_INT_CPU_NBR_BITS
 - 1u);

152 
bô
 = 1u;

153 
bô
 <<(
DEF_INT_CPU_NBR_BITS
 - 1uË- 
bô_nbr
;

154 
OSPrioTbl
[
ix
] &~
bô
;

155 
	}
}

	@Source/os_q.c

33 
	#MICRIUM_SOURCE


	)

34 
	~<os.h
>

36 #ifde‡
VSC_INCLUDE_SOURCE_FILE_NAMES


37 c⁄° 
CPU_CHAR
 *
	gos_q__c
 = "$Id: $";

41 #i‡
OS_CFG_Q_EN
 > 0u

71 
	$OSQCª©e
 (
OS_Q
 *
p_q
,

72 
CPU_CHAR
 *
p_«me
,

73 
OS_MSG_QTY
 
max_qty
,

74 
OS_ERR
 *
p_îr
)

77 
	`CPU_SR_ALLOC
();

81 #ifde‡
OS_SAFETY_CRITICAL


82 i‡(
p_îr
 =(
OS_ERR
 *)0) {

83 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

88 #ifde‡
OS_SAFETY_CRITICAL_IEC61508


89 i‡(
OSSa„tyCrôiˇlSèπFœg
 =
DEF_TRUE
) {

90 *
p_îr
 = 
OS_ERR_ILLEGAL_CREATE_RUN_TIME
;

95 #i‡
OS_CFG_CALLED_FROM_ISR_CHK_EN
 > 0u

96 i‡(
OSI¡Ne°ögCå
 > (
OS_NESTING_CTR
)0) {

97 *
p_îr
 = 
OS_ERR_CREATE_ISR
;

102 #i‡
OS_CFG_ARG_CHK_EN
 > 0u

103 i‡(
p_q
 =(
OS_Q
 *)0) {

104 *
p_îr
 = 
OS_ERR_OBJ_PTR_NULL
;

107 i‡(
max_qty
 =(
OS_MSG_QTY
)0) {

108 *
p_îr
 = 
OS_ERR_Q_SIZE
;

113 
	`OS_CRITICAL_ENTER
();

114 
p_q
->
Ty≥
 = 
OS_OBJ_TYPE_Q
;

115 
p_q
->
NamePå
 = 
p_«me
;

116 
	`OS_MsgQInô
(&
p_q
->
MsgQ
,

117 
max_qty
);

118 
	`OS_PídLi°Inô
(&
p_q
->
PídLi°
);

120 #i‡
OS_CFG_DBG_EN
 > 0u

121 
	`OS_QDbgLi°Add
(
p_q
);

123 
OSQQty
++;

125 
	`OS_CRITICAL_EXIT_NO_SCHED
();

126 *
p_îr
 = 
OS_ERR_NONE
;

127 
	}
}

166 #i‡
OS_CFG_Q_DEL_EN
 > 0u

167 
OS_OBJ_QTY
 
	$OSQDñ
 (
OS_Q
 *
p_q
,

168 
OS_OPT
 
›t
,

169 
OS_ERR
 *
p_îr
)

171 
OS_OBJ_QTY
 
˙t
;

172 
OS_OBJ_QTY
 
nbr_èsks
;

173 
OS_PEND_DATA
 *
p_≥nd_d©a
;

174 
OS_PEND_LIST
 *
p_≥nd_li°
;

175 
OS_TCB
 *
p_tcb
;

176 
CPU_TS
 
ts
;

177 
	`CPU_SR_ALLOC
();

181 #ifde‡
OS_SAFETY_CRITICAL


182 i‡(
p_îr
 =(
OS_ERR
 *)0) {

183 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

184  ((
OS_OBJ_QTY
)0);

188 #i‡
OS_CFG_CALLED_FROM_ISR_CHK_EN
 > 0u

189 i‡(
OSI¡Ne°ögCå
 > (
OS_NESTING_CTR
)0) {

190 *
p_îr
 = 
OS_ERR_DEL_ISR
;

191  ((
OS_OBJ_QTY
)0);

195 #i‡
OS_CFG_ARG_CHK_EN
 > 0u

196 i‡(
p_q
 =(
OS_Q
 *)0) {

197 *
p_îr
 = 
OS_ERR_OBJ_PTR_NULL
;

198  ((
OS_OBJ_QTY
)0u);

200 
›t
) {

201 
OS_OPT_DEL_NO_PEND
:

202 
OS_OPT_DEL_ALWAYS
:

206 *
p_îr
 = 
OS_ERR_OPT_INVALID
;

207  ((
OS_OBJ_QTY
)0u);

211 #i‡
OS_CFG_OBJ_TYPE_CHK_EN
 > 0u

212 i‡(
p_q
->
Ty≥
 !
OS_OBJ_TYPE_Q
) {

213 *
p_îr
 = 
OS_ERR_OBJ_TYPE
;

214  ((
OS_OBJ_QTY
)0);

218 
	`CPU_CRITICAL_ENTER
();

219 
p_≥nd_li°
 = &
p_q
->
PídLi°
;

220 
˙t
 = 
p_≥nd_li°
->
NbrE¡rõs
;

221 
nbr_èsks
 = 
˙t
;

222 
›t
) {

223 
OS_OPT_DEL_NO_PEND
:

224 i‡(
nbr_èsks
 =(
OS_OBJ_QTY
)0) {

225 #i‡
OS_CFG_DBG_EN
 > 0u

226 
	`OS_QDbgLi°Remove
(
p_q
);

228 
OSQQty
--;

229 
	`OS_QCÃ
(
p_q
);

230 
	`CPU_CRITICAL_EXIT
();

231 *
p_îr
 = 
OS_ERR_NONE
;

233 
	`CPU_CRITICAL_EXIT
();

234 *
p_îr
 = 
OS_ERR_TASK_WAITING
;

238 
OS_OPT_DEL_ALWAYS
:

239 
	`OS_CRITICAL_ENTER_CPU_CRITICAL_EXIT
();

240 
ts
 = 
	`OS_TS_GET
();

241 
˙t
 > 0u) {

242 
p_≥nd_d©a
 = 
p_≥nd_li°
->
HódPå
;

243 
p_tcb
 = 
p_≥nd_d©a
->
TCBPå
;

244 
	`OS_PídObjDñ
((
OS_PEND_OBJ
 *)((*)
p_q
),

245 
p_tcb
,

246 
ts
);

247 
˙t
--;

249 #i‡
OS_CFG_DBG_EN
 > 0u

250 
	`OS_QDbgLi°Remove
(
p_q
);

252 
OSQQty
--;

253 
	`OS_QCÃ
(
p_q
);

254 
	`OS_CRITICAL_EXIT_NO_SCHED
();

255 
	`OSSched
();

256 *
p_îr
 = 
OS_ERR_NONE
;

260 
	`CPU_CRITICAL_EXIT
();

261 *
p_îr
 = 
OS_ERR_OPT_INVALID
;

264  (
nbr_èsks
);

265 
	}
}

293 #i‡
OS_CFG_Q_FLUSH_EN
 > 0u

294 
OS_MSG_QTY
 
	$OSQFlush
 (
OS_Q
 *
p_q
,

295 
OS_ERR
 *
p_îr
)

297 
OS_MSG_QTY
 
íåõs
;

298 
	`CPU_SR_ALLOC
();

302 #ifde‡
OS_SAFETY_CRITICAL


303 i‡(
p_îr
 =(
OS_ERR
 *)0) {

304 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

305  ((
OS_MSG_QTY
)0);

309 #i‡
OS_CFG_CALLED_FROM_ISR_CHK_EN
 > 0u

310 i‡(
OSI¡Ne°ögCå
 > (
OS_NESTING_CTR
)0) {

311 *
p_îr
 = 
OS_ERR_FLUSH_ISR
;

312  ((
OS_MSG_QTY
)0);

316 #i‡
OS_CFG_ARG_CHK_EN
 > 0u

317 i‡(
p_q
 =(
OS_Q
 *)0) {

318 *
p_îr
 = 
OS_ERR_OBJ_PTR_NULL
;

319  ((
OS_MSG_QTY
)0);

323 #i‡
OS_CFG_OBJ_TYPE_CHK_EN
 > 0u

324 i‡(
p_q
->
Ty≥
 !
OS_OBJ_TYPE_Q
) {

325 *
p_îr
 = 
OS_ERR_OBJ_TYPE
;

326  ((
OS_MSG_QTY
)0);

330 
	`OS_CRITICAL_ENTER
();

331 
íåõs
 = 
	`OS_MsgQFªeAŒ
(&
p_q
->
MsgQ
);

332 
	`OS_CRITICAL_EXIT
();

333 *
p_îr
 = 
OS_ERR_NONE
;

334  ((
OS_MSG_QTY
)
íåõs
);

335 
	}
}

384 *
	$OSQPíd
 (
OS_Q
 *
p_q
,

385 
OS_TICK
 
timeout
,

386 
OS_OPT
 
›t
,

387 
OS_MSG_SIZE
 *
p_msg_size
,

388 
CPU_TS
 *
p_ts
,

389 
OS_ERR
 *
p_îr
)

391 
OS_PEND_DATA
 
≥nd_d©a
;

392 *
p_void
;

393 
	`CPU_SR_ALLOC
();

397 #ifde‡
OS_SAFETY_CRITICAL


398 i‡(
p_îr
 =(
OS_ERR
 *)0) {

399 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

404 #i‡
OS_CFG_CALLED_FROM_ISR_CHK_EN
 > 0u

405 i‡(
OSI¡Ne°ögCå
 > (
OS_NESTING_CTR
)0) {

406 *
p_îr
 = 
OS_ERR_PEND_ISR
;

411 #i‡
OS_CFG_ARG_CHK_EN
 > 0u

412 i‡(
p_q
 =(
OS_Q
 *)0) {

413 *
p_îr
 = 
OS_ERR_OBJ_PTR_NULL
;

416 i‡(
p_msg_size
 =(
OS_MSG_SIZE
 *)0) {

417 *
p_îr
 = 
OS_ERR_PTR_INVALID
;

420 
›t
) {

421 
OS_OPT_PEND_BLOCKING
:

422 
OS_OPT_PEND_NON_BLOCKING
:

426 *
p_îr
 = 
OS_ERR_OPT_INVALID
;

431 #i‡
OS_CFG_OBJ_TYPE_CHK_EN
 > 0u

432 i‡(
p_q
->
Ty≥
 !
OS_OBJ_TYPE_Q
) {

433 *
p_îr
 = 
OS_ERR_OBJ_TYPE
;

438 i‡(
p_ts
 !(
CPU_TS
 *)0) {

439 *
p_ts
 = (
CPU_TS
 )0;

442 
	`CPU_CRITICAL_ENTER
();

443 
p_void
 = 
	`OS_MsgQGë
(&
p_q
->
MsgQ
,

444 
p_msg_size
,

445 
p_ts
,

446 
p_îr
);

447 i‡(*
p_îr
 =
OS_ERR_NONE
) {

448 
	`CPU_CRITICAL_EXIT
();

449  (
p_void
);

452 i‡((
›t
 & 
OS_OPT_PEND_NON_BLOCKING
Ë!(
OS_OPT
)0) {

453 
	`CPU_CRITICAL_EXIT
();

454 *
p_îr
 = 
OS_ERR_PEND_WOULD_BLOCK
;

457 i‡(
OSSchedLockNe°ögCå
 > (
OS_NESTING_CTR
)0) {

458 
	`CPU_CRITICAL_EXIT
();

459 *
p_îr
 = 
OS_ERR_SCHED_LOCKED
;

464 
	`OS_CRITICAL_ENTER_CPU_CRITICAL_EXIT
();

465 
	`OS_Píd
(&
≥nd_d©a
,

466 (
OS_PEND_OBJ
 *)((*)
p_q
),

467 
OS_TASK_PEND_ON_Q
,

468 
timeout
);

469 
	`OS_CRITICAL_EXIT_NO_SCHED
();

471 
	`OSSched
();

473 
	`CPU_CRITICAL_ENTER
();

474 
OSTCBCurPå
->
PídSètus
) {

475 
OS_STATUS_PEND_OK
:

476 
p_void
 = 
OSTCBCurPå
->
MsgPå
;

477 *
p_msg_size
 = 
OSTCBCurPå
->
MsgSize
;

478 i‡(
p_ts
 !(
CPU_TS
 *)0) {

479 *
p_ts
 = 
OSTCBCurPå
->
TS
;

481 *
p_îr
 = 
OS_ERR_NONE
;

484 
OS_STATUS_PEND_ABORT
:

485 
p_void
 = (*)0;

486 *
p_msg_size
 = (
OS_MSG_SIZE
)0;

487 i‡(
p_ts
 !(
CPU_TS
 *)0) {

488 *
p_ts
 = 
OSTCBCurPå
->
TS
;

490 *
p_îr
 = 
OS_ERR_PEND_ABORT
;

493 
OS_STATUS_PEND_TIMEOUT
:

494 
p_void
 = (*)0;

495 *
p_msg_size
 = (
OS_MSG_SIZE
)0;

496 i‡(
p_ts
 !(
CPU_TS
 *)0) {

497 *
p_ts
 = (
CPU_TS
 )0;

499 *
p_îr
 = 
OS_ERR_TIMEOUT
;

502 
OS_STATUS_PEND_DEL
:

503 
p_void
 = (*)0;

504 *
p_msg_size
 = (
OS_MSG_SIZE
)0;

505 i‡(
p_ts
 !(
CPU_TS
 *)0) {

506 *
p_ts
 = 
OSTCBCurPå
->
TS
;

508 *
p_îr
 = 
OS_ERR_OBJ_DEL
;

512 
p_void
 = (*)0;

513 *
p_msg_size
 = (
OS_MSG_SIZE
)0;

514 *
p_îr
 = 
OS_ERR_STATUS_INVALID
;

517 
	`CPU_CRITICAL_EXIT
();

518  (
p_void
);

519 
	}
}

554 #i‡
OS_CFG_Q_PEND_ABORT_EN
 > 0u

555 
OS_OBJ_QTY
 
	$OSQPídAb‹t
 (
OS_Q
 *
p_q
,

556 
OS_OPT
 
›t
,

557 
OS_ERR
 *
p_îr
)

559 
OS_PEND_LIST
 *
p_≥nd_li°
;

560 
OS_TCB
 *
p_tcb
;

561 
CPU_TS
 
ts
;

562 
OS_OBJ_QTY
 
nbr_èsks
;

563 
	`CPU_SR_ALLOC
();

567 #ifde‡
OS_SAFETY_CRITICAL


568 i‡(
p_îr
 =(
OS_ERR
 *)0) {

569 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

570  ((
OS_OBJ_QTY
)0u);

574 #i‡
OS_CFG_CALLED_FROM_ISR_CHK_EN
 > 0u

575 i‡(
OSI¡Ne°ögCå
 > (
OS_NESTING_CTR
)0u) {

576 *
p_îr
 = 
OS_ERR_PEND_ABORT_ISR
;

577  ((
OS_OBJ_QTY
)0u);

581 #i‡
OS_CFG_ARG_CHK_EN
 > 0u

582 i‡(
p_q
 =(
OS_Q
 *)0) {

583 *
p_îr
 = 
OS_ERR_OBJ_PTR_NULL
;

584  ((
OS_OBJ_QTY
)0u);

586 
›t
) {

587 
OS_OPT_PEND_ABORT_1
:

588 
OS_OPT_PEND_ABORT_ALL
:

589 
OS_OPT_PEND_ABORT_1
 | 
OS_OPT_POST_NO_SCHED
:

590 
OS_OPT_PEND_ABORT_ALL
 | 
OS_OPT_POST_NO_SCHED
:

594 *
p_îr
 = 
OS_ERR_OPT_INVALID
;

595  ((
OS_OBJ_QTY
)0u);

599 #i‡
OS_CFG_OBJ_TYPE_CHK_EN
 > 0u

600 i‡(
p_q
->
Ty≥
 !
OS_OBJ_TYPE_Q
) {

601 *
p_îr
 = 
OS_ERR_OBJ_TYPE
;

602  ((
OS_OBJ_QTY
)0u);

606 
	`CPU_CRITICAL_ENTER
();

607 
p_≥nd_li°
 = &
p_q
->
PídLi°
;

608 i‡(
p_≥nd_li°
->
NbrE¡rõs
 =(
OS_OBJ_QTY
)0u) {

609 
	`CPU_CRITICAL_EXIT
();

610 *
p_îr
 = 
OS_ERR_PEND_ABORT_NONE
;

611  ((
OS_OBJ_QTY
)0u);

614 
	`OS_CRITICAL_ENTER_CPU_CRITICAL_EXIT
();

615 
nbr_èsks
 = 0u;

616 
ts
 = 
	`OS_TS_GET
();

617 
p_≥nd_li°
->
NbrE¡rõs
 > (
OS_OBJ_QTY
)0u) {

618 
p_tcb
 = 
p_≥nd_li°
->
HódPå
->
TCBPå
;

619 
	`OS_PídAb‹t
((
OS_PEND_OBJ
 *)((*)
p_q
),

620 
p_tcb
,

621 
ts
);

622 
nbr_èsks
++;

623 i‡(
›t
 !
OS_OPT_PEND_ABORT_ALL
) {

627 
	`OS_CRITICAL_EXIT_NO_SCHED
();

629 i‡((
›t
 & 
OS_OPT_POST_NO_SCHED
Ë=(
OS_OPT
)0u) {

630 
	`OSSched
();

633 *
p_îr
 = 
OS_ERR_NONE
;

634  (
nbr_èsks
);

635 
	}
}

688 
	$OSQPo°
 (
OS_Q
 *
p_q
,

689 *
p_void
,

690 
OS_MSG_SIZE
 
msg_size
,

691 
OS_OPT
 
›t
,

692 
OS_ERR
 *
p_îr
)

694 
CPU_TS
 
ts
;

698 #ifde‡
OS_SAFETY_CRITICAL


699 i‡(
p_îr
 =(
OS_ERR
 *)0) {

700 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

705 #i‡
OS_CFG_ARG_CHK_EN
 > 0u

706 i‡(
p_q
 =(
OS_Q
 *)0) {

707 *
p_îr
 = 
OS_ERR_OBJ_PTR_NULL
;

710 
›t
) {

711 
OS_OPT_POST_FIFO
:

712 
OS_OPT_POST_LIFO
:

713 
OS_OPT_POST_FIFO
 | 
OS_OPT_POST_ALL
:

714 
OS_OPT_POST_LIFO
 | 
OS_OPT_POST_ALL
:

715 
OS_OPT_POST_FIFO
 | 
OS_OPT_POST_NO_SCHED
:

716 
OS_OPT_POST_LIFO
 | 
OS_OPT_POST_NO_SCHED
:

717 
OS_OPT_POST_FIFO
 | 
OS_OPT_POST_ALL
 | 
OS_OPT_POST_NO_SCHED
:

718 
OS_OPT_POST_LIFO
 | 
OS_OPT_POST_ALL
 | 
OS_OPT_POST_NO_SCHED
:

722 *
p_îr
 = 
OS_ERR_OPT_INVALID
;

727 #i‡
OS_CFG_OBJ_TYPE_CHK_EN
 > 0u

728 i‡(
p_q
->
Ty≥
 !
OS_OBJ_TYPE_Q
) {

729 *
p_îr
 = 
OS_ERR_OBJ_TYPE
;

734 
ts
 = 
	`OS_TS_GET
();

736 #i‡
OS_CFG_ISR_POST_DEFERRED_EN
 > 0u

737 i‡(
OSI¡Ne°ögCå
 > (
OS_NESTING_CTR
)0) {

738 
	`OS_I¡QPo°
((
OS_OBJ_TYPE
)
OS_OBJ_TYPE_Q
,

739 (*)
p_q
,

740 (*)
p_void
,

741 (
OS_MSG_SIZE
)
msg_size
,

742 (
OS_FLAGS
 )0,

743 (
OS_OPT
 )
›t
,

744 (
CPU_TS
 )
ts
,

745 (
OS_ERR
 *)
p_îr
);

750 
	`OS_QPo°
(
p_q
,

751 
p_void
,

752 
msg_size
,

753 
›t
,

754 
ts
,

755 
p_îr
);

756 
	}
}

775 
	$OS_QCÃ
 (
OS_Q
 *
p_q
)

777 ()
	`OS_MsgQFªeAŒ
(&
p_q
->
MsgQ
);

778 
p_q
->
Ty≥
 = 
OS_OBJ_TYPE_NONE
;

779 
p_q
->
NamePå
 = (
CPU_CHAR
 *)((*)"?Q");

780 
	`OS_MsgQInô
(&
p_q
->
MsgQ
,

782 
	`OS_PídLi°Inô
(&
p_q
->
PídLi°
);

783 
	}
}

802 #i‡
OS_CFG_DBG_EN
 > 0u

803 
	$OS_QDbgLi°Add
 (
OS_Q
 *
p_q
)

805 
p_q
->
DbgNamePå
 = (
CPU_CHAR
 *)((*)" ");

806 
p_q
->
DbgPªvPå
 = (
OS_Q
 *)0;

807 i‡(
OSQDbgLi°På
 =(
OS_Q
 *)0) {

808 
p_q
->
DbgNextPå
 = (
OS_Q
 *)0;

810 
p_q
->
DbgNextPå
 = 
OSQDbgLi°På
;

811 
OSQDbgLi°På
->
DbgPªvPå
 = 
p_q
;

813 
OSQDbgLi°På
 = 
p_q
;

814 
	}
}

818 
	$OS_QDbgLi°Remove
 (
OS_Q
 *
p_q
)

820 
OS_Q
 *
p_q_√xt
;

821 
OS_Q
 *
p_q_¥ev
;

824 
p_q_¥ev
 = 
p_q
->
DbgPªvPå
;

825 
p_q_√xt
 = 
p_q
->
DbgNextPå
;

827 i‡(
p_q_¥ev
 =(
OS_Q
 *)0) {

828 
OSQDbgLi°På
 = 
p_q_√xt
;

829 i‡(
p_q_√xt
 !(
OS_Q
 *)0) {

830 
p_q_√xt
->
DbgPªvPå
 = (
OS_Q
 *)0;

832 
p_q
->
DbgNextPå
 = (
OS_Q
 *)0;

834 } i‡(
p_q_√xt
 =(
OS_Q
 *)0) {

835 
p_q_¥ev
->
DbgNextPå
 = (
OS_Q
 *)0;

836 
p_q
->
DbgPªvPå
 = (
OS_Q
 *)0;

839 
p_q_¥ev
->
DbgNextPå
 = 
p_q_√xt
;

840 
p_q_√xt
->
DbgPªvPå
 = 
p_q_¥ev
;

841 
p_q
->
DbgNextPå
 = (
OS_Q
 *)0;

842 
p_q
->
DbgPªvPå
 = (
OS_Q
 *)0;

844 
	}
}

865 
	$OS_QInô
 (
OS_ERR
 *
p_îr
)

867 #ifde‡
OS_SAFETY_CRITICAL


868 i‡(
p_îr
 =(
OS_ERR
 *)0) {

869 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

874 #i‡
OS_CFG_DBG_EN
 > 0u

875 
OSQDbgLi°På
 = (
OS_Q
 *)0;

878 
OSQQty
 = (
OS_OBJ_QTY
)0;

879 *
p_îr
 = 
OS_ERR_NONE
;

880 
	}
}

922 
	$OS_QPo°
 (
OS_Q
 *
p_q
,

923 *
p_void
,

924 
OS_MSG_SIZE
 
msg_size
,

925 
OS_OPT
 
›t
,

926 
CPU_TS
 
ts
,

927 
OS_ERR
 *
p_îr
)

929 
OS_OBJ_QTY
 
˙t
;

930 
OS_OPT
 
po°_ty≥
;

931 
OS_PEND_LIST
 *
p_≥nd_li°
;

932 
OS_PEND_DATA
 *
p_≥nd_d©a
;

933 
OS_PEND_DATA
 *
p_≥nd_d©a_√xt
;

934 
OS_TCB
 *
p_tcb
;

935 
	`CPU_SR_ALLOC
();

939 
	`OS_CRITICAL_ENTER
();

940 
p_≥nd_li°
 = &
p_q
->
PídLi°
;

941 i‡(
p_≥nd_li°
->
NbrE¡rõs
 =(
OS_OBJ_QTY
)0) {

942 i‡((
›t
 & 
OS_OPT_POST_LIFO
Ë=(
OS_OPT
)0) {

943 
po°_ty≥
 = 
OS_OPT_POST_FIFO
;

945 
po°_ty≥
 = 
OS_OPT_POST_LIFO
;

947 
	`OS_MsgQPut
(&
p_q
->
MsgQ
,

948 
p_void
,

949 
msg_size
,

950 
po°_ty≥
,

951 
ts
,

952 
p_îr
);

953 
	`OS_CRITICAL_EXIT
();

957 i‡((
›t
 & 
OS_OPT_POST_ALL
Ë!(
OS_OPT
)0) {

958 
˙t
 = 
p_≥nd_li°
->
NbrE¡rõs
;

960 
˙t
 = (
OS_OBJ_QTY
)1;

962 
p_≥nd_d©a
 = 
p_≥nd_li°
->
HódPå
;

963 
˙t
 > 0u) {

964 
p_tcb
 = 
p_≥nd_d©a
->
TCBPå
;

965 
p_≥nd_d©a_√xt
 = 
p_≥nd_d©a
->
NextPå
;

966 
	`OS_Po°
((
OS_PEND_OBJ
 *)((*)
p_q
),

967 
p_tcb
,

968 
p_void
,

969 
msg_size
,

970 
ts
);

971 
p_≥nd_d©a
 = 
p_≥nd_d©a_√xt
;

972 
˙t
--;

974 
	`OS_CRITICAL_EXIT_NO_SCHED
();

975 i‡((
›t
 & 
OS_OPT_POST_NO_SCHED
Ë=(
OS_OPT
)0) {

976 
	`OSSched
();

978 *
p_îr
 = 
OS_ERR_NONE
;

979 
	}
}

	@Source/os_sem.c

33 
	#MICRIUM_SOURCE


	)

34 
	~<os.h
>

36 #ifde‡
VSC_INCLUDE_SOURCE_FILE_NAMES


37 c⁄° 
CPU_CHAR
 *
	gos_£m__c
 = "$Id: $";

41 #i‡
OS_CFG_SEM_EN
 > 0u

73 
	$OSSemCª©e
 (
OS_SEM
 *
p_£m
,

74 
CPU_CHAR
 *
p_«me
,

75 
OS_SEM_CTR
 
˙t
,

76 
OS_ERR
 *
p_îr
)

78 
	`CPU_SR_ALLOC
();

82 #ifde‡
OS_SAFETY_CRITICAL


83 i‡(
p_îr
 =(
OS_ERR
 *)0) {

84 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

89 #ifde‡
OS_SAFETY_CRITICAL_IEC61508


90 i‡(
OSSa„tyCrôiˇlSèπFœg
 =
DEF_TRUE
) {

91 *
p_îr
 = 
OS_ERR_ILLEGAL_CREATE_RUN_TIME
;

96 #i‡
OS_CFG_CALLED_FROM_ISR_CHK_EN
 > 0u

97 i‡(
OSI¡Ne°ögCå
 > (
OS_NESTING_CTR
)0) {

98 *
p_îr
 = 
OS_ERR_CREATE_ISR
;

103 #i‡
OS_CFG_ARG_CHK_EN
 > 0u

104 i‡(
p_£m
 =(
OS_SEM
 *)0) {

105 *
p_îr
 = 
OS_ERR_OBJ_PTR_NULL
;

110 
	`OS_CRITICAL_ENTER
();

111 
p_£m
->
Ty≥
 = 
OS_OBJ_TYPE_SEM
;

112 
p_£m
->
Cå
 = 
˙t
;

113 
p_£m
->
TS
 = (
CPU_TS
)0;

114 
p_£m
->
NamePå
 = 
p_«me
;

115 
	`OS_PídLi°Inô
(&
p_£m
->
PídLi°
);

117 #i‡
OS_CFG_DBG_EN
 > 0u

118 
	`OS_SemDbgLi°Add
(
p_£m
);

120 
OSSemQty
++;

122 
	`OS_CRITICAL_EXIT_NO_SCHED
();

123 *
p_îr
 = 
OS_ERR_NONE
;

124 
	}
}

162 #i‡
OS_CFG_SEM_DEL_EN
 > 0u

163 
OS_OBJ_QTY
 
	$OSSemDñ
 (
OS_SEM
 *
p_£m
,

164 
OS_OPT
 
›t
,

165 
OS_ERR
 *
p_îr
)

167 
OS_OBJ_QTY
 
˙t
;

168 
OS_OBJ_QTY
 
nbr_èsks
;

169 
OS_PEND_DATA
 *
p_≥nd_d©a
;

170 
OS_PEND_LIST
 *
p_≥nd_li°
;

171 
OS_TCB
 *
p_tcb
;

172 
CPU_TS
 
ts
;

173 
	`CPU_SR_ALLOC
();

177 #ifde‡
OS_SAFETY_CRITICAL


178 i‡(
p_îr
 =(
OS_ERR
 *)0) {

179 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

180  ((
OS_OBJ_QTY
)0);

184 #i‡
OS_CFG_CALLED_FROM_ISR_CHK_EN
 > 0u

185 i‡(
OSI¡Ne°ögCå
 > (
OS_NESTING_CTR
)0) {

186 *
p_îr
 = 
OS_ERR_DEL_ISR
;

187  ((
OS_OBJ_QTY
)0);

191 #i‡
OS_CFG_ARG_CHK_EN
 > 0u

192 i‡(
p_£m
 =(
OS_SEM
 *)0) {

193 *
p_îr
 = 
OS_ERR_OBJ_PTR_NULL
;

194  ((
OS_OBJ_QTY
)0);

196 
›t
) {

197 
OS_OPT_DEL_NO_PEND
:

198 
OS_OPT_DEL_ALWAYS
:

202 *
p_îr
 = 
OS_ERR_OPT_INVALID
;

203  ((
OS_OBJ_QTY
)0);

207 #i‡
OS_CFG_OBJ_TYPE_CHK_EN
 > 0u

208 i‡(
p_£m
->
Ty≥
 !
OS_OBJ_TYPE_SEM
) {

209 *
p_îr
 = 
OS_ERR_OBJ_TYPE
;

210  ((
OS_OBJ_QTY
)0);

214 
	`CPU_CRITICAL_ENTER
();

215 
p_≥nd_li°
 = &
p_£m
->
PídLi°
;

216 
˙t
 = 
p_≥nd_li°
->
NbrE¡rõs
;

217 
nbr_èsks
 = 
˙t
;

218 
›t
) {

219 
OS_OPT_DEL_NO_PEND
:

220 i‡(
nbr_èsks
 =(
OS_OBJ_QTY
)0) {

221 #i‡
OS_CFG_DBG_EN
 > 0u

222 
	`OS_SemDbgLi°Remove
(
p_£m
);

224 
OSSemQty
--;

225 
	`OS_SemCÃ
(
p_£m
);

226 
	`CPU_CRITICAL_EXIT
();

227 *
p_îr
 = 
OS_ERR_NONE
;

229 
	`CPU_CRITICAL_EXIT
();

230 *
p_îr
 = 
OS_ERR_TASK_WAITING
;

234 
OS_OPT_DEL_ALWAYS
:

235 
	`OS_CRITICAL_ENTER_CPU_CRITICAL_EXIT
();

236 
ts
 = 
	`OS_TS_GET
();

237 
˙t
 > 0u) {

238 
p_≥nd_d©a
 = 
p_≥nd_li°
->
HódPå
;

239 
p_tcb
 = 
p_≥nd_d©a
->
TCBPå
;

240 
	`OS_PídObjDñ
((
OS_PEND_OBJ
 *)((*)
p_£m
),

241 
p_tcb
,

242 
ts
);

243 
˙t
--;

245 #i‡
OS_CFG_DBG_EN
 > 0u

246 
	`OS_SemDbgLi°Remove
(
p_£m
);

248 
OSSemQty
--;

249 
	`OS_SemCÃ
(
p_£m
);

250 
	`OS_CRITICAL_EXIT_NO_SCHED
();

251 
	`OSSched
();

252 *
p_îr
 = 
OS_ERR_NONE
;

256 
	`CPU_CRITICAL_EXIT
();

257 *
p_îr
 = 
OS_ERR_OPT_INVALID
;

260  ((
OS_OBJ_QTY
)
nbr_èsks
);

261 
	}
}

311 
OS_SEM_CTR
 
	$OSSemPíd
 (
OS_SEM
 *
p_£m
,

312 
OS_TICK
 
timeout
,

313 
OS_OPT
 
›t
,

314 
CPU_TS
 *
p_ts
,

315 
OS_ERR
 *
p_îr
)

317 
OS_SEM_CTR
 
˘r
;

318 
OS_PEND_DATA
 
≥nd_d©a
;

319 
	`CPU_SR_ALLOC
();

323 #ifde‡
OS_SAFETY_CRITICAL


324 i‡(
p_îr
 =(
OS_ERR
 *)0) {

325 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

326  ((
OS_SEM_CTR
)0);

330 #i‡
OS_CFG_CALLED_FROM_ISR_CHK_EN
 > 0u

331 i‡(
OSI¡Ne°ögCå
 > (
OS_NESTING_CTR
)0) {

332 *
p_îr
 = 
OS_ERR_PEND_ISR
;

333  ((
OS_SEM_CTR
)0);

337 #i‡
OS_CFG_ARG_CHK_EN
 > 0u

338 i‡(
p_£m
 =(
OS_SEM
 *)0) {

339 *
p_îr
 = 
OS_ERR_OBJ_PTR_NULL
;

340  ((
OS_SEM_CTR
)0);

342 
›t
) {

343 
OS_OPT_PEND_BLOCKING
:

344 
OS_OPT_PEND_NON_BLOCKING
:

348 *
p_îr
 = 
OS_ERR_OPT_INVALID
;

349  ((
OS_SEM_CTR
)0);

353 #i‡
OS_CFG_OBJ_TYPE_CHK_EN
 > 0u

354 i‡(
p_£m
->
Ty≥
 !
OS_OBJ_TYPE_SEM
) {

355 *
p_îr
 = 
OS_ERR_OBJ_TYPE
;

356  ((
OS_SEM_CTR
)0);

360 i‡(
p_ts
 !(
CPU_TS
 *)0) {

361 *
p_ts
 = (
CPU_TS
)0;

363 
	`CPU_CRITICAL_ENTER
();

364 i‡(
p_£m
->
Cå
 > (
OS_SEM_CTR
)0) {

365 
p_£m
->
Cå
--;

366 i‡(
p_ts
 !(
CPU_TS
 *)0) {

367 *
p_ts
 = 
p_£m
->
TS
;

369 
˘r
 = 
p_£m
->
Cå
;

370 
	`CPU_CRITICAL_EXIT
();

371 *
p_îr
 = 
OS_ERR_NONE
;

372  (
˘r
);

375 i‡((
›t
 & 
OS_OPT_PEND_NON_BLOCKING
Ë!(
OS_OPT
)0) {

376 
˘r
 = 
p_£m
->
Cå
;

377 
	`CPU_CRITICAL_EXIT
();

378 *
p_îr
 = 
OS_ERR_PEND_WOULD_BLOCK
;

379  (
˘r
);

381 i‡(
OSSchedLockNe°ögCå
 > (
OS_NESTING_CTR
)0) {

382 
	`CPU_CRITICAL_EXIT
();

383 *
p_îr
 = 
OS_ERR_SCHED_LOCKED
;

384  ((
OS_SEM_CTR
)0);

388 
	`OS_CRITICAL_ENTER_CPU_CRITICAL_EXIT
();

389 
	`OS_Píd
(&
≥nd_d©a
,

390 (
OS_PEND_OBJ
 *)((*)
p_£m
),

391 
OS_TASK_PEND_ON_SEM
,

392 
timeout
);

394 
	`OS_CRITICAL_EXIT_NO_SCHED
();

396 
	`OSSched
();

398 
	`CPU_CRITICAL_ENTER
();

399 
OSTCBCurPå
->
PídSètus
) {

400 
OS_STATUS_PEND_OK
:

401 i‡(
p_ts
 !(
CPU_TS
 *)0) {

402 *
p_ts
 = 
OSTCBCurPå
->
TS
;

404 *
p_îr
 = 
OS_ERR_NONE
;

407 
OS_STATUS_PEND_ABORT
:

408 i‡(
p_ts
 !(
CPU_TS
 *)0) {

409 *
p_ts
 = 
OSTCBCurPå
->
TS
;

411 *
p_îr
 = 
OS_ERR_PEND_ABORT
;

414 
OS_STATUS_PEND_TIMEOUT
:

415 i‡(
p_ts
 !(
CPU_TS
 *)0) {

416 *
p_ts
 = (
CPU_TS
 )0;

418 *
p_îr
 = 
OS_ERR_TIMEOUT
;

421 
OS_STATUS_PEND_DEL
:

422 i‡(
p_ts
 !(
CPU_TS
 *)0) {

423 *
p_ts
 = 
OSTCBCurPå
->
TS
;

425 *
p_îr
 = 
OS_ERR_OBJ_DEL
;

429 *
p_îr
 = 
OS_ERR_STATUS_INVALID
;

430 
	`CPU_CRITICAL_EXIT
();

431  ((
OS_SEM_CTR
)0);

433 
˘r
 = 
p_£m
->
Cå
;

434 
	`CPU_CRITICAL_EXIT
();

435  (
˘r
);

436 
	}
}

470 #i‡
OS_CFG_SEM_PEND_ABORT_EN
 > 0u

471 
OS_OBJ_QTY
 
	$OSSemPídAb‹t
 (
OS_SEM
 *
p_£m
,

472 
OS_OPT
 
›t
,

473 
OS_ERR
 *
p_îr
)

475 
OS_PEND_LIST
 *
p_≥nd_li°
;

476 
OS_TCB
 *
p_tcb
;

477 
CPU_TS
 
ts
;

478 
OS_OBJ_QTY
 
nbr_èsks
;

479 
	`CPU_SR_ALLOC
();

483 #ifde‡
OS_SAFETY_CRITICAL


484 i‡(
p_îr
 =(
OS_ERR
 *)0) {

485 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

486  ((
OS_OBJ_QTY
)0u);

490 #i‡
OS_CFG_CALLED_FROM_ISR_CHK_EN
 > 0u

491 i‡(
OSI¡Ne°ögCå
 > (
OS_NESTING_CTR
)0u) {

492 *
p_îr
 = 
OS_ERR_PEND_ABORT_ISR
;

493  ((
OS_OBJ_QTY
)0u);

497 #i‡
OS_CFG_ARG_CHK_EN
 > 0u

498 i‡(
p_£m
 =(
OS_SEM
 *)0) {

499 *
p_îr
 = 
OS_ERR_OBJ_PTR_NULL
;

500  ((
OS_OBJ_QTY
)0u);

502 
›t
) {

503 
OS_OPT_PEND_ABORT_1
:

504 
OS_OPT_PEND_ABORT_ALL
:

505 
OS_OPT_PEND_ABORT_1
 | 
OS_OPT_POST_NO_SCHED
:

506 
OS_OPT_PEND_ABORT_ALL
 | 
OS_OPT_POST_NO_SCHED
:

510 *
p_îr
 = 
OS_ERR_OPT_INVALID
;

511  ((
OS_OBJ_QTY
)0u);

515 #i‡
OS_CFG_OBJ_TYPE_CHK_EN
 > 0u

516 i‡(
p_£m
->
Ty≥
 !
OS_OBJ_TYPE_SEM
) {

517 *
p_îr
 = 
OS_ERR_OBJ_TYPE
;

518  ((
OS_OBJ_QTY
)0u);

522 
	`CPU_CRITICAL_ENTER
();

523 
p_≥nd_li°
 = &
p_£m
->
PídLi°
;

524 i‡(
p_≥nd_li°
->
NbrE¡rõs
 =(
OS_OBJ_QTY
)0u) {

525 
	`CPU_CRITICAL_EXIT
();

526 *
p_îr
 = 
OS_ERR_PEND_ABORT_NONE
;

527  ((
OS_OBJ_QTY
)0u);

530 
	`OS_CRITICAL_ENTER_CPU_CRITICAL_EXIT
();

531 
nbr_èsks
 = 0u;

532 
ts
 = 
	`OS_TS_GET
();

533 
p_≥nd_li°
->
NbrE¡rõs
 > (
OS_OBJ_QTY
)0u) {

534 
p_tcb
 = 
p_≥nd_li°
->
HódPå
->
TCBPå
;

535 
	`OS_PídAb‹t
((
OS_PEND_OBJ
 *)((*)
p_£m
),

536 
p_tcb
,

537 
ts
);

538 
nbr_èsks
++;

539 i‡(
›t
 !
OS_OPT_PEND_ABORT_ALL
) {

543 
	`OS_CRITICAL_EXIT_NO_SCHED
();

545 i‡((
›t
 & 
OS_OPT_POST_NO_SCHED
Ë=(
OS_OPT
)0u) {

546 
	`OSSched
();

549 *
p_îr
 = 
OS_ERR_NONE
;

550  (
nbr_èsks
);

551 
	}
}

584 
OS_SEM_CTR
 
	$OSSemPo°
 (
OS_SEM
 *
p_£m
,

585 
OS_OPT
 
›t
,

586 
OS_ERR
 *
p_îr
)

588 
OS_SEM_CTR
 
˘r
;

589 
CPU_TS
 
ts
;

593 #ifde‡
OS_SAFETY_CRITICAL


594 i‡(
p_îr
 =(
OS_ERR
 *)0) {

595 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

596  ((
OS_SEM_CTR
)0);

600 #i‡
OS_CFG_ARG_CHK_EN
 > 0u

601 i‡(
p_£m
 =(
OS_SEM
 *)0) {

602 *
p_îr
 = 
OS_ERR_OBJ_PTR_NULL
;

603  ((
OS_SEM_CTR
)0);

605 
›t
) {

606 
OS_OPT_POST_1
:

607 
OS_OPT_POST_ALL
:

608 
OS_OPT_POST_1
 | 
OS_OPT_POST_NO_SCHED
:

609 
OS_OPT_POST_ALL
 | 
OS_OPT_POST_NO_SCHED
:

613 *
p_îr
 = 
OS_ERR_OPT_INVALID
;

614  ((
OS_SEM_CTR
)0u);

618 #i‡
OS_CFG_OBJ_TYPE_CHK_EN
 > 0u

619 i‡(
p_£m
->
Ty≥
 !
OS_OBJ_TYPE_SEM
) {

620 *
p_îr
 = 
OS_ERR_OBJ_TYPE
;

621  ((
OS_SEM_CTR
)0);

625 
ts
 = 
	`OS_TS_GET
();

627 #i‡
OS_CFG_ISR_POST_DEFERRED_EN
 > 0u

628 i‡(
OSI¡Ne°ögCå
 > (
OS_NESTING_CTR
)0) {

629 
	`OS_I¡QPo°
((
OS_OBJ_TYPE
)
OS_OBJ_TYPE_SEM
,

630 (*)
p_£m
,

632 (
OS_MSG_SIZE
)0,

633 (
OS_FLAGS
 )0,

634 (
OS_OPT
 )
›t
,

635 (
CPU_TS
 )
ts
,

636 (
OS_ERR
 *)
p_îr
);

637  ((
OS_SEM_CTR
)0);

641 
˘r
 = 
	`OS_SemPo°
(
p_£m
,

642 
›t
,

643 
ts
,

644 
p_îr
);

646  (
˘r
);

647 
	}
}

675 #i‡
OS_CFG_SEM_SET_EN
 > 0u

676 
	$OSSemSë
 (
OS_SEM
 *
p_£m
,

677 
OS_SEM_CTR
 
˙t
,

678 
OS_ERR
 *
p_îr
)

680 
OS_PEND_LIST
 *
p_≥nd_li°
;

681 
	`CPU_SR_ALLOC
();

685 #ifde‡
OS_SAFETY_CRITICAL


686 i‡(
p_îr
 =(
OS_ERR
 *)0) {

687 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

692 #i‡
OS_CFG_CALLED_FROM_ISR_CHK_EN
 > 0u

693 i‡(
OSI¡Ne°ögCå
 > (
OS_NESTING_CTR
)0) {

694 *
p_îr
 = 
OS_ERR_SET_ISR
;

699 #i‡
OS_CFG_ARG_CHK_EN
 > 0u

700 i‡(
p_£m
 =(
OS_SEM
 *)0) {

701 *
p_îr
 = 
OS_ERR_OBJ_PTR_NULL
;

706 #i‡
OS_CFG_OBJ_TYPE_CHK_EN
 > 0u

707 i‡(
p_£m
->
Ty≥
 !
OS_OBJ_TYPE_SEM
) {

708 *
p_îr
 = 
OS_ERR_OBJ_TYPE
;

713 *
p_îr
 = 
OS_ERR_NONE
;

714 
	`CPU_CRITICAL_ENTER
();

715 i‡(
p_£m
->
Cå
 > (
OS_SEM_CTR
)0) {

716 
p_£m
->
Cå
 = 
˙t
;

718 
p_≥nd_li°
 = &
p_£m
->
PídLi°
;

719 i‡(
p_≥nd_li°
->
NbrE¡rõs
 =(
OS_OBJ_QTY
)0) {

720 
p_£m
->
Cå
 = 
˙t
;

722 *
p_îr
 = 
OS_ERR_TASK_WAITING
;

725 
	`CPU_CRITICAL_EXIT
();

726 
	}
}

746 
	$OS_SemCÃ
 (
OS_SEM
 *
p_£m
)

748 
p_£m
->
Ty≥
 = 
OS_OBJ_TYPE_NONE
;

749 
p_£m
->
Cå
 = (
OS_SEM_CTR
)0;

750 
p_£m
->
TS
 = (
CPU_TS
 )0;

751 
p_£m
->
NamePå
 = (
CPU_CHAR
 *)((*)"?SEM");

752 
	`OS_PídLi°Inô
(&
p_£m
->
PídLi°
);

753 
	}
}

771 #i‡
OS_CFG_DBG_EN
 > 0u

772 
	$OS_SemDbgLi°Add
 (
OS_SEM
 *
p_£m
)

774 
p_£m
->
DbgNamePå
 = (
CPU_CHAR
 *)((*)" ");

775 
p_£m
->
DbgPªvPå
 = (
OS_SEM
 *)0;

776 i‡(
OSSemDbgLi°På
 =(
OS_SEM
 *)0) {

777 
p_£m
->
DbgNextPå
 = (
OS_SEM
 *)0;

779 
p_£m
->
DbgNextPå
 = 
OSSemDbgLi°På
;

780 
OSSemDbgLi°På
->
DbgPªvPå
 = 
p_£m
;

782 
OSSemDbgLi°På
 = 
p_£m
;

783 
	}
}

787 
	$OS_SemDbgLi°Remove
 (
OS_SEM
 *
p_£m
)

789 
OS_SEM
 *
p_£m_√xt
;

790 
OS_SEM
 *
p_£m_¥ev
;

793 
p_£m_¥ev
 = 
p_£m
->
DbgPªvPå
;

794 
p_£m_√xt
 = 
p_£m
->
DbgNextPå
;

796 i‡(
p_£m_¥ev
 =(
OS_SEM
 *)0) {

797 
OSSemDbgLi°På
 = 
p_£m_√xt
;

798 i‡(
p_£m_√xt
 !(
OS_SEM
 *)0) {

799 
p_£m_√xt
->
DbgPªvPå
 = (
OS_SEM
 *)0;

801 
p_£m
->
DbgNextPå
 = (
OS_SEM
 *)0;

803 } i‡(
p_£m_√xt
 =(
OS_SEM
 *)0) {

804 
p_£m_¥ev
->
DbgNextPå
 = (
OS_SEM
 *)0;

805 
p_£m
->
DbgPªvPå
 = (
OS_SEM
 *)0;

808 
p_£m_¥ev
->
DbgNextPå
 = 
p_£m_√xt
;

809 
p_£m_√xt
->
DbgPªvPå
 = 
p_£m_¥ev
;

810 
p_£m
->
DbgNextPå
 = (
OS_SEM
 *)0;

811 
p_£m
->
DbgPªvPå
 = (
OS_SEM
 *)0;

813 
	}
}

834 
	$OS_SemInô
 (
OS_ERR
 *
p_îr
)

836 #ifde‡
OS_SAFETY_CRITICAL


837 i‡(
p_îr
 =(
OS_ERR
 *)0) {

838 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

843 #i‡
OS_CFG_DBG_EN
 > 0u

844 
OSSemDbgLi°På
 = (
OS_SEM
 *)0;

847 
OSSemQty
 = (
OS_OBJ_QTY
)0;

848 *
p_îr
 = 
OS_ERR_NONE
;

849 
	}
}

884 
OS_SEM_CTR
 
	$OS_SemPo°
 (
OS_SEM
 *
p_£m
,

885 
OS_OPT
 
›t
,

886 
CPU_TS
 
ts
,

887 
OS_ERR
 *
p_îr
)

889 
OS_OBJ_QTY
 
˙t
;

890 
OS_SEM_CTR
 
˘r
;

891 
OS_PEND_LIST
 *
p_≥nd_li°
;

892 
OS_PEND_DATA
 *
p_≥nd_d©a
;

893 
OS_PEND_DATA
 *
p_≥nd_d©a_√xt
;

894 
OS_TCB
 *
p_tcb
;

895 
	`CPU_SR_ALLOC
();

899 
	`CPU_CRITICAL_ENTER
();

900 
p_≥nd_li°
 = &
p_£m
->
PídLi°
;

901 i‡(
p_≥nd_li°
->
NbrE¡rõs
 =(
OS_OBJ_QTY
)0) {

902 (
OS_SEM_CTR
)) {

904 i‡(
p_£m
->
Cå
 =
DEF_INT_08U_MAX_VAL
) {

905 
	`CPU_CRITICAL_EXIT
();

906 *
p_îr
 = 
OS_ERR_SEM_OVF
;

907  ((
OS_SEM_CTR
)0);

912 i‡(
p_£m
->
Cå
 =
DEF_INT_16U_MAX_VAL
) {

913 
	`CPU_CRITICAL_EXIT
();

914 *
p_îr
 = 
OS_ERR_SEM_OVF
;

915  ((
OS_SEM_CTR
)0);

920 i‡(
p_£m
->
Cå
 =
DEF_INT_32U_MAX_VAL
) {

921 
	`CPU_CRITICAL_EXIT
();

922 *
p_îr
 = 
OS_ERR_SEM_OVF
;

923  ((
OS_SEM_CTR
)0);

930 
p_£m
->
Cå
++;

931 
˘r
 = 
p_£m
->
Cå
;

932 
p_£m
->
TS
 = 
ts
;

933 
	`CPU_CRITICAL_EXIT
();

934 *
p_îr
 = 
OS_ERR_NONE
;

935  (
˘r
);

938 
	`OS_CRITICAL_ENTER_CPU_CRITICAL_EXIT
();

939 i‡((
›t
 & 
OS_OPT_POST_ALL
Ë!(
OS_OPT
)0) {

940 
˙t
 = 
p_≥nd_li°
->
NbrE¡rõs
;

942 
˙t
 = (
OS_OBJ_QTY
)1;

944 
p_≥nd_d©a
 = 
p_≥nd_li°
->
HódPå
;

945 
˙t
 > 0u) {

946 
p_tcb
 = 
p_≥nd_d©a
->
TCBPå
;

947 
p_≥nd_d©a_√xt
 = 
p_≥nd_d©a
->
NextPå
;

948 
	`OS_Po°
((
OS_PEND_OBJ
 *)((*)
p_£m
),

949 
p_tcb
,

951 (
OS_MSG_SIZE
)0,

952 
ts
);

953 
p_≥nd_d©a
 = 
p_≥nd_d©a_√xt
;

954 
˙t
--;

956 
˘r
 = 
p_£m
->
Cå
;

957 
	`OS_CRITICAL_EXIT_NO_SCHED
();

958 i‡((
›t
 & 
OS_OPT_POST_NO_SCHED
Ë=(
OS_OPT
)0) {

959 
	`OSSched
();

961 *
p_îr
 = 
OS_ERR_NONE
;

962  (
˘r
);

963 
	}
}

	@Source/os_stat.c

33 
	#MICRIUM_SOURCE


	)

34 
	~<os.h
>

36 #ifde‡
VSC_INCLUDE_SOURCE_FILE_NAMES


37 c⁄° 
CPU_CHAR
 *
	gos_°©__c
 = "$Id: $";

41 #i‡
OS_CFG_STAT_TASK_EN
 > 0u

57 
	$OSSètRe£t
 (
OS_ERR
 *
p_îr
)

59 #i‡(
OS_CFG_DBG_EN
 > 0u)

60 
OS_TCB
 *
p_tcb
;

61 #i‡(
OS_MSG_EN
 > 0u)

62 
OS_MSG_Q
 *
p_msg_q
;

64 #i‡(
OS_CFG_Q_EN
 > 0u)

65 
OS_Q
 *
p_q
;

67 
	`CPU_SR_ALLOC
();

72 #ifde‡
OS_SAFETY_CRITICAL


73 i‡(
p_îr
 =(
OS_ERR
 *)0) {

74 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

79 
	`CPU_CRITICAL_ENTER
();

80 #i‡
OS_CFG_ISR_POST_DEFERRED_EN
 > 0u

81 
OSI¡QTaskTimeMax
 = (
CPU_TS
 )0;

82 
OSI¡QNbrE¡rõsMax
 = (
OS_OBJ_QTY
)0;

85 #i‡
OS_CFG_STAT_TASK_EN
 > 0u

86 
OSSètTaskCPUUßgeMax
 = 0u;

87 
OSSètTaskTimeMax
 = (
CPU_TS
)0;

90 
OSTickTaskTimeMax
 = (
CPU_TS
)0;

92 #i‡
OS_CFG_TMR_EN
 > 0u

93 
OSTmrTaskTimeMax
 = (
CPU_TS
)0;

96 #ifde‡
CPU_CFG_INT_DIS_MEAS_EN


97 
OSI¡DisTimeMax
 = (
CPU_TS
)0;

100 #i‡
OS_CFG_SCHED_LOCK_TIME_MEAS_EN
 > 0u

101 
OSSchedLockTimeMax
 = (
CPU_TS
)0;

104 #i‡
OS_MSG_EN
 > 0u

105 
OSMsgPoﬁ
.
NbrU£dMax
 = 0;

107 
	`CPU_CRITICAL_EXIT
();

109 #i‡
OS_CFG_DBG_EN
 > 0u

110 
	`CPU_CRITICAL_ENTER
();

111 
p_tcb
 = 
OSTaskDbgLi°På
;

112 
	`CPU_CRITICAL_EXIT
();

113 
p_tcb
 !(
OS_TCB
 *)0) {

114 
	`CPU_CRITICAL_ENTER
();

116 #ifde‡
CPU_CFG_INT_DIS_MEAS_EN


117 
p_tcb
->
I¡DisTimeMax
 = (
CPU_TS
 )0;

120 #i‡
OS_CFG_SCHED_LOCK_TIME_MEAS_EN
 > 0u

121 
p_tcb
->
SchedLockTimeMax
 = (
CPU_TS
 )0;

124 #i‡
OS_CFG_TASK_PROFILE_EN
 > 0u

125 #i‡
OS_CFG_TASK_Q_EN
 > 0u

126 
p_tcb
->
MsgQPídTimeMax
 = (
CPU_TS
 )0;

128 
p_tcb
->
SemPídTimeMax
 = (
CPU_TS
 )0;

129 
p_tcb
->
CtxSwCå
 = (
OS_CTR
 )0;

130 
p_tcb
->
CPUUßge
 = (
OS_CPU_USAGE
)0;

131 
p_tcb
->
CPUUßgeMax
 = (
OS_CPU_USAGE
)0;

132 
p_tcb
->
Cy˛esTŸÆ
 = (
OS_CYCLES
 )0;

133 
p_tcb
->
Cy˛esTŸÆPªv
 = (
OS_CYCLES
 )0;

134 
p_tcb
->
Cy˛esSèπ
 = 
	`OS_TS_GET
();

137 #i‡
OS_CFG_TASK_Q_EN
 > 0u

138 
p_msg_q
 = &
p_tcb
->
MsgQ
;

139 
p_msg_q
->
NbrE¡rõsMax
 = (
OS_MSG_QTY
 )0;

141 
p_tcb
 =Ö_tcb->
DbgNextPå
;

142 
	`CPU_CRITICAL_EXIT
();

146 #i‡(
OS_CFG_Q_EN
 > 0uË&& (
OS_CFG_DBG_EN
 > 0u)

147 
	`CPU_CRITICAL_ENTER
();

148 
p_q
 = 
OSQDbgLi°På
;

149 
	`CPU_CRITICAL_EXIT
();

150 
p_q
 !(
OS_Q
 *)0) {

151 
	`CPU_CRITICAL_ENTER
();

152 
p_msg_q
 = &
p_q
->
MsgQ
;

153 
p_msg_q
->
NbrE¡rõsMax
 = (
OS_MSG_QTY
)0;

154 
p_q
 =Ö_q->
DbgNextPå
;

155 
	`CPU_CRITICAL_EXIT
();

159 
	`OS_TickLi°Re£tPók
();

161 #i‡
OS_CFG_TMR_EN
 > 0u

162 
	`OS_TmrRe£tPók
();

166 *
p_îr
 = 
OS_ERR_NONE
;

167 
	}
}

191 
	$OSSètTaskCPUUßgeInô
 (
OS_ERR
 *
p_îr
)

193 
OS_ERR
 
îr
;

194 
OS_TICK
 
dly
;

195 
	`CPU_SR_ALLOC
();

199 #ifde‡
OS_SAFETY_CRITICAL


200 i‡(
p_îr
 =(
OS_ERR
 *)0) {

201 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

206 #i‡(
OS_CFG_TMR_EN
 > 0u)

207 
	`OSTaskSu•íd
(&
OSTmrTaskTCB
, &
îr
);

208 i‡(
îr
 !
OS_ERR_NONE
) {

209 *
p_îr
 = 
îr
;

214 
	`OSTimeDly
((
OS_TICK
 )2,

215 (
OS_OPT
 )
OS_OPT_TIME_DLY
,

216 (
OS_ERR
 *)&
îr
);

217 i‡(
îr
 !
OS_ERR_NONE
) {

218 *
p_îr
 = 
îr
;

221 
	`CPU_CRITICAL_ENTER
();

222 
OSSètTaskCå
 = (
OS_TICK
)0;

223 
	`CPU_CRITICAL_EXIT
();

225 
dly
 = (
OS_TICK
)0;

226 i‡(
OSCfg_TickR©e_Hz
 > 
OSCfg_SètTaskR©e_Hz
) {

227 
dly
 = (
OS_TICK
)(
OSCfg_TickR©e_Hz
 / 
OSCfg_SètTaskR©e_Hz
);

229 i‡(
dly
 =(
OS_TICK
)0) {

230 
dly
 = (
OS_TICK
)(
OSCfg_TickR©e_Hz
 / (
OS_RATE_HZ
)10);

233 
	`OSTimeDly
(
dly
,

234 
OS_OPT_TIME_DLY
,

235 &
îr
);

237 #i‡(
OS_CFG_TMR_EN
 > 0u)

238 
	`OSTaskResume
(&
OSTmrTaskTCB
, &
îr
);

239 i‡(
îr
 !
OS_ERR_NONE
) {

240 *
p_îr
 = 
îr
;

245 
	`CPU_CRITICAL_ENTER
();

246 
OSSètTaskTimeMax
 = (
CPU_TS
)0;

248 
OSSètTaskCåMax
 = 
OSSètTaskCå
;

249 
OSSètTaskRdy
 = 
OS_STATE_RDY
;

250 
	`CPU_CRITICAL_EXIT
();

251 *
p_îr
 = 
OS_ERR_NONE
;

252 
	}
}

281 
	$OS_SètTask
 (*
p_¨g
)

283 #i‡
OS_CFG_DBG_EN
 > 0u

284 #i‡
OS_CFG_TASK_PROFILE_EN
 > 0u

285 
OS_CPU_USAGE
 
ußge
;

286 
OS_CYCLES
 
cy˛es_tŸÆ
;

287 
OS_CYCLES
 
cy˛es_div
;

288 
OS_CYCLES
 
cy˛es_mu…
;

289 
OS_CYCLES
 
cy˛es_max
;

291 
OS_TCB
 *
p_tcb
;

293 
OS_TICK
 
˘r_max
;

294 
OS_TICK
 
˘r_mu…
;

295 
OS_TICK
 
˘r_div
;

296 
OS_ERR
 
îr
;

297 
OS_TICK
 
dly
;

298 
CPU_TS
 
ts_°¨t
;

299 
CPU_TS
 
ts_íd
;

300 
	`CPU_SR_ALLOC
();

304 
p_¨g
 =Ö_arg;

305 
OSSètTaskRdy
 !
DEF_TRUE
) {

306 
	`OSTimeDly
(2u * 
OSCfg_SètTaskR©e_Hz
,

307 
OS_OPT_TIME_DLY
,

308 &
îr
);

310 
	`OSSètRe£t
(&
îr
);

312 
dly
 = (
OS_TICK
)0;

313 i‡(
OSCfg_TickR©e_Hz
 > 
OSCfg_SètTaskR©e_Hz
) {

314 
dly
 = (
OS_TICK
)(
OSCfg_TickR©e_Hz
 / 
OSCfg_SètTaskR©e_Hz
);

316 i‡(
dly
 =(
OS_TICK
)0) {

317 
dly
 = (
OS_TICK
)(
OSCfg_TickR©e_Hz
 / (
OS_RATE_HZ
)10);

320 
DEF_ON
) {

321 
ts_°¨t
 = 
	`OS_TS_GET
();

322 #ifde‡ 
CPU_CFG_INT_DIS_MEAS_EN


323 
OSI¡DisTimeMax
 = 
	`CPU_I¡DisMósMaxGë
();

326 
	`CPU_CRITICAL_ENTER
();

327 
OSSètTaskCåRun
 = 
OSSètTaskCå
;

328 
OSSètTaskCå
 = (
OS_TICK
)0;

329 
	`CPU_CRITICAL_EXIT
();

331 i‡(
OSSètTaskCåMax
 > 
OSSètTaskCåRun
) {

332 i‡(
OSSètTaskCåMax
 < 400000u) {

333 
˘r_mu…
 = 10000u;

334 
˘r_div
 = 1u;

335 } i‡(
OSSètTaskCåMax
 < 4000000u) {

336 
˘r_mu…
 = 1000u;

337 
˘r_div
 = 10u;

338 } i‡(
OSSètTaskCåMax
 < 40000000u) {

339 
˘r_mu…
 = 100u;

340 
˘r_div
 = 100u;

341 } i‡(
OSSètTaskCåMax
 < 400000000u) {

342 
˘r_mu…
 = 10u;

343 
˘r_div
 = 1000u;

345 
˘r_mu…
 = 1u;

346 
˘r_div
 = 10000u;

348 
˘r_max
 = 
OSSètTaskCåMax
 / 
˘r_div
;

349 
OSSètTaskCPUUßge
 = (
OS_CPU_USAGE
)((
OS_TICK
)10000u - 
˘r_mu…
 * 
OSSètTaskCåRun
 / 
˘r_max
);

350 i‡(
OSSètTaskCPUUßgeMax
 < 
OSSètTaskCPUUßge
) {

351 
OSSètTaskCPUUßgeMax
 = 
OSSètTaskCPUUßge
;

354 
OSSètTaskCPUUßge
 = (
OS_CPU_USAGE
)10000u;

357 
	`OSSètTaskHook
();

360 #i‡
OS_CFG_DBG_EN
 > 0u

361 #i‡
OS_CFG_TASK_PROFILE_EN
 > 0u

362 
cy˛es_tŸÆ
 = (
OS_CYCLES
)0;

364 
	`CPU_CRITICAL_ENTER
();

365 
p_tcb
 = 
OSTaskDbgLi°På
;

366 
	`CPU_CRITICAL_EXIT
();

367 
p_tcb
 !(
OS_TCB
 *)0) {

368 
	`OS_CRITICAL_ENTER
();

369 
p_tcb
->
Cy˛esTŸÆPªv
 =Ö_tcb->
Cy˛esTŸÆ
;

370 
p_tcb
->
Cy˛esTŸÆ
 = (
OS_CYCLES
)0;

371 
	`OS_CRITICAL_EXIT
();

373 
cy˛es_tŸÆ
 +
p_tcb
->
Cy˛esTŸÆPªv
;

375 
	`CPU_CRITICAL_ENTER
();

376 
p_tcb
 =Ö_tcb->
DbgNextPå
;

377 
	`CPU_CRITICAL_EXIT
();

382 #i‡
OS_CFG_TASK_PROFILE_EN
 > 0u

384 i‡(
cy˛es_tŸÆ
 > (
OS_CYCLES
)0u) {

385 i‡(
cy˛es_tŸÆ
 < 400000u) {

386 
cy˛es_mu…
 = 10000u;

387 
cy˛es_div
 = 1u;

388 } i‡(
cy˛es_tŸÆ
 < 4000000u) {

389 
cy˛es_mu…
 = 1000u;

390 
cy˛es_div
 = 10u;

391 } i‡(
cy˛es_tŸÆ
 < 40000000u) {

392 
cy˛es_mu…
 = 100u;

393 
cy˛es_div
 = 100u;

394 } i‡(
cy˛es_tŸÆ
 < 400000000u) {

395 
cy˛es_mu…
 = 10u;

396 
cy˛es_div
 = 1000u;

398 
cy˛es_mu…
 = 1u;

399 
cy˛es_div
 = 10000u;

401 
cy˛es_max
 = 
cy˛es_tŸÆ
 / 
cy˛es_div
;

403 
cy˛es_mu…
 = 0u;

404 
cy˛es_max
 = 1u;

407 
	`CPU_CRITICAL_ENTER
();

408 
p_tcb
 = 
OSTaskDbgLi°På
;

409 
	`CPU_CRITICAL_EXIT
();

410 
p_tcb
 !(
OS_TCB
 *)0) {

411 #i‡
OS_CFG_TASK_PROFILE_EN
 > 0u

412 
ußge
 = (
OS_CPU_USAGE
)(
cy˛es_mu…
 * 
p_tcb
->
Cy˛esTŸÆPªv
 / 
cy˛es_max
);

413 i‡(
ußge
 > 10000u) {

414 
ußge
 = 10000u;

416 
p_tcb
->
CPUUßge
 = 
ußge
;

417 i‡(
p_tcb
->
CPUUßgeMax
 < 
ußge
) {

418 
p_tcb
->
CPUUßgeMax
 = 
ußge
;

422 #i‡
OS_CFG_STAT_TASK_STK_CHK_EN
 > 0u

423 
	`OSTaskStkChk
–
p_tcb
,

424 &
p_tcb
->
StkFªe
,

425 &
p_tcb
->
StkU£d
,

426 &
îr
);

429 
	`CPU_CRITICAL_ENTER
();

430 
p_tcb
 =Ö_tcb->
DbgNextPå
;

431 
	`CPU_CRITICAL_EXIT
();

435 i‡(
OSSètRe£tFœg
 =
DEF_TRUE
) {

436 
OSSètRe£tFœg
 = 
DEF_FALSE
;

437 
	`OSSètRe£t
(&
îr
);

440 
ts_íd
 = 
	`OS_TS_GET
(Ë- 
ts_°¨t
;

441 i‡(
OSSètTaskTimeMax
 < 
ts_íd
) {

442 
OSSètTaskTimeMax
 = 
ts_íd
;

445 
	`OSTimeDly
(
dly
,

446 
OS_OPT_TIME_DLY
,

447 &
îr
);

449 
	}
}

472 
	$OS_SètTaskInô
 (
OS_ERR
 *
p_îr
)

474 #ifde‡
OS_SAFETY_CRITICAL


475 i‡(
p_îr
 =(
OS_ERR
 *)0) {

476 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

481 
OSSètTaskCå
 = (
OS_TICK
)0;

482 
OSSètTaskCåRun
 = (
OS_TICK
)0;

483 
OSSètTaskCåMax
 = (
OS_TICK
)0;

484 
OSSètTaskRdy
 = 
OS_STATE_NOT_RDY
;

485 
OSSètRe£tFœg
 = 
DEF_FALSE
;

488 i‡(
OSCfg_SètTaskStkBa£På
 =(
CPU_STK
 *)0) {

489 *
p_îr
 = 
OS_ERR_STAT_STK_INVALID
;

493 i‡(
OSCfg_SètTaskStkSize
 < 
OSCfg_StkSizeMö
) {

494 *
p_îr
 = 
OS_ERR_STAT_STK_SIZE_INVALID
;

498 i‡(
OSCfg_SètTaskPrio
 >(
OS_CFG_PRIO_MAX
 - 1u)) {

499 *
p_îr
 = 
OS_ERR_STAT_PRIO_INVALID
;

503 
	`OSTaskCª©e
((
OS_TCB
 *)&
OSSètTaskTCB
,

504 (
CPU_CHAR
 *)((*)"uC/OS-III Stat Task"),

505 (
OS_TASK_PTR
 )
OS_SètTask
,

507 (
OS_PRIO
 )
OSCfg_SètTaskPrio
,

508 (
CPU_STK
 *)
OSCfg_SètTaskStkBa£På
,

509 (
CPU_STK_SIZE
)
OSCfg_SètTaskStkLimô
,

510 (
CPU_STK_SIZE
)
OSCfg_SètTaskStkSize
,

511 (
OS_MSG_QTY
 )0,

512 (
OS_TICK
 )0,

514 (
OS_OPT
 )(
OS_OPT_TASK_STK_CHK
 | 
OS_OPT_TASK_STK_CLR
),

515 (
OS_ERR
 *)
p_îr
);

516 
	}
}

	@Source/os_task.c

33 
	#MICRIUM_SOURCE


	)

34 
	~<os.h
>

36 #ifde‡
VSC_INCLUDE_SOURCE_FILE_NAMES


37 c⁄° 
CPU_CHAR
 *
	gos_èsk__c
 = "$Id: $";

61 #i‡
OS_CFG_TASK_CHANGE_PRIO_EN
 > 0u

62 
	$OSTaskCh™gePrio
 (
OS_TCB
 *
p_tcb
,

63 
OS_PRIO
 
¥io_√w
,

64 
OS_ERR
 *
p_îr
)

66 
CPU_BOOLEAN
 
£lf
;

67 
	`CPU_SR_ALLOC
();

71 #ifde‡
OS_SAFETY_CRITICAL


72 i‡(
p_îr
 =(
OS_ERR
 *)0) {

73 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

78 #i‡
OS_CFG_CALLED_FROM_ISR_CHK_EN
 > 0u

79 i‡(
OSI¡Ne°ögCå
 > (
OS_NESTING_CTR
)0) {

80 *
p_îr
 = 
OS_ERR_TASK_CHANGE_PRIO_ISR
;

85 #i‡
OS_CFG_ISR_POST_DEFERRED_EN
 > 0u

86 i‡(
¥io_√w
 == 0) {

87 *
p_îr
 = 
OS_ERR_PRIO_INVALID
;

92 i‡(
¥io_√w
 >(
OS_CFG_PRIO_MAX
 - 1u)) {

93 *
p_îr
 = 
OS_ERR_PRIO_INVALID
;

97 i‡(
p_tcb
 =(
OS_TCB
 *)0) {

98 
	`CPU_CRITICAL_ENTER
();

99 
p_tcb
 = 
OSTCBCurPå
;

100 
	`CPU_CRITICAL_EXIT
();

101 
£lf
 = 
DEF_TRUE
;

103 
£lf
 = 
DEF_FALSE
;

106 
	`OS_CRITICAL_ENTER
();

107 
p_tcb
->
TaskSèã
) {

108 
OS_TASK_STATE_RDY
:

109 
	`OS_RdyLi°Remove
(
p_tcb
);

110 
p_tcb
->
Prio
 = 
¥io_√w
;

111 
	`OS_PrioIn£π
(
p_tcb
->
Prio
);

112 i‡(
£lf
 =
DEF_TRUE
) {

113 
	`OS_RdyLi°In£πHód
(
p_tcb
);

115 
	`OS_RdyLi°In£πTaû
(
p_tcb
);

119 
OS_TASK_STATE_DLY
:

120 
OS_TASK_STATE_SUSPENDED
:

121 
OS_TASK_STATE_DLY_SUSPENDED
:

122 
p_tcb
->
Prio
 = 
¥io_√w
;

125 
OS_TASK_STATE_PEND
:

126 
OS_TASK_STATE_PEND_TIMEOUT
:

127 
OS_TASK_STATE_PEND_SUSPENDED
:

128 
OS_TASK_STATE_PEND_TIMEOUT_SUSPENDED
:

129 
p_tcb
->
PídOn
) {

130 
OS_TASK_PEND_ON_TASK_Q
:

131 
OS_TASK_PEND_ON_TASK_SEM
:

132 
OS_TASK_PEND_ON_FLAG
:

133 
p_tcb
->
Prio
 = 
¥io_√w
;

136 
OS_TASK_PEND_ON_MUTEX
:

137 
OS_TASK_PEND_ON_MULTI
:

138 
OS_TASK_PEND_ON_Q
:

139 
OS_TASK_PEND_ON_SEM
:

140 
	`OS_PídLi°Ch™gePrio
(
p_tcb
,

141 
¥io_√w
);

150 
	`OS_CRITICAL_EXIT
();

151 *
p_îr
 = 
OS_ERR_STATE_INVALID
;

155 
	`OS_CRITICAL_EXIT_NO_SCHED
();

157 
	`OSSched
();

159 *
p_îr
 = 
OS_ERR_NONE
;

160 
	}
}

249 
	$OSTaskCª©e
 (
OS_TCB
 *
p_tcb
,

250 
CPU_CHAR
 *
p_«me
,

251 
OS_TASK_PTR
 
p_èsk
,

252 *
p_¨g
,

253 
OS_PRIO
 
¥io
,

254 
CPU_STK
 *
p_°k_ba£
,

255 
CPU_STK_SIZE
 
°k_limô
,

256 
CPU_STK_SIZE
 
°k_size
,

257 
OS_MSG_QTY
 
q_size
,

258 
OS_TICK
 
time_qu™è
,

259 *
p_ext
,

260 
OS_OPT
 
›t
,

261 
OS_ERR
 *
p_îr
)

263 
CPU_STK_SIZE
 
i
;

264 #i‡
OS_CFG_TASK_REG_TBL_SIZE
 > 0u

265 
OS_REG_ID
 
ªg_nbr
;

267 #i‡
	`deföed
(
OS_CFG_TLS_TBL_SIZE
) && (OS_CFG_TLS_TBL_SIZE > 0u)

268 
OS_TLS_ID
 
id
;

271 
CPU_STK
 *
p_•
;

272 
CPU_STK
 *
p_°k_limô
;

273 
	`CPU_SR_ALLOC
();

277 #ifde‡
OS_SAFETY_CRITICAL


278 i‡(
p_îr
 =(
OS_ERR
 *)0) {

279 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

284 #ifde‡
OS_SAFETY_CRITICAL_IEC61508


285 i‡(
OSSa„tyCrôiˇlSèπFœg
 =
DEF_TRUE
) {

286 *
p_îr
 = 
OS_ERR_ILLEGAL_CREATE_RUN_TIME
;

291 #i‡
OS_CFG_CALLED_FROM_ISR_CHK_EN
 > 0u

292 i‡(
OSI¡Ne°ögCå
 > (
OS_NESTING_CTR
)0) {

293 *
p_îr
 = 
OS_ERR_TASK_CREATE_ISR
;

298 #i‡
OS_CFG_ARG_CHK_EN
 > 0u

299 i‡(
p_tcb
 =(
OS_TCB
 *)0) {

300 *
p_îr
 = 
OS_ERR_TCB_INVALID
;

303 i‡(
p_èsk
 =(
OS_TASK_PTR
)0) {

304 *
p_îr
 = 
OS_ERR_TASK_INVALID
;

307 i‡(
p_°k_ba£
 =(
CPU_STK
 *)0) {

308 *
p_îr
 = 
OS_ERR_STK_INVALID
;

311 i‡(
°k_size
 < 
OSCfg_StkSizeMö
) {

312 *
p_îr
 = 
OS_ERR_STK_SIZE_INVALID
;

315 i‡(
°k_limô
 >
°k_size
) {

316 *
p_îr
 = 
OS_ERR_STK_LIMIT_INVALID
;

319 i‡(
¥io
 >
OS_CFG_PRIO_MAX
) {

320 *
p_îr
 = 
OS_ERR_PRIO_INVALID
;

325 #i‡
OS_CFG_ISR_POST_DEFERRED_EN
 > 0u

326 i‡(
¥io
 =(
OS_PRIO
)0) {

327 i‡(
p_tcb
 !&
OSI¡QTaskTCB
) {

328 *
p_îr
 = 
OS_ERR_PRIO_INVALID
;

334 i‡(
¥io
 =(
OS_CFG_PRIO_MAX
 - 1u)) {

335 i‡(
p_tcb
 !&
OSIdÀTaskTCB
) {

336 *
p_îr
 = 
OS_ERR_PRIO_INVALID
;

341 
	`OS_TaskInôTCB
(
p_tcb
);

343 *
p_îr
 = 
OS_ERR_NONE
;

345 i‡((
›t
 & 
OS_OPT_TASK_STK_CHK
Ë!(
OS_OPT
)0) {

346 i‡((
›t
 & 
OS_OPT_TASK_STK_CLR
Ë!(
OS_OPT
)0) {

347 
p_•
 = 
p_°k_ba£
;

348 
i
 = 0u; i < 
°k_size
; i++) {

349 *
p_•
 = (
CPU_STK
)0;

350 
p_•
++;

355 #i‡(
CPU_CFG_STK_GROWTH
 =
CPU_STK_GROWTH_HI_TO_LO
)

356 
p_°k_limô
 = 
p_°k_ba£
 + 
°k_limô
;

358 
p_°k_limô
 = 
p_°k_ba£
 + (
°k_size
 - 1uË- 
°k_limô
;

361 
p_•
 = 
	`OSTaskStkInô
(
p_èsk
,

362 
p_¨g
,

363 
p_°k_ba£
,

364 
p_°k_limô
,

365 
°k_size
,

366 
›t
);

369 
p_tcb
->
TaskE¡ryAddr
 = 
p_èsk
;

370 
p_tcb
->
TaskE¡ryArg
 = 
p_¨g
;

372 
p_tcb
->
NamePå
 = 
p_«me
;

374 
p_tcb
->
Prio
 = 
¥io
;

376 
p_tcb
->
StkPå
 = 
p_•
;

377 
p_tcb
->
StkLimôPå
 = 
p_°k_limô
;

379 
p_tcb
->
TimeQu™è
 = 
time_qu™è
;

380 #i‡
OS_CFG_SCHED_ROUND_ROBIN_EN
 > 0u

381 i‡(
time_qu™è
 =(
OS_TICK
)0) {

382 
p_tcb
->
TimeQu™èCå
 = 
OSSchedRoundRoböDÊtTimeQu™è
;

384 
p_tcb
->
TimeQu™èCå
 = 
time_qu™è
;

387 
p_tcb
->
ExtPå
 = 
p_ext
;

388 
p_tcb
->
StkBa£På
 = 
p_°k_ba£
;

389 
p_tcb
->
StkSize
 = 
°k_size
;

390 
p_tcb
->
O±
 = 
›t
;

392 #i‡
OS_CFG_TASK_REG_TBL_SIZE
 > 0u

393 
ªg_nbr
 = 0u;Ñeg_nb∏< 
OS_CFG_TASK_REG_TBL_SIZE
;Ñeg_nbr++) {

394 
p_tcb
->
RegTbl
[
ªg_nbr
] = (
OS_REG
)0;

398 #i‡
OS_CFG_TASK_Q_EN
 > 0u

399 
	`OS_MsgQInô
(&
p_tcb
->
MsgQ
,

400 
q_size
);

402 ()&
q_size
;

405 
	`OSTaskCª©eHook
(
p_tcb
);

407 #i‡
	`deföed
(
OS_CFG_TLS_TBL_SIZE
) && (OS_CFG_TLS_TBL_SIZE > 0u)

408 
id
 = 0u; id < 
OS_CFG_TLS_TBL_SIZE
; id++) {

409 
p_tcb
->
TLS_Tbl
[
id
] = (
OS_TLS
)0;

411 
	`OS_TLS_TaskCª©e
(
p_tcb
);

414 
	`OS_CRITICAL_ENTER
();

415 
	`OS_PrioIn£π
(
p_tcb
->
Prio
);

416 
	`OS_RdyLi°In£πTaû
(
p_tcb
);

418 #i‡
OS_CFG_DBG_EN
 > 0u

419 
	`OS_TaskDbgLi°Add
(
p_tcb
);

422 
OSTaskQty
++;

424 i‡(
OSRu¬ög
 !
OS_STATE_OS_RUNNING
) {

425 
	`OS_CRITICAL_EXIT
();

429 
	`OS_CRITICAL_EXIT_NO_SCHED
();

431 
	`OSSched
();

432 
	}
}

459 #i‡
OS_CFG_TASK_DEL_EN
 > 0u

460 
	$OSTaskDñ
 (
OS_TCB
 *
p_tcb
,

461 
OS_ERR
 *
p_îr
)

463 
	`CPU_SR_ALLOC
();

467 #ifde‡
OS_SAFETY_CRITICAL


468 i‡(
p_îr
 =(
OS_ERR
 *)0) {

469 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

474 #i‡
OS_CFG_CALLED_FROM_ISR_CHK_EN
 > 0u

475 i‡(
OSI¡Ne°ögCå
 > (
OS_NESTING_CTR
)0) {

476 *
p_îr
 = 
OS_ERR_TASK_DEL_ISR
;

481 i‡(
p_tcb
 =&
OSIdÀTaskTCB
) {

482 *
p_îr
 = 
OS_ERR_TASK_DEL_IDLE
;

486 #i‡
OS_CFG_ISR_POST_DEFERRED_EN
 > 0u

487 i‡(
p_tcb
 =&
OSI¡QTaskTCB
) {

488 *
p_îr
 = 
OS_ERR_TASK_DEL_INVALID
;

493 i‡(
p_tcb
 =(
OS_TCB
 *)0) {

494 
	`CPU_CRITICAL_ENTER
();

495 
p_tcb
 = 
OSTCBCurPå
;

496 
	`CPU_CRITICAL_EXIT
();

499 
	`OS_CRITICAL_ENTER
();

500 
p_tcb
->
TaskSèã
) {

501 
OS_TASK_STATE_RDY
:

502 
	`OS_RdyLi°Remove
(
p_tcb
);

505 
OS_TASK_STATE_SUSPENDED
:

508 
OS_TASK_STATE_DLY
:

509 
OS_TASK_STATE_DLY_SUSPENDED
:

510 
	`OS_TickLi°Remove
(
p_tcb
);

513 
OS_TASK_STATE_PEND
:

514 
OS_TASK_STATE_PEND_SUSPENDED
:

515 
OS_TASK_STATE_PEND_TIMEOUT
:

516 
OS_TASK_STATE_PEND_TIMEOUT_SUSPENDED
:

517 
	`OS_TickLi°Remove
(
p_tcb
);

518 
p_tcb
->
PídOn
) {

519 
OS_TASK_PEND_ON_NOTHING
:

520 
OS_TASK_PEND_ON_TASK_Q
:

521 
OS_TASK_PEND_ON_TASK_SEM
:

524 
OS_TASK_PEND_ON_FLAG
:

525 
OS_TASK_PEND_ON_MULTI
:

526 
OS_TASK_PEND_ON_MUTEX
:

527 
OS_TASK_PEND_ON_Q
:

528 
OS_TASK_PEND_ON_SEM
:

529 
	`OS_PídLi°Remove
(
p_tcb
);

538 
	`OS_CRITICAL_EXIT
();

539 *
p_îr
 = 
OS_ERR_STATE_INVALID
;

543 #i‡
OS_CFG_TASK_Q_EN
 > 0u

544 ()
	`OS_MsgQFªeAŒ
(&
p_tcb
->
MsgQ
);

547 
	`OSTaskDñHook
(
p_tcb
);

549 #i‡
	`deföed
(
OS_CFG_TLS_TBL_SIZE
) && (OS_CFG_TLS_TBL_SIZE > 0u)

550 
	`OS_TLS_TaskDñ
(
p_tcb
);

553 #i‡
OS_CFG_DBG_EN
 > 0u

554 
	`OS_TaskDbgLi°Remove
(
p_tcb
);

556 
OSTaskQty
--;

558 
	`OS_TaskInôTCB
(
p_tcb
);

559 
p_tcb
->
TaskSèã
 = (
OS_STATE
)
OS_TASK_STATE_DEL
;

561 
	`OS_CRITICAL_EXIT_NO_SCHED
();

563 *
p_îr
 = 
OS_ERR_NONE
;

565 
	`OSSched
();

566 
	}
}

593 #i‡
OS_CFG_TASK_Q_EN
 > 0u

594 
OS_MSG_QTY
 
	$OSTaskQFlush
 (
OS_TCB
 *
p_tcb
,

595 
OS_ERR
 *
p_îr
)

597 
OS_MSG_QTY
 
íåõs
;

598 
	`CPU_SR_ALLOC
();

602 #ifde‡
OS_SAFETY_CRITICAL


603 i‡(
p_îr
 =(
OS_ERR
 *)0) {

604 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

605  ((
OS_MSG_QTY
)0);

609 #i‡
OS_CFG_CALLED_FROM_ISR_CHK_EN
 > 0u

610 i‡(
OSI¡Ne°ögCå
 > (
OS_NESTING_CTR
)0) {

611 *
p_îr
 = 
OS_ERR_FLUSH_ISR
;

612  ((
OS_MSG_QTY
)0);

616 i‡(
p_tcb
 =(
OS_TCB
 *)0) {

617 
	`CPU_CRITICAL_ENTER
();

618 
p_tcb
 = 
OSTCBCurPå
;

619 
	`CPU_CRITICAL_EXIT
();

622 
	`OS_CRITICAL_ENTER
();

623 
íåõs
 = 
	`OS_MsgQFªeAŒ
(&
p_tcb
->
MsgQ
);

624 
	`OS_CRITICAL_EXIT
();

625 *
p_îr
 = 
OS_ERR_NONE
;

626  (
íåõs
);

627 
	}
}

671 #i‡
OS_CFG_TASK_Q_EN
 > 0u

672 *
	$OSTaskQPíd
 (
OS_TICK
 
timeout
,

673 
OS_OPT
 
›t
,

674 
OS_MSG_SIZE
 *
p_msg_size
,

675 
CPU_TS
 *
p_ts
,

676 
OS_ERR
 *
p_îr
)

678 
OS_MSG_Q
 *
p_msg_q
;

679 *
p_void
;

680 
	`CPU_SR_ALLOC
();

684 #ifde‡
OS_SAFETY_CRITICAL


685 i‡(
p_îr
 =(
OS_ERR
 *)0) {

686 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

691 #i‡
OS_CFG_CALLED_FROM_ISR_CHK_EN
 > 0u

692 i‡(
OSI¡Ne°ögCå
 > (
OS_NESTING_CTR
)0) {

693 *
p_îr
 = 
OS_ERR_PEND_ISR
;

698 #i‡
OS_CFG_ARG_CHK_EN
 > 0u

699 i‡(
p_msg_size
 =(
OS_MSG_SIZE
 *)0) {

700 *
p_îr
 = 
OS_ERR_PTR_INVALID
;

703 
›t
) {

704 
OS_OPT_PEND_BLOCKING
:

705 
OS_OPT_PEND_NON_BLOCKING
:

709 *
p_îr
 = 
OS_ERR_OPT_INVALID
;

714 i‡(
p_ts
 !(
CPU_TS
 *)0) {

715 *
p_ts
 = (
CPU_TS
 )0;

718 
	`CPU_CRITICAL_ENTER
();

719 
p_msg_q
 = &
OSTCBCurPå
->
MsgQ
;

720 
p_void
 = 
	`OS_MsgQGë
(
p_msg_q
,

721 
p_msg_size
,

722 
p_ts
,

723 
p_îr
);

724 i‡(*
p_îr
 =
OS_ERR_NONE
) {

725 #i‡
OS_CFG_TASK_PROFILE_EN
 > 0u

726 i‡(
p_ts
 !(
CPU_TS
 *)0) {

727 
OSTCBCurPå
->
MsgQPídTime
 = 
	`OS_TS_GET
(Ë- *
p_ts
;

728 i‡(
OSTCBCurPå
->
MsgQPídTimeMax
 < OSTCBCurPå->
MsgQPídTime
) {

729 
OSTCBCurPå
->
MsgQPídTimeMax
 = OSTCBCurPå->
MsgQPídTime
;

733 
	`CPU_CRITICAL_EXIT
();

734  (
p_void
);

737 i‡((
›t
 & 
OS_OPT_PEND_NON_BLOCKING
Ë!(
OS_OPT
)0) {

738 *
p_îr
 = 
OS_ERR_PEND_WOULD_BLOCK
;

739 
	`CPU_CRITICAL_EXIT
();

742 i‡(
OSSchedLockNe°ögCå
 > (
OS_NESTING_CTR
)0) {

743 
	`CPU_CRITICAL_EXIT
();

744 *
p_îr
 = 
OS_ERR_SCHED_LOCKED
;

749 
	`OS_CRITICAL_ENTER_CPU_CRITICAL_EXIT
();

750 
	`OS_Píd
((
OS_PEND_DATA
 *)0,

751 (
OS_PEND_OBJ
 *)0,

752 (
OS_STATE
 )
OS_TASK_PEND_ON_TASK_Q
,

753 (
OS_TICK
 )
timeout
);

754 
	`OS_CRITICAL_EXIT_NO_SCHED
();

756 
	`OSSched
();

758 
	`CPU_CRITICAL_ENTER
();

759 
OSTCBCurPå
->
PídSètus
) {

760 
OS_STATUS_PEND_OK
:

761 
p_void
 = 
OSTCBCurPå
->
MsgPå
;

762 *
p_msg_size
 = 
OSTCBCurPå
->
MsgSize
;

763 i‡(
p_ts
 !(
CPU_TS
 *)0) {

764 *
p_ts
 = 
OSTCBCurPå
->
TS
;

765 #i‡
OS_CFG_TASK_PROFILE_EN
 > 0u

766 
OSTCBCurPå
->
MsgQPídTime
 = 
	`OS_TS_GET
(Ë- OSTCBCurPå->
TS
;

767 i‡(
OSTCBCurPå
->
MsgQPídTimeMax
 < OSTCBCurPå->
MsgQPídTime
) {

768 
OSTCBCurPå
->
MsgQPídTimeMax
 = OSTCBCurPå->
MsgQPídTime
;

772 *
p_îr
 = 
OS_ERR_NONE
;

775 
OS_STATUS_PEND_ABORT
:

776 
p_void
 = (*)0;

777 *
p_msg_size
 = (
OS_MSG_SIZE
)0;

778 i‡(
p_ts
 !(
CPU_TS
 *)0) {

779 *
p_ts
 = (
CPU_TS
 )0;

781 *
p_îr
 = 
OS_ERR_PEND_ABORT
;

784 
OS_STATUS_PEND_TIMEOUT
:

786 
p_void
 = (*)0;

787 *
p_msg_size
 = (
OS_MSG_SIZE
)0;

788 i‡(
p_ts
 !(
CPU_TS
 *)0) {

789 *
p_ts
 = 
OSTCBCurPå
->
TS
;

791 *
p_îr
 = 
OS_ERR_TIMEOUT
;

794 
	`CPU_CRITICAL_EXIT
();

795  (
p_void
);

796 
	}
}

827 #i‡(
OS_CFG_TASK_Q_EN
 > 0uË&& (
OS_CFG_TASK_Q_PEND_ABORT_EN
 > 0u)

828 
CPU_BOOLEAN
 
	$OSTaskQPídAb‹t
 (
OS_TCB
 *
p_tcb
,

829 
OS_OPT
 
›t
,

830 
OS_ERR
 *
p_îr
)

832 
CPU_TS
 
ts
;

833 
	`CPU_SR_ALLOC
();

837 #ifde‡
OS_SAFETY_CRITICAL


838 i‡(
p_îr
 =(
OS_ERR
 *)0) {

839 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

840  (
DEF_FALSE
);

844 #i‡
OS_CFG_CALLED_FROM_ISR_CHK_EN
 > 0u

845 i‡(
OSI¡Ne°ögCå
 > (
OS_NESTING_CTR
)0) {

846 *
p_îr
 = 
OS_ERR_PEND_ABORT_ISR
;

847  (
DEF_FALSE
);

851 #i‡
OS_CFG_ARG_CHK_EN
 > 0u

852 
›t
) {

853 
OS_OPT_POST_NONE
:

854 
OS_OPT_POST_NO_SCHED
:

858 *
p_îr
 = 
OS_ERR_OPT_INVALID
;

859  (
DEF_FALSE
);

863 
	`CPU_CRITICAL_ENTER
();

864 #i‡
OS_CFG_ARG_CHK_EN
 > 0u

865 i‡((
p_tcb
 =(
OS_TCB
 *)0) ||

866 (
p_tcb
 =
OSTCBCurPå
)) {

867 
	`CPU_CRITICAL_EXIT
();

868 *
p_îr
 = 
OS_ERR_PEND_ABORT_SELF
;

869  (
DEF_FALSE
);

873 i‡(
p_tcb
->
PídOn
 !
OS_TASK_PEND_ON_TASK_Q
) {

874 
	`CPU_CRITICAL_EXIT
();

875 *
p_îr
 = 
OS_ERR_PEND_ABORT_NONE
;

876  (
DEF_FALSE
);

879 
	`OS_CRITICAL_ENTER_CPU_CRITICAL_EXIT
();

880 
ts
 = 
	`OS_TS_GET
();

881 
	`OS_PídAb‹t
((
OS_PEND_OBJ
 *)0,

882 
p_tcb
,

883 
ts
);

884 
	`OS_CRITICAL_EXIT_NO_SCHED
();

885 i‡((
›t
 & 
OS_OPT_POST_NO_SCHED
Ë=(
OS_OPT
)0) {

886 
	`OSSched
();

888 *
p_îr
 = 
OS_ERR_NONE
;

889  (
DEF_TRUE
);

890 
	}
}

929 #i‡
OS_CFG_TASK_Q_EN
 > 0u

930 
	$OSTaskQPo°
 (
OS_TCB
 *
p_tcb
,

931 *
p_void
,

932 
OS_MSG_SIZE
 
msg_size
,

933 
OS_OPT
 
›t
,

934 
OS_ERR
 *
p_îr
)

936 
CPU_TS
 
ts
;

940 #ifde‡
OS_SAFETY_CRITICAL


941 i‡(
p_îr
 =(
OS_ERR
 *)0) {

942 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

947 #i‡
OS_CFG_ARG_CHK_EN
 > 0u

948 
›t
) {

949 
OS_OPT_POST_FIFO
:

950 
OS_OPT_POST_LIFO
:

951 
OS_OPT_POST_FIFO
 | 
OS_OPT_POST_NO_SCHED
:

952 
OS_OPT_POST_LIFO
 | 
OS_OPT_POST_NO_SCHED
:

956 *
p_îr
 = 
OS_ERR_OPT_INVALID
;

961 
ts
 = 
	`OS_TS_GET
();

963 #i‡
OS_CFG_ISR_POST_DEFERRED_EN
 > 0u

964 i‡(
OSI¡Ne°ögCå
 > (
OS_NESTING_CTR
)0) {

965 
	`OS_I¡QPo°
((
OS_OBJ_TYPE
)
OS_OBJ_TYPE_TASK_MSG
,

966 (*)
p_tcb
,

967 (*)
p_void
,

968 (
OS_MSG_SIZE
)
msg_size
,

969 (
OS_FLAGS
 )0,

970 (
OS_OPT
 )
›t
,

971 (
CPU_TS
 )
ts
,

972 (
OS_ERR
 *)
p_îr
);

977 
	`OS_TaskQPo°
(
p_tcb
,

978 
p_void
,

979 
msg_size
,

980 
›t
,

981 
ts
,

982 
p_îr
);

983 
	}
}

1010 #i‡
OS_CFG_TASK_REG_TBL_SIZE
 > 0u

1011 
OS_REG
 
	$OSTaskRegGë
 (
OS_TCB
 *
p_tcb
,

1012 
OS_REG_ID
 
id
,

1013 
OS_ERR
 *
p_îr
)

1015 
OS_REG
 
vÆue
;

1016 
	`CPU_SR_ALLOC
();

1020 #ifde‡
OS_SAFETY_CRITICAL


1021 i‡(
p_îr
 =(
OS_ERR
 *)0) {

1022 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

1023  ((
OS_REG
)0);

1027 #i‡
OS_CFG_ARG_CHK_EN
 > 0u

1028 i‡(
id
 >
OS_CFG_TASK_REG_TBL_SIZE
) {

1029 *
p_îr
 = 
OS_ERR_REG_ID_INVALID
;

1030  ((
OS_REG
)0);

1034 
	`CPU_CRITICAL_ENTER
();

1035 i‡(
p_tcb
 =(
OS_TCB
 *)0) {

1036 
p_tcb
 = 
OSTCBCurPå
;

1038 
vÆue
 = 
p_tcb
->
RegTbl
[
id
];

1039 
	`CPU_CRITICAL_EXIT
();

1040 *
p_îr
 = 
OS_ERR_NONE
;

1041  ((
OS_REG
)
vÆue
);

1042 
	}
}

1063 #i‡
OS_CFG_TASK_REG_TBL_SIZE
 > 0u

1064 
OS_REG_ID
 
	$OSTaskRegGëID
 (
OS_ERR
 *
p_îr
)

1066 
OS_REG_ID
 
id
;

1067 
	`CPU_SR_ALLOC
();

1071 #ifde‡
OS_SAFETY_CRITICAL


1072 i‡(
p_îr
 =(
OS_ERR
 *)0) {

1073 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

1074  ((
OS_REG_ID
)
OS_CFG_TASK_REG_TBL_SIZE
);

1078 
	`CPU_CRITICAL_ENTER
();

1079 i‡(
OSTaskRegNextAvaûID
 >
OS_CFG_TASK_REG_TBL_SIZE
) {

1080 *
p_îr
 = 
OS_ERR_NO_MORE_ID_AVAIL
;

1081 
	`CPU_CRITICAL_EXIT
();

1082  ((
OS_REG_ID
)
OS_CFG_TASK_REG_TBL_SIZE
);

1085 
id
 = 
OSTaskRegNextAvaûID
;

1086 
OSTaskRegNextAvaûID
++;

1087 
	`CPU_CRITICAL_EXIT
();

1088 *
p_îr
 = 
OS_ERR_NONE
;

1089  (
id
);

1090 
	}
}

1119 #i‡
OS_CFG_TASK_REG_TBL_SIZE
 > 0u

1120 
	$OSTaskRegSë
 (
OS_TCB
 *
p_tcb
,

1121 
OS_REG_ID
 
id
,

1122 
OS_REG
 
vÆue
,

1123 
OS_ERR
 *
p_îr
)

1125 
	`CPU_SR_ALLOC
();

1129 #ifde‡
OS_SAFETY_CRITICAL


1130 i‡(
p_îr
 =(
OS_ERR
 *)0) {

1131 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

1136 #i‡
OS_CFG_ARG_CHK_EN
 > 0u

1137 i‡(
id
 >
OS_CFG_TASK_REG_TBL_SIZE
) {

1138 *
p_îr
 = 
OS_ERR_REG_ID_INVALID
;

1143 
	`CPU_CRITICAL_ENTER
();

1144 i‡(
p_tcb
 =(
OS_TCB
 *)0) {

1145 
p_tcb
 = 
OSTCBCurPå
;

1147 
p_tcb
->
RegTbl
[
id
] = 
vÆue
;

1148 
	`CPU_CRITICAL_EXIT
();

1149 *
p_îr
 = 
OS_ERR_NONE
;

1150 
	}
}

1175 #i‡
OS_CFG_TASK_SUSPEND_EN
 > 0u

1176 
	$OSTaskResume
 (
OS_TCB
 *
p_tcb
,

1177 
OS_ERR
 *
p_îr
)

1179 
	`CPU_SR_ALLOC
();

1183 #ifde‡
OS_SAFETY_CRITICAL


1184 i‡(
p_îr
 =(
OS_ERR
 *)0) {

1185 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

1190 #i‡(
OS_CFG_ISR_POST_DEFERRED_EN
 == 0u) && \

1191 (
OS_CFG_CALLED_FROM_ISR_CHK_EN
 > 0u)

1192 i‡(
OSI¡Ne°ögCå
 > (
OS_NESTING_CTR
)0) {

1193 *
p_îr
 = 
OS_ERR_TASK_RESUME_ISR
;

1199 
	`CPU_CRITICAL_ENTER
();

1200 #i‡
OS_CFG_ARG_CHK_EN
 > 0u

1201 i‡((
p_tcb
 =(
OS_TCB
 *)0) ||

1202 (
p_tcb
 =
OSTCBCurPå
)) {

1203 
	`CPU_CRITICAL_EXIT
();

1204 *
p_îr
 = 
OS_ERR_TASK_RESUME_SELF
;

1208 
	`CPU_CRITICAL_EXIT
();

1210 #i‡
OS_CFG_ISR_POST_DEFERRED_EN
 > 0u

1211 i‡(
OSI¡Ne°ögCå
 > (
OS_NESTING_CTR
)0) {

1212 
	`OS_I¡QPo°
((
OS_OBJ_TYPE
)
OS_OBJ_TYPE_TASK_RESUME
,

1213 (*)
p_tcb
,

1215 (
OS_MSG_SIZE
)0,

1216 (
OS_FLAGS
 )0,

1217 (
OS_OPT
 )0,

1218 (
CPU_TS
 )0,

1219 (
OS_ERR
 *)
p_îr
);

1224 
	`OS_TaskResume
(
p_tcb
, 
p_îr
);

1225 
	}
}

1262 
OS_SEM_CTR
 
	$OSTaskSemPíd
 (
OS_TICK
 
timeout
,

1263 
OS_OPT
 
›t
,

1264 
CPU_TS
 *
p_ts
,

1265 
OS_ERR
 *
p_îr
)

1267 
OS_SEM_CTR
 
˘r
;

1268 
	`CPU_SR_ALLOC
();

1272 #ifde‡
OS_SAFETY_CRITICAL


1273 i‡(
p_îr
 =(
OS_ERR
 *)0) {

1274 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

1275  ((
OS_SEM_CTR
)0);

1279 #i‡
OS_CFG_CALLED_FROM_ISR_CHK_EN
 > 0u

1280 i‡(
OSI¡Ne°ögCå
 > (
OS_NESTING_CTR
)0) {

1281 *
p_îr
 = 
OS_ERR_PEND_ISR
;

1282  ((
OS_SEM_CTR
)0);

1286 #i‡
OS_CFG_ARG_CHK_EN
 > 0u

1287 
›t
) {

1288 
OS_OPT_PEND_BLOCKING
:

1289 
OS_OPT_PEND_NON_BLOCKING
:

1293 *
p_îr
 = 
OS_ERR_OPT_INVALID
;

1294  ((
OS_SEM_CTR
)0);

1298 i‡(
p_ts
 !(
CPU_TS
 *)0) {

1299 *
p_ts
 = (
CPU_TS
 )0;

1302 
	`CPU_CRITICAL_ENTER
();

1303 i‡(
OSTCBCurPå
->
SemCå
 > (
OS_SEM_CTR
)0) {

1304 
OSTCBCurPå
->
SemCå
--;

1305 
˘r
 = 
OSTCBCurPå
->
SemCå
;

1306 i‡(
p_ts
 !(
CPU_TS
 *)0) {

1307 *
p_ts
 = 
OSTCBCurPå
->
TS
;

1309 #i‡
OS_CFG_TASK_PROFILE_EN
 > 0u

1310 
OSTCBCurPå
->
SemPídTime
 = 
	`OS_TS_GET
(Ë- OSTCBCurPå->
TS
;

1311 i‡(
OSTCBCurPå
->
SemPídTimeMax
 < OSTCBCurPå->
SemPídTime
) {

1312 
OSTCBCurPå
->
SemPídTimeMax
 = OSTCBCurPå->
SemPídTime
;

1315 
	`CPU_CRITICAL_EXIT
();

1316 *
p_îr
 = 
OS_ERR_NONE
;

1317  (
˘r
);

1320 i‡((
›t
 & 
OS_OPT_PEND_NON_BLOCKING
Ë!(
OS_OPT
)0) {

1321 
	`CPU_CRITICAL_EXIT
();

1322 *
p_îr
 = 
OS_ERR_PEND_WOULD_BLOCK
;

1323  ((
OS_SEM_CTR
)0);

1325 i‡(
OSSchedLockNe°ögCå
 > (
OS_NESTING_CTR
)0) {

1326 
	`CPU_CRITICAL_EXIT
();

1327 *
p_îr
 = 
OS_ERR_SCHED_LOCKED
;

1328  ((
OS_SEM_CTR
)0);

1332 
	`OS_CRITICAL_ENTER_CPU_CRITICAL_EXIT
();

1333 
	`OS_Píd
((
OS_PEND_DATA
 *)0,

1334 (
OS_PEND_OBJ
 *)0,

1335 (
OS_STATE
 )
OS_TASK_PEND_ON_TASK_SEM
,

1336 (
OS_TICK
 )
timeout
);

1337 
	`OS_CRITICAL_EXIT_NO_SCHED
();

1339 
	`OSSched
();

1341 
	`CPU_CRITICAL_ENTER
();

1342 
OSTCBCurPå
->
PídSètus
) {

1343 
OS_STATUS_PEND_OK
:

1344 i‡(
p_ts
 !(
CPU_TS
 *)0) {

1345 *
p_ts
 = 
OSTCBCurPå
->
TS
;

1346 #i‡
OS_CFG_TASK_PROFILE_EN
 > 0u

1347 
OSTCBCurPå
->
SemPídTime
 = 
	`OS_TS_GET
(Ë- OSTCBCurPå->
TS
;

1348 i‡(
OSTCBCurPå
->
SemPídTimeMax
 < OSTCBCurPå->
SemPídTime
) {

1349 
OSTCBCurPå
->
SemPídTimeMax
 = OSTCBCurPå->
SemPídTime
;

1353 *
p_îr
 = 
OS_ERR_NONE
;

1356 
OS_STATUS_PEND_ABORT
:

1357 i‡(
p_ts
 !(
CPU_TS
 *)0) {

1358 *
p_ts
 = 
OSTCBCurPå
->
TS
;

1360 *
p_îr
 = 
OS_ERR_PEND_ABORT
;

1363 
OS_STATUS_PEND_TIMEOUT
:

1364 i‡(
p_ts
 !(
CPU_TS
 *)0) {

1365 *
p_ts
 = (
CPU_TS
 )0;

1367 *
p_îr
 = 
OS_ERR_TIMEOUT
;

1371 *
p_îr
 = 
OS_ERR_STATUS_INVALID
;

1374 
˘r
 = 
OSTCBCurPå
->
SemCå
;

1375 
	`CPU_CRITICAL_EXIT
();

1376  (
˘r
);

1377 
	}
}

1408 #i‡
OS_CFG_TASK_SEM_PEND_ABORT_EN
 > 0u

1409 
CPU_BOOLEAN
 
	$OSTaskSemPídAb‹t
 (
OS_TCB
 *
p_tcb
,

1410 
OS_OPT
 
›t
,

1411 
OS_ERR
 *
p_îr
)

1413 
CPU_TS
 
ts
;

1414 
	`CPU_SR_ALLOC
();

1418 #ifde‡
OS_SAFETY_CRITICAL


1419 i‡(
p_îr
 =(
OS_ERR
 *)0) {

1420 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

1421  (
DEF_FALSE
);

1425 #i‡
OS_CFG_CALLED_FROM_ISR_CHK_EN
 > 0u

1426 i‡(
OSI¡Ne°ögCå
 > (
OS_NESTING_CTR
)0) {

1427 *
p_îr
 = 
OS_ERR_PEND_ABORT_ISR
;

1428  (
DEF_FALSE
);

1432 #i‡
OS_CFG_ARG_CHK_EN
 > 0u

1433 
›t
) {

1434 
OS_OPT_POST_NONE
:

1435 
OS_OPT_POST_NO_SCHED
:

1439 *
p_îr
 = 
OS_ERR_OPT_INVALID
;

1440  (
DEF_FALSE
);

1444 
	`CPU_CRITICAL_ENTER
();

1445 i‡((
p_tcb
 =(
OS_TCB
 *)0) ||

1446 (
p_tcb
 =
OSTCBCurPå
)) {

1447 
	`CPU_CRITICAL_EXIT
();

1448 *
p_îr
 = 
OS_ERR_PEND_ABORT_SELF
;

1449  (
DEF_FALSE
);

1452 i‡(
p_tcb
->
PídOn
 !
OS_TASK_PEND_ON_TASK_SEM
) {

1453 
	`CPU_CRITICAL_EXIT
();

1454 *
p_îr
 = 
OS_ERR_PEND_ABORT_NONE
;

1455  (
DEF_FALSE
);

1457 
	`CPU_CRITICAL_EXIT
();

1459 
	`OS_CRITICAL_ENTER
();

1460 
ts
 = 
	`OS_TS_GET
();

1461 
	`OS_PídAb‹t
((
OS_PEND_OBJ
 *)0,

1462 
p_tcb
,

1463 
ts
);

1464 
	`OS_CRITICAL_EXIT_NO_SCHED
();

1465 i‡((
›t
 & 
OS_OPT_POST_NO_SCHED
Ë=(
OS_OPT
)0) {

1466 
	`OSSched
();

1468 *
p_îr
 = 
OS_ERR_NONE
;

1469  (
DEF_TRUE
);

1470 
	}
}

1497 
OS_SEM_CTR
 
	$OSTaskSemPo°
 (
OS_TCB
 *
p_tcb
,

1498 
OS_OPT
 
›t
,

1499 
OS_ERR
 *
p_îr
)

1501 
OS_SEM_CTR
 
˘r
;

1502 
CPU_TS
 
ts
;

1506 #ifde‡
OS_SAFETY_CRITICAL


1507 i‡(
p_îr
 =(
OS_ERR
 *)0) {

1508 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

1509  ((
OS_SEM_CTR
)0);

1513 #i‡
OS_CFG_ARG_CHK_EN
 > 0u

1514 
›t
) {

1515 
OS_OPT_POST_NONE
:

1516 
OS_OPT_POST_NO_SCHED
:

1520 *
p_îr
 = 
OS_ERR_OPT_INVALID
;

1521  ((
OS_SEM_CTR
)0u);

1525 
ts
 = 
	`OS_TS_GET
();

1527 #i‡
OS_CFG_ISR_POST_DEFERRED_EN
 > 0u

1528 i‡(
OSI¡Ne°ögCå
 > (
OS_NESTING_CTR
)0) {

1529 
	`OS_I¡QPo°
((
OS_OBJ_TYPE
)
OS_OBJ_TYPE_TASK_SIGNAL
,

1530 (*)
p_tcb
,

1532 (
OS_MSG_SIZE
)0,

1533 (
OS_FLAGS
 )0,

1534 (
OS_OPT
 )0,

1535 (
CPU_TS
 )
ts
,

1536 (
OS_ERR
 *)
p_îr
);

1537  ((
OS_SEM_CTR
)0);

1541 
˘r
 = 
	`OS_TaskSemPo°
(
p_tcb
,

1542 
›t
,

1543 
ts
,

1544 
p_îr
);

1546  (
˘r
);

1547 
	}
}

1570 
OS_SEM_CTR
 
	$OSTaskSemSë
 (
OS_TCB
 *
p_tcb
,

1571 
OS_SEM_CTR
 
˙t
,

1572 
OS_ERR
 *
p_îr
)

1574 
OS_SEM_CTR
 
˘r
;

1575 
	`CPU_SR_ALLOC
();

1579 #ifde‡
OS_SAFETY_CRITICAL


1580 i‡(
p_îr
 =(
OS_ERR
 *)0) {

1581 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

1582  ((
OS_SEM_CTR
)0);

1586 #i‡
OS_CFG_CALLED_FROM_ISR_CHK_EN
 > 0u

1587 i‡(
OSI¡Ne°ögCå
 > (
OS_NESTING_CTR
)0) {

1588 *
p_îr
 = 
OS_ERR_SET_ISR
;

1589  ((
OS_SEM_CTR
)0);

1593 
	`CPU_CRITICAL_ENTER
();

1594 i‡(
p_tcb
 =(
OS_TCB
 *)0) {

1595 
p_tcb
 = 
OSTCBCurPå
;

1597 
˘r
 = 
p_tcb
->
SemCå
;

1598 
p_tcb
->
SemCå
 = (
OS_SEM_CTR
)
˙t
;

1599 
	`CPU_CRITICAL_EXIT
();

1600 *
p_îr
 = 
OS_ERR_NONE
;

1601  (
˘r
);

1602 
	}
}

1629 #i‡
OS_CFG_STAT_TASK_STK_CHK_EN
 > 0u

1630 
	$OSTaskStkChk
 (
OS_TCB
 *
p_tcb
,

1631 
CPU_STK_SIZE
 *
p_‰ì
,

1632 
CPU_STK_SIZE
 *
p_u£d
,

1633 
OS_ERR
 *
p_îr
)

1635 
CPU_STK_SIZE
 
‰ì_°k
;

1636 
CPU_STK
 *
p_°k
;

1637 
	`CPU_SR_ALLOC
();

1641 #ifde‡
OS_SAFETY_CRITICAL


1642 i‡(
p_îr
 =(
OS_ERR
 *)0) {

1643 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

1648 #i‡
OS_CFG_CALLED_FROM_ISR_CHK_EN
 > 0u

1649 i‡(
OSI¡Ne°ögCå
 > (
OS_NESTING_CTR
)0) {

1650 *
p_îr
 = 
OS_ERR_TASK_STK_CHK_ISR
;

1655 #i‡
OS_CFG_ARG_CHK_EN
 > 0u

1656 i‡(
p_‰ì
 =(
CPU_STK_SIZE
*)0) {

1657 *
p_îr
 = 
OS_ERR_PTR_INVALID
;

1661 i‡(
p_u£d
 =(
CPU_STK_SIZE
*)0) {

1662 *
p_îr
 = 
OS_ERR_PTR_INVALID
;

1667 
	`CPU_CRITICAL_ENTER
();

1668 i‡(
p_tcb
 =(
OS_TCB
 *)0) {

1669 
p_tcb
 = 
OSTCBCurPå
;

1672 i‡(
p_tcb
->
StkPå
 =(
CPU_STK
*)0) {

1673 
	`CPU_CRITICAL_EXIT
();

1674 *
p_‰ì
 = (
CPU_STK_SIZE
)0;

1675 *
p_u£d
 = (
CPU_STK_SIZE
)0;

1676 *
p_îr
 = 
OS_ERR_TASK_NOT_EXIST
;

1680 i‡((
p_tcb
->
O±
 & 
OS_OPT_TASK_STK_CHK
Ë=(
OS_OPT
)0) {

1681 
	`CPU_CRITICAL_EXIT
();

1682 *
p_‰ì
 = (
CPU_STK_SIZE
)0;

1683 *
p_u£d
 = (
CPU_STK_SIZE
)0;

1684 *
p_îr
 = 
OS_ERR_TASK_OPT
;

1687 
	`CPU_CRITICAL_EXIT
();

1689 
‰ì_°k
 = 0u;

1690 #i‡
CPU_CFG_STK_GROWTH
 =
CPU_STK_GROWTH_HI_TO_LO


1691 
p_°k
 = 
p_tcb
->
StkBa£På
;

1692 *
p_°k
 =(
CPU_STK
)0) {

1693 
p_°k
++;

1694 
‰ì_°k
++;

1697 
p_°k
 = 
p_tcb
->
StkBa£På
 +Ö_tcb->
StkSize
 - 1u;

1698 *
p_°k
 =(
CPU_STK
)0) {

1699 
‰ì_°k
++;

1700 
p_°k
--;

1703 *
p_‰ì
 = 
‰ì_°k
;

1704 *
p_u£d
 = (
p_tcb
->
StkSize
 - 
‰ì_°k
);

1705 *
p_îr
 = 
OS_ERR_NONE
;

1706 
	}
}

1737 #i‡
OS_CFG_TASK_SUSPEND_EN
 > 0u

1738 
	$OSTaskSu•íd
 (
OS_TCB
 *
p_tcb
,

1739 
OS_ERR
 *
p_îr
)

1741 #ifde‡
OS_SAFETY_CRITICAL


1742 i‡(
p_îr
 =(
OS_ERR
 *)0) {

1743 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

1748 #i‡(
OS_CFG_ISR_POST_DEFERRED_EN
 == 0u) && \

1749 (
OS_CFG_CALLED_FROM_ISR_CHK_EN
 > 0u)

1750 i‡(
OSI¡Ne°ögCå
 > (
OS_NESTING_CTR
)0) {

1751 *
p_îr
 = 
OS_ERR_TASK_SUSPEND_ISR
;

1756 i‡(
p_tcb
 =&
OSIdÀTaskTCB
) {

1757 *
p_îr
 = 
OS_ERR_TASK_SUSPEND_IDLE
;

1761 #i‡
OS_CFG_ISR_POST_DEFERRED_EN
 > 0u

1762 i‡(
p_tcb
 =&
OSI¡QTaskTCB
) {

1763 *
p_îr
 = 
OS_ERR_TASK_SUSPEND_INT_HANDLER
;

1767 i‡(
OSI¡Ne°ögCå
 > (
OS_NESTING_CTR
)0) {

1768 
	`OS_I¡QPo°
((
OS_OBJ_TYPE
)
OS_OBJ_TYPE_TASK_SUSPEND
,

1769 (*)
p_tcb
,

1771 (
OS_MSG_SIZE
)0,

1772 (
OS_FLAGS
 )0,

1773 (
OS_OPT
 )0,

1774 (
CPU_TS
 )0,

1775 (
OS_ERR
 *)
p_îr
);

1780 
	`OS_TaskSu•íd
(
p_tcb
, 
p_îr
);

1781 
	}
}

1805 #i‡
OS_CFG_SCHED_ROUND_ROBIN_EN
 > 0u

1806 
	$OSTaskTimeQu™èSë
 (
OS_TCB
 *
p_tcb
,

1807 
OS_TICK
 
time_qu™è
,

1808 
OS_ERR
 *
p_îr
)

1810 
	`CPU_SR_ALLOC
();

1814 #ifde‡
OS_SAFETY_CRITICAL


1815 i‡(
p_îr
 =(
OS_ERR
 *)0) {

1816 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

1821 #i‡
OS_CFG_CALLED_FROM_ISR_CHK_EN
 > 0u

1822 i‡(
OSI¡Ne°ögCå
 > (
OS_NESTING_CTR
)0) {

1823 *
p_îr
 = 
OS_ERR_SET_ISR
;

1828 
	`CPU_CRITICAL_ENTER
();

1829 i‡(
p_tcb
 =(
OS_TCB
 *)0) {

1830 
p_tcb
 = 
OSTCBCurPå
;

1833 i‡(
time_qu™è
 == 0u) {

1834 
p_tcb
->
TimeQu™è
 = 
OSSchedRoundRoböDÊtTimeQu™è
;

1836 
p_tcb
->
TimeQu™è
 = 
time_qu™è
;

1838 i‡(
p_tcb
->
TimeQu™è
 >Ö_tcb->
TimeQu™èCå
) {

1839 
p_tcb
->
TimeQu™èCå
 =Ö_tcb->
TimeQu™è
;

1841 
	`CPU_CRITICAL_EXIT
();

1842 *
p_îr
 = 
OS_ERR_NONE
;

1843 
	}
}

1861 #i‡
OS_CFG_DBG_EN
 > 0u

1862 
	$OS_TaskDbgLi°Add
 (
OS_TCB
 *
p_tcb
)

1864 
p_tcb
->
DbgPªvPå
 = (
OS_TCB
 *)0;

1865 i‡(
OSTaskDbgLi°På
 =(
OS_TCB
 *)0) {

1866 
p_tcb
->
DbgNextPå
 = (
OS_TCB
 *)0;

1868 
p_tcb
->
DbgNextPå
 = 
OSTaskDbgLi°På
;

1869 
OSTaskDbgLi°På
->
DbgPªvPå
 = 
p_tcb
;

1871 
OSTaskDbgLi°På
 = 
p_tcb
;

1872 
	}
}

1876 
	$OS_TaskDbgLi°Remove
 (
OS_TCB
 *
p_tcb
)

1878 
OS_TCB
 *
p_tcb_√xt
;

1879 
OS_TCB
 *
p_tcb_¥ev
;

1882 
p_tcb_¥ev
 = 
p_tcb
->
DbgPªvPå
;

1883 
p_tcb_√xt
 = 
p_tcb
->
DbgNextPå
;

1885 i‡(
p_tcb_¥ev
 =(
OS_TCB
 *)0) {

1886 
OSTaskDbgLi°På
 = 
p_tcb_√xt
;

1887 i‡(
p_tcb_√xt
 !(
OS_TCB
 *)0) {

1888 
p_tcb_√xt
->
DbgPªvPå
 = (
OS_TCB
 *)0;

1890 
p_tcb
->
DbgNextPå
 = (
OS_TCB
 *)0;

1892 } i‡(
p_tcb_√xt
 =(
OS_TCB
 *)0) {

1893 
p_tcb_¥ev
->
DbgNextPå
 = (
OS_TCB
 *)0;

1894 
p_tcb
->
DbgPªvPå
 = (
OS_TCB
 *)0;

1897 
p_tcb_¥ev
->
DbgNextPå
 = 
p_tcb_√xt
;

1898 
p_tcb_√xt
->
DbgPªvPå
 = 
p_tcb_¥ev
;

1899 
p_tcb
->
DbgNextPå
 = (
OS_TCB
 *)0;

1900 
p_tcb
->
DbgPªvPå
 = (
OS_TCB
 *)0;

1902 
	}
}

1923 
	$OS_TaskInô
 (
OS_ERR
 *
p_îr
)

1925 #ifde‡
OS_SAFETY_CRITICAL


1926 i‡(
p_îr
 =(
OS_ERR
 *)0) {

1927 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

1932 #i‡
OS_CFG_DBG_EN
 > 0u

1933 
OSTaskDbgLi°På
 = (
OS_TCB
 *)0;

1936 
OSTaskQty
 = (
OS_OBJ_QTY
 )0;

1937 
OSTaskCtxSwCå
 = (
OS_CTX_SW_CTR
)0;

1939 *
p_îr
 = 
OS_ERR_NONE
;

1940 
	}
}

1957 
	$OS_TaskInôTCB
 (
OS_TCB
 *
p_tcb
)

1959 #i‡
OS_CFG_TASK_REG_TBL_SIZE
 > 0u

1960 
OS_REG_ID
 
ªg_id
;

1962 #i‡
	`deföed
(
OS_CFG_TLS_TBL_SIZE
) && (OS_CFG_TLS_TBL_SIZE > 0u)

1963 
OS_TLS_ID
 
id
;

1965 #i‡
OS_CFG_TASK_PROFILE_EN
 > 0u

1966 
CPU_TS
 
ts
;

1970 
p_tcb
->
StkPå
 = (
CPU_STK
 *)0;

1971 
p_tcb
->
StkLimôPå
 = (
CPU_STK
 *)0;

1973 
p_tcb
->
ExtPå
 = (*)0;

1975 
p_tcb
->
NextPå
 = (
OS_TCB
 *)0;

1976 
p_tcb
->
PªvPå
 = (
OS_TCB
 *)0;

1978 
p_tcb
->
TickNextPå
 = (
OS_TCB
 *)0;

1979 
p_tcb
->
TickPªvPå
 = (
OS_TCB
 *)0;

1980 
p_tcb
->
TickSpokePå
 = (
OS_TICK_SPOKE
 *)0;

1982 
p_tcb
->
NamePå
 = (
CPU_CHAR
 *)((*)"?Task");

1984 
p_tcb
->
StkBa£På
 = (
CPU_STK
 *)0;

1986 
p_tcb
->
TaskE¡ryAddr
 = (
OS_TASK_PTR
 )0;

1987 
p_tcb
->
TaskE¡ryArg
 = (*)0;

1989 #i‡(
OS_CFG_PEND_MULTI_EN
 > 0u)

1990 
p_tcb
->
PídD©aTblPå
 = (
OS_PEND_DATA
 *)0;

1991 
p_tcb
->
PídD©aTblE¡rõs
 = (
OS_OBJ_QTY
 )0u;

1994 
p_tcb
->
TS
 = (
CPU_TS
 )0u;

1996 #i‡(
OS_MSG_EN
 > 0u)

1997 
p_tcb
->
MsgPå
 = (*)0;

1998 
p_tcb
->
MsgSize
 = (
OS_MSG_SIZE
 )0u;

2001 #i‡
OS_CFG_TASK_Q_EN
 > 0u

2002 
	`OS_MsgQInô
(&
p_tcb
->
MsgQ
,

2003 (
OS_MSG_QTY
)0u);

2004 #i‡
OS_CFG_TASK_PROFILE_EN
 > 0u

2005 
p_tcb
->
MsgQPídTime
 = (
CPU_TS
 )0u;

2006 
p_tcb
->
MsgQPídTimeMax
 = (
CPU_TS
 )0u;

2010 #i‡
OS_CFG_FLAG_EN
 > 0u

2011 
p_tcb
->
FœgsPíd
 = (
OS_FLAGS
 )0u;

2012 
p_tcb
->
FœgsO±
 = (
OS_OPT
 )0u;

2013 
p_tcb
->
FœgsRdy
 = (
OS_FLAGS
 )0u;

2016 #i‡
OS_CFG_TASK_REG_TBL_SIZE
 > 0u

2017 
ªg_id
 = 0u;Ñeg_id < 
OS_CFG_TASK_REG_TBL_SIZE
;Ñeg_id++) {

2018 
p_tcb
->
RegTbl
[
ªg_id
] = (
OS_REG
)0u;

2022 #i‡
	`deföed
(
OS_CFG_TLS_TBL_SIZE
) && (OS_CFG_TLS_TBL_SIZE > 0u)

2023 
id
 = 0u; id < 
OS_CFG_TLS_TBL_SIZE
; id++) {

2024 
p_tcb
->
TLS_Tbl
[
id
] = (
OS_TLS
)0;

2028 
p_tcb
->
SemCå
 = (
OS_SEM_CTR
 )0u;

2029 #i‡
OS_CFG_TASK_PROFILE_EN
 > 0u

2030 
p_tcb
->
SemPídTime
 = (
CPU_TS
 )0u;

2031 
p_tcb
->
SemPídTimeMax
 = (
CPU_TS
 )0u;

2034 
p_tcb
->
StkSize
 = (
CPU_STK_SIZE
 )0u;

2037 #i‡
OS_CFG_TASK_SUSPEND_EN
 > 0u

2038 
p_tcb
->
Su•ídCå
 = (
OS_NESTING_CTR
 )0u;

2041 #i‡
OS_CFG_STAT_TASK_STK_CHK_EN
 > 0u

2042 
p_tcb
->
StkFªe
 = (
CPU_STK_SIZE
 )0u;

2043 
p_tcb
->
StkU£d
 = (
CPU_STK_SIZE
 )0u;

2046 
p_tcb
->
O±
 = (
OS_OPT
 )0u;

2048 
p_tcb
->
TickCåPªv
 = (
OS_TICK
 )
OS_TICK_TH_INIT
;

2049 
p_tcb
->
TickCåM©ch
 = (
OS_TICK
 )0u;

2050 
p_tcb
->
TickRemaö
 = (
OS_TICK
 )0u;

2052 
p_tcb
->
TimeQu™è
 = (
OS_TICK
 )0u;

2053 
p_tcb
->
TimeQu™èCå
 = (
OS_TICK
 )0u;

2055 #i‡
OS_CFG_TASK_PROFILE_EN
 > 0u

2056 
p_tcb
->
CPUUßge
 = (
OS_CPU_USAGE
 )0u;

2057 
p_tcb
->
CPUUßgeMax
 = (
OS_CPU_USAGE
 )0u;

2058 
p_tcb
->
CtxSwCå
 = (
OS_CTX_SW_CTR
 )0u;

2059 
p_tcb
->
Cy˛esDñè
 = (
CPU_TS
 )0u;

2060 
ts
 = 
	`OS_TS_GET
();

2061 
p_tcb
->
Cy˛esSèπ
 = 
ts
;

2062 
p_tcb
->
Cy˛esTŸÆ
 = (
OS_CYCLES
 )0u;

2064 #ifde‡
CPU_CFG_INT_DIS_MEAS_EN


2065 
p_tcb
->
I¡DisTimeMax
 = (
CPU_TS
 )0u;

2067 #i‡
OS_CFG_SCHED_LOCK_TIME_MEAS_EN
 > 0u

2068 
p_tcb
->
SchedLockTimeMax
 = (
CPU_TS
 )0u;

2071 
p_tcb
->
PídOn
 = (
OS_STATE
 )
OS_TASK_PEND_ON_NOTHING
;

2072 
p_tcb
->
PídSètus
 = (
OS_STATUS
 )
OS_STATUS_PEND_OK
;

2073 
p_tcb
->
TaskSèã
 = (
OS_STATE
 )
OS_TASK_STATE_RDY
;

2075 
p_tcb
->
Prio
 = (
OS_PRIO
 )
OS_PRIO_INIT
;

2077 #i‡
OS_CFG_DBG_EN
 > 0u

2078 
p_tcb
->
DbgPªvPå
 = (
OS_TCB
 *)0;

2079 
p_tcb
->
DbgNextPå
 = (
OS_TCB
 *)0;

2080 
p_tcb
->
DbgNamePå
 = (
CPU_CHAR
 *)((*)" ");

2082 
	}
}

2126 #i‡
OS_CFG_TASK_Q_EN
 > 0u

2127 
	$OS_TaskQPo°
 (
OS_TCB
 *
p_tcb
,

2128 *
p_void
,

2129 
OS_MSG_SIZE
 
msg_size
,

2130 
OS_OPT
 
›t
,

2131 
CPU_TS
 
ts
,

2132 
OS_ERR
 *
p_îr
)

2134 
	`CPU_SR_ALLOC
();

2138 
	`OS_CRITICAL_ENTER
();

2139 i‡(
p_tcb
 =(
OS_TCB
 *)0) {

2140 
p_tcb
 = 
OSTCBCurPå
;

2142 *
p_îr
 = 
OS_ERR_NONE
;

2143 
p_tcb
->
TaskSèã
) {

2144 
OS_TASK_STATE_RDY
:

2145 
OS_TASK_STATE_DLY
:

2146 
OS_TASK_STATE_SUSPENDED
:

2147 
OS_TASK_STATE_DLY_SUSPENDED
:

2148 
	`OS_MsgQPut
(&
p_tcb
->
MsgQ
,

2149 
p_void
,

2150 
msg_size
,

2151 
›t
,

2152 
ts
,

2153 
p_îr
);

2154 
	`OS_CRITICAL_EXIT
();

2157 
OS_TASK_STATE_PEND
:

2158 
OS_TASK_STATE_PEND_TIMEOUT
:

2159 
OS_TASK_STATE_PEND_SUSPENDED
:

2160 
OS_TASK_STATE_PEND_TIMEOUT_SUSPENDED
:

2161 i‡(
p_tcb
->
PídOn
 =
OS_TASK_PEND_ON_TASK_Q
) {

2162 
	`OS_Po°
((
OS_PEND_OBJ
 *)0,

2163 
p_tcb
,

2164 
p_void
,

2165 
msg_size
,

2166 
ts
);

2167 
	`OS_CRITICAL_EXIT_NO_SCHED
();

2168 i‡((
›t
 & 
OS_OPT_POST_NO_SCHED
Ë=(
OS_OPT
)0u) {

2169 
	`OSSched
();

2172 
	`OS_MsgQPut
(&
p_tcb
->
MsgQ
,

2173 
p_void
,

2174 
msg_size
,

2175 
›t
,

2176 
ts
,

2177 
p_îr
);

2178 
	`OS_CRITICAL_EXIT
();

2183 
	`OS_CRITICAL_EXIT
();

2184 *
p_îr
 = 
OS_ERR_STATE_INVALID
;

2187 
	}
}

2214 #i‡
OS_CFG_TASK_SUSPEND_EN
 > 0u

2215 
	$OS_TaskResume
 (
OS_TCB
 *
p_tcb
,

2216 
OS_ERR
 *
p_îr
)

2218 
	`CPU_SR_ALLOC
();

2221 
	`CPU_CRITICAL_ENTER
();

2222 *
p_îr
 = 
OS_ERR_NONE
;

2223 
p_tcb
->
TaskSèã
) {

2224 
OS_TASK_STATE_RDY
:

2225 
OS_TASK_STATE_DLY
:

2226 
OS_TASK_STATE_PEND
:

2227 
OS_TASK_STATE_PEND_TIMEOUT
:

2228 
	`CPU_CRITICAL_EXIT
();

2229 *
p_îr
 = 
OS_ERR_TASK_NOT_SUSPENDED
;

2232 
OS_TASK_STATE_SUSPENDED
:

2233 
	`OS_CRITICAL_ENTER_CPU_CRITICAL_EXIT
();

2234 
p_tcb
->
Su•ídCå
--;

2235 i‡(
p_tcb
->
Su•ídCå
 =(
OS_NESTING_CTR
)0) {

2236 
p_tcb
->
TaskSèã
 = 
OS_TASK_STATE_RDY
;

2237 
	`OS_TaskRdy
(
p_tcb
);

2239 
	`OS_CRITICAL_EXIT_NO_SCHED
();

2242 
OS_TASK_STATE_DLY_SUSPENDED
:

2243 
p_tcb
->
Su•ídCå
--;

2244 i‡(
p_tcb
->
Su•ídCå
 =(
OS_NESTING_CTR
)0) {

2245 
p_tcb
->
TaskSèã
 = 
OS_TASK_STATE_DLY
;

2247 
	`CPU_CRITICAL_EXIT
();

2250 
OS_TASK_STATE_PEND_SUSPENDED
:

2251 
p_tcb
->
Su•ídCå
--;

2252 i‡(
p_tcb
->
Su•ídCå
 =(
OS_NESTING_CTR
)0) {

2253 
p_tcb
->
TaskSèã
 = 
OS_TASK_STATE_PEND
;

2255 
	`CPU_CRITICAL_EXIT
();

2258 
OS_TASK_STATE_PEND_TIMEOUT_SUSPENDED
:

2259 
p_tcb
->
Su•ídCå
--;

2260 i‡(
p_tcb
->
Su•ídCå
 =(
OS_NESTING_CTR
)0) {

2261 
p_tcb
->
TaskSèã
 = 
OS_TASK_STATE_PEND_TIMEOUT
;

2263 
	`CPU_CRITICAL_EXIT
();

2267 
	`CPU_CRITICAL_EXIT
();

2268 *
p_îr
 = 
OS_ERR_STATE_INVALID
;

2272 
	`OSSched
();

2273 
	}
}

2292 
	$OS_TaskRëu∫
 ()

2294 
OS_ERR
 
îr
;

2298 
	`OSTaskRëu∫Hook
(
OSTCBCurPå
);

2299 #i‡
OS_CFG_TASK_DEL_EN
 > 0u

2300 
	`OSTaskDñ
((
OS_TCB
 *)0,

2301 (
OS_ERR
 *)&
îr
);

2304 
	`OSTimeDly
((
OS_TICK
 )
OSCfg_TickR©e_Hz
,

2305 (
OS_OPT
 )
OS_OPT_TIME_DLY
,

2306 (
OS_ERR
 *)&
îr
);

2309 
	}
}

2342 
OS_SEM_CTR
 
	$OS_TaskSemPo°
 (
OS_TCB
 *
p_tcb
,

2343 
OS_OPT
 
›t
,

2344 
CPU_TS
 
ts
,

2345 
OS_ERR
 *
p_îr
)

2347 
OS_SEM_CTR
 
˘r
;

2348 
	`CPU_SR_ALLOC
();

2352 
	`OS_CRITICAL_ENTER
();

2353 i‡(
p_tcb
 =(
OS_TCB
 *)0) {

2354 
p_tcb
 = 
OSTCBCurPå
;

2356 
p_tcb
->
TS
 = 
ts
;

2357 *
p_îr
 = 
OS_ERR_NONE
;

2358 
p_tcb
->
TaskSèã
) {

2359 
OS_TASK_STATE_RDY
:

2360 
OS_TASK_STATE_DLY
:

2361 
OS_TASK_STATE_SUSPENDED
:

2362 
OS_TASK_STATE_DLY_SUSPENDED
:

2363 (
OS_SEM_CTR
)) {

2365 i‡(
p_tcb
->
SemCå
 =
DEF_INT_08U_MAX_VAL
) {

2366 
	`OS_CRITICAL_EXIT
();

2367 *
p_îr
 = 
OS_ERR_SEM_OVF
;

2368  ((
OS_SEM_CTR
)0);

2373 i‡(
p_tcb
->
SemCå
 =
DEF_INT_16U_MAX_VAL
) {

2374 
	`OS_CRITICAL_EXIT
();

2375 *
p_îr
 = 
OS_ERR_SEM_OVF
;

2376  ((
OS_SEM_CTR
)0);

2381 i‡(
p_tcb
->
SemCå
 =
DEF_INT_32U_MAX_VAL
) {

2382 
	`OS_CRITICAL_EXIT
();

2383 *
p_îr
 = 
OS_ERR_SEM_OVF
;

2384  ((
OS_SEM_CTR
)0);

2391 
p_tcb
->
SemCå
++;

2392 
˘r
 = 
p_tcb
->
SemCå
;

2393 
	`OS_CRITICAL_EXIT
();

2396 
OS_TASK_STATE_PEND
:

2397 
OS_TASK_STATE_PEND_TIMEOUT
:

2398 
OS_TASK_STATE_PEND_SUSPENDED
:

2399 
OS_TASK_STATE_PEND_TIMEOUT_SUSPENDED
:

2400 i‡(
p_tcb
->
PídOn
 =
OS_TASK_PEND_ON_TASK_SEM
) {

2401 
	`OS_Po°
((
OS_PEND_OBJ
 *)0,

2402 (
OS_TCB
 *)
p_tcb
,

2404 (
OS_MSG_SIZE
 )0u,

2405 (
CPU_TS
 )
ts
);

2406 
˘r
 = 
p_tcb
->
SemCå
;

2407 
	`OS_CRITICAL_EXIT_NO_SCHED
();

2408 i‡((
›t
 & 
OS_OPT_POST_NO_SCHED
Ë=(
OS_OPT
)0) {

2409 
	`OSSched
();

2412 (
OS_SEM_CTR
)) {

2414 i‡(
p_tcb
->
SemCå
 =
DEF_INT_08U_MAX_VAL
) {

2415 
	`OS_CRITICAL_EXIT
();

2416 *
p_îr
 = 
OS_ERR_SEM_OVF
;

2417  ((
OS_SEM_CTR
)0);

2422 i‡(
p_tcb
->
SemCå
 =
DEF_INT_16U_MAX_VAL
) {

2423 
	`OS_CRITICAL_EXIT
();

2424 *
p_îr
 = 
OS_ERR_SEM_OVF
;

2425  ((
OS_SEM_CTR
)0);

2430 i‡(
p_tcb
->
SemCå
 =
DEF_INT_32U_MAX_VAL
) {

2431 
	`OS_CRITICAL_EXIT
();

2432 *
p_îr
 = 
OS_ERR_SEM_OVF
;

2433  ((
OS_SEM_CTR
)0);

2440 
p_tcb
->
SemCå
++;

2441 
˘r
 = 
p_tcb
->
SemCå
;

2442 
	`OS_CRITICAL_EXIT
();

2447 
	`OS_CRITICAL_EXIT
();

2448 *
p_îr
 = 
OS_ERR_STATE_INVALID
;

2449 
˘r
 = (
OS_SEM_CTR
)0;

2452  (
˘r
);

2453 
	}
}

2485 #i‡
OS_CFG_TASK_SUSPEND_EN
 > 0u

2486 
	$OS_TaskSu•íd
 (
OS_TCB
 *
p_tcb
,

2487 
OS_ERR
 *
p_îr
)

2489 
	`CPU_SR_ALLOC
();

2493 
	`CPU_CRITICAL_ENTER
();

2494 i‡(
p_tcb
 =(
OS_TCB
 *)0) {

2495 
p_tcb
 = 
OSTCBCurPå
;

2498 i‡(
p_tcb
 =
OSTCBCurPå
) {

2499 i‡(
OSSchedLockNe°ögCå
 > (
OS_NESTING_CTR
)0) {

2500 
	`CPU_CRITICAL_EXIT
();

2501 *
p_îr
 = 
OS_ERR_SCHED_LOCKED
;

2506 *
p_îr
 = 
OS_ERR_NONE
;

2507 
p_tcb
->
TaskSèã
) {

2508 
OS_TASK_STATE_RDY
:

2509 
	`OS_CRITICAL_ENTER_CPU_CRITICAL_EXIT
();

2510 
p_tcb
->
TaskSèã
 = 
OS_TASK_STATE_SUSPENDED
;

2511 
p_tcb
->
Su•ídCå
 = (
OS_NESTING_CTR
)1;

2512 
	`OS_RdyLi°Remove
(
p_tcb
);

2513 
	`OS_CRITICAL_EXIT_NO_SCHED
();

2516 
OS_TASK_STATE_DLY
:

2517 
p_tcb
->
TaskSèã
 = 
OS_TASK_STATE_DLY_SUSPENDED
;

2518 
p_tcb
->
Su•ídCå
 = (
OS_NESTING_CTR
)1;

2519 
	`CPU_CRITICAL_EXIT
();

2522 
OS_TASK_STATE_PEND
:

2523 
p_tcb
->
TaskSèã
 = 
OS_TASK_STATE_PEND_SUSPENDED
;

2524 
p_tcb
->
Su•ídCå
 = (
OS_NESTING_CTR
)1;

2525 
	`CPU_CRITICAL_EXIT
();

2528 
OS_TASK_STATE_PEND_TIMEOUT
:

2529 
p_tcb
->
TaskSèã
 = 
OS_TASK_STATE_PEND_TIMEOUT_SUSPENDED
;

2530 
p_tcb
->
Su•ídCå
 = (
OS_NESTING_CTR
)1;

2531 
	`CPU_CRITICAL_EXIT
();

2534 
OS_TASK_STATE_SUSPENDED
:

2535 
OS_TASK_STATE_DLY_SUSPENDED
:

2536 
OS_TASK_STATE_PEND_SUSPENDED
:

2537 
OS_TASK_STATE_PEND_TIMEOUT_SUSPENDED
:

2538 
p_tcb
->
Su•ídCå
++;

2539 
	`CPU_CRITICAL_EXIT
();

2543 
	`CPU_CRITICAL_EXIT
();

2544 *
p_îr
 = 
OS_ERR_STATE_INVALID
;

2548 
	`OSSched
();

2549 
	}
}

	@Source/os_tick.c

33 
	#MICRIUM_SOURCE


	)

34 
	~<os.h
>

36 #ifde‡
VSC_INCLUDE_SOURCE_FILE_NAMES


37 c⁄° 
CPU_CHAR
 *
	gos_tick__c
 = "$Id: $";

61 
	$OS_TickTask
 (*
p_¨g
)

63 
OS_ERR
 
îr
;

64 
CPU_TS
 
ts
;

67 
p_¨g
 =Ö_arg;

69 
DEF_ON
) {

70 ()
	`OSTaskSemPíd
((
OS_TICK
 )0,

71 (
OS_OPT
 )
OS_OPT_PEND_BLOCKING
,

72 (
CPU_TS
 *)&
ts
,

73 (
OS_ERR
 *)&
îr
);

74 i‡(
îr
 =
OS_ERR_NONE
) {

75 i‡(
OSRu¬ög
 =
OS_STATE_OS_RUNNING
) {

76 
	`OS_TickLi°Upd©e
();

80 
	}
}

104 
	$OS_TickTaskInô
 (
OS_ERR
 *
p_îr
)

106 #ifde‡
OS_SAFETY_CRITICAL


107 i‡(
p_îr
 =(
OS_ERR
 *)0) {

108 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

113 
OSTickCå
 = (
OS_TICK
)0u;

115 
OSTickTaskTimeMax
 = (
CPU_TS
)0u;

118 
	`OS_TickLi°Inô
();

121 i‡(
OSCfg_TickTaskStkBa£På
 =(
CPU_STK
 *)0) {

122 *
p_îr
 = 
OS_ERR_TICK_STK_INVALID
;

126 i‡(
OSCfg_TickTaskStkSize
 < 
OSCfg_StkSizeMö
) {

127 *
p_îr
 = 
OS_ERR_TICK_STK_SIZE_INVALID
;

131 i‡(
OSCfg_TickTaskPrio
 >(
OS_CFG_PRIO_MAX
 - 1u)) {

132 *
p_îr
 = 
OS_ERR_TICK_PRIO_INVALID
;

136 
	`OSTaskCª©e
((
OS_TCB
 *)&
OSTickTaskTCB
,

137 (
CPU_CHAR
 *)((*)"uC/OS-III Tick Task"),

138 (
OS_TASK_PTR
 )
OS_TickTask
,

140 (
OS_PRIO
 )
OSCfg_TickTaskPrio
,

141 (
CPU_STK
 *)
OSCfg_TickTaskStkBa£På
,

142 (
CPU_STK_SIZE
)
OSCfg_TickTaskStkLimô
,

143 (
CPU_STK_SIZE
)
OSCfg_TickTaskStkSize
,

144 (
OS_MSG_QTY
 )0u,

145 (
OS_TICK
 )0u,

147 (
OS_OPT
 )(
OS_OPT_TASK_STK_CHK
 | 
OS_OPT_TASK_STK_CLR
 | 
OS_OPT_TASK_NO_TLS
),

148 (
OS_ERR
 *)
p_îr
);

149 
	}
}

166 
	$OS_TickLi°Inô
 ()

168 
OS_TICK_SPOKE_IX
 
i
;

169 
OS_TICK_SPOKE
 *
p_•oke
;

173 
i
 = 0u; i < 
OSCfg_TickWhìlSize
; i++) {

174 
p_•oke
 = (
OS_TICK_SPOKE
 *)&
OSCfg_TickWhìl
[
i
];

175 
p_•oke
->
Fú°På
 = (
OS_TCB
 *)0;

176 
p_•oke
->
NbrE¡rõs
 = (
OS_OBJ_QTY
 )0u;

177 
p_•oke
->
NbrE¡rõsMax
 = (
OS_OBJ_QTY
 )0u;

179 
	}
}

220 
	$OS_TickLi°In£π
 (
OS_TCB
 *
p_tcb
,

221 
OS_TICK
 
time
,

222 
OS_OPT
 
›t
,

223 
OS_ERR
 *
p_îr
)

225 
OS_TICK
 
tick_dñè
;

226 
OS_TICK
 
tick_√xt
;

227 
OS_TICK_SPOKE
 *
p_•oke
;

228 
OS_TCB
 *
p_tcb0
;

229 
OS_TCB
 *
p_tcb1
;

230 
OS_TICK_SPOKE_IX
 
•oke
;

234 i‡(
›t
 =
OS_OPT_TIME_MATCH
) {

235 
tick_dñè
 = 
time
 - 
OSTickCå
 - 1u;

236 i‡(
tick_dñè
 > 
OS_TICK_TH_RDY
) {

237 
p_tcb
->
TickCåM©ch
 = (
OS_TICK
 )0u;

238 
p_tcb
->
TickRemaö
 = (
OS_TICK
 )0u;

239 
p_tcb
->
TickSpokePå
 = (
OS_TICK_SPOKE
 *)0;

240 *
p_îr
 = 
OS_ERR_TIME_ZERO_DLY
;

243 
p_tcb
->
TickCåM©ch
 = 
time
;

244 
p_tcb
->
TickRemaö
 = 
tick_dñè
 + 1u;

246 } i‡(
time
 > (
OS_TICK
)0u) {

247 i‡(
›t
 =
OS_OPT_TIME_PERIODIC
) {

248 
tick_√xt
 = 
p_tcb
->
TickCåPªv
 + 
time
;

249 
tick_dñè
 = 
tick_√xt
 - 
OSTickCå
 - 1u;

250 i‡(
tick_dñè
 < 
time
) {

251 
p_tcb
->
TickCåM©ch
 = 
tick_√xt
;

253 
p_tcb
->
TickCåM©ch
 = 
OSTickCå
 + 
time
;

255 
p_tcb
->
TickRemaö
 =Ö_tcb->
TickCåM©ch
 - 
OSTickCå
;

256 
p_tcb
->
TickCåPªv
 =Ö_tcb->
TickCåM©ch
;

259 
p_tcb
->
TickCåM©ch
 = 
OSTickCå
 + 
time
;

260 
p_tcb
->
TickRemaö
 = 
time
;

264 
p_tcb
->
TickCåM©ch
 = (
OS_TICK
 )0u;

265 
p_tcb
->
TickRemaö
 = (
OS_TICK
 )0u;

266 
p_tcb
->
TickSpokePå
 = (
OS_TICK_SPOKE
 *)0;

267 *
p_îr
 = 
OS_ERR_TIME_ZERO_DLY
;

272 
•oke
 = (
OS_TICK_SPOKE_IX
)(
p_tcb
->
TickCåM©ch
 % 
OSCfg_TickWhìlSize
);

273 
p_•oke
 = &
OSCfg_TickWhìl
[
•oke
];

275 i‡(
p_•oke
->
NbrE¡rõs
 =(
OS_OBJ_QTY
)0u) {

276 
p_tcb
->
TickNextPå
 = (
OS_TCB
 *)0;

277 
p_tcb
->
TickPªvPå
 = (
OS_TCB
 *)0;

278 
p_•oke
->
Fú°På
 = 
p_tcb
;

279 
p_•oke
->
NbrE¡rõs
 = (
OS_OBJ_QTY
)1u;

281 
p_tcb1
 = 
p_•oke
->
Fú°På
;

282 
p_tcb1
 !(
OS_TCB
 *)0) {

283 
p_tcb1
->
TickRemaö
 =Ö_tcb1->
TickCåM©ch


284 - 
OSTickCå
;

285 i‡(
p_tcb
->
TickRemaö
 > 
p_tcb1
->TickRemain) {

286 i‡(
p_tcb1
->
TickNextPå
 !(
OS_TCB
 *)0) {

287 
p_tcb1
 =Ö_tcb1->
TickNextPå
;

289 
p_tcb
->
TickNextPå
 = (
OS_TCB
 *)0;

290 
p_tcb
->
TickPªvPå
 = 
p_tcb1
;

291 
p_tcb1
->
TickNextPå
 = 
p_tcb
;

292 
p_tcb1
 = (
OS_TCB
 *)0;

295 i‡(
p_tcb1
->
TickPªvPå
 =(
OS_TCB
 *)0) {

296 
p_tcb
->
TickPªvPå
 = (
OS_TCB
 *)0;

297 
p_tcb
->
TickNextPå
 = 
p_tcb1
;

298 
p_tcb1
->
TickPªvPå
 = 
p_tcb
;

299 
p_•oke
->
Fú°På
 = 
p_tcb
;

301 
p_tcb0
 = 
p_tcb1
->
TickPªvPå
;

302 
p_tcb
->
TickPªvPå
 = 
p_tcb0
;

303 
p_tcb
->
TickNextPå
 = 
p_tcb1
;

304 
p_tcb0
->
TickNextPå
 = 
p_tcb
;

305 
p_tcb1
->
TickPªvPå
 = 
p_tcb
;

307 
p_tcb1
 = (
OS_TCB
 *)0;

310 
p_•oke
->
NbrE¡rõs
++;

312 i‡(
p_•oke
->
NbrE¡rõsMax
 <Ö_•oke->
NbrE¡rõs
) {

313 
p_•oke
->
NbrE¡rõsMax
 =Ö_•oke->
NbrE¡rõs
;

315 
p_tcb
->
TickSpokePå
 = 
p_•oke
;

316 *
p_îr
 = 
OS_ERR_NONE
;

317 
	}
}

337 
	$OS_TickLi°Remove
 (
OS_TCB
 *
p_tcb
)

339 
OS_TICK_SPOKE
 *
p_•oke
;

340 
OS_TCB
 *
p_tcb1
;

341 
OS_TCB
 *
p_tcb2
;

345 
p_•oke
 = 
p_tcb
->
TickSpokePå
;

346 i‡(
p_•oke
 !(
OS_TICK_SPOKE
 *)0) {

347 
p_tcb
->
TickRemaö
 = (
OS_TICK
)0u;

348 i‡(
p_•oke
->
Fú°På
 =
p_tcb
) {

349 
p_tcb1
 = (
OS_TCB
 *)
p_tcb
->
TickNextPå
;

350 
p_•oke
->
Fú°På
 = 
p_tcb1
;

351 i‡(
p_tcb1
 !(
OS_TCB
 *)0) {

352 
p_tcb1
->
TickPªvPå
 = (
OS_TCB
 *)0;

355 
p_tcb1
 = 
p_tcb
->
TickPªvPå
;

356 
p_tcb2
 = 
p_tcb
->
TickNextPå
;

357 
p_tcb1
->
TickNextPå
 = 
p_tcb2
;

358 i‡(
p_tcb2
 !(
OS_TCB
 *)0) {

359 
p_tcb2
->
TickPªvPå
 = 
p_tcb1
;

362 
p_tcb
->
TickNextPå
 = (
OS_TCB
 *)0;

363 
p_tcb
->
TickPªvPå
 = (
OS_TCB
 *)0;

364 
p_tcb
->
TickSpokePå
 = (
OS_TICK_SPOKE
 *)0;

365 
p_tcb
->
TickCåM©ch
 = (
OS_TICK
 )0u;

366 
p_•oke
->
NbrE¡rõs
--;

368 
	}
}

386 
	$OS_TickLi°Re£tPók
 ()

388 
OS_TICK_SPOKE_IX
 
i
;

389 
OS_TICK_SPOKE
 *
p_•oke
;

393 
i
 = 0u; i < 
OSCfg_TickWhìlSize
; i++) {

394 
p_•oke
 = (
OS_TICK_SPOKE
 *)&
OSCfg_TickWhìl
[
i
];

395 
p_•oke
->
NbrE¡rõsMax
 = (
OS_OBJ_QTY
 )0u;

397 
	}
}

415 
	$OS_TickLi°Upd©e
 ()

417 
CPU_BOOLEAN
 
d⁄e
;

418 
OS_TICK_SPOKE
 *
p_•oke
;

419 
OS_TCB
 *
p_tcb
;

420 
OS_TCB
 *
p_tcb_√xt
;

421 
OS_TICK_SPOKE_IX
 
•oke
;

422 
CPU_TS
 
ts_°¨t
;

423 
CPU_TS
 
ts_íd
;

424 
	`CPU_SR_ALLOC
();

427 
	`OS_CRITICAL_ENTER
();

428 
ts_°¨t
 = 
	`OS_TS_GET
();

429 
OSTickCå
++;

430 
•oke
 = (
OS_TICK_SPOKE_IX
)(
OSTickCå
 % 
OSCfg_TickWhìlSize
);

431 
p_•oke
 = &
OSCfg_TickWhìl
[
•oke
];

432 
p_tcb
 = 
p_•oke
->
Fú°På
;

433 
d⁄e
 = 
DEF_FALSE
;

434 
d⁄e
 =
DEF_FALSE
) {

435 i‡(
p_tcb
 !(
OS_TCB
 *)0) {

436 
p_tcb_√xt
 = 
p_tcb
->
TickNextPå
;

437 
p_tcb
->
TaskSèã
) {

438 
OS_TASK_STATE_RDY
:

439 
OS_TASK_STATE_PEND
:

440 
OS_TASK_STATE_SUSPENDED
:

441 
OS_TASK_STATE_PEND_SUSPENDED
:

444 
OS_TASK_STATE_DLY
:

445 
p_tcb
->
TickRemaö
 =Ö_tcb->
TickCåM©ch


446 - 
OSTickCå
;

447 i‡(
OSTickCå
 =
p_tcb
->
TickCåM©ch
) {

448 
p_tcb
->
TaskSèã
 = 
OS_TASK_STATE_RDY
;

449 
	`OS_TaskRdy
(
p_tcb
);

451 
d⁄e
 = 
DEF_TRUE
;

455 
OS_TASK_STATE_PEND_TIMEOUT
:

456 
p_tcb
->
TickRemaö
 =Ö_tcb->
TickCåM©ch


457 - 
OSTickCå
;

458 i‡(
OSTickCå
 =
p_tcb
->
TickCåM©ch
) {

459 #i‡(
OS_MSG_EN
 > 0u)

460 
p_tcb
->
MsgPå
 = (*)0;

461 
p_tcb
->
MsgSize
 = (
OS_MSG_SIZE
)0u;

463 
p_tcb
->
TS
 = 
	`OS_TS_GET
();

464 
	`OS_PídLi°Remove
(
p_tcb
);

465 
	`OS_TaskRdy
(
p_tcb
);

466 
p_tcb
->
TaskSèã
 = 
OS_TASK_STATE_RDY
;

467 
p_tcb
->
PídSètus
 = 
OS_STATUS_PEND_TIMEOUT
;

468 
p_tcb
->
PídOn
 = 
OS_TASK_PEND_ON_NOTHING
;

470 
d⁄e
 = 
DEF_TRUE
;

474 
OS_TASK_STATE_DLY_SUSPENDED
:

475 
p_tcb
->
TickRemaö
 =Ö_tcb->
TickCåM©ch


476 - 
OSTickCå
;

477 i‡(
OSTickCå
 =
p_tcb
->
TickCåM©ch
) {

478 
p_tcb
->
TaskSèã
 = 
OS_TASK_STATE_SUSPENDED
;

479 
	`OS_TickLi°Remove
(
p_tcb
);

481 
d⁄e
 = 
DEF_TRUE
;

485 
OS_TASK_STATE_PEND_TIMEOUT_SUSPENDED
:

486 
p_tcb
->
TickRemaö
 =Ö_tcb->
TickCåM©ch


487 - 
OSTickCå
;

488 i‡(
OSTickCå
 =
p_tcb
->
TickCåM©ch
) {

489 #i‡(
OS_MSG_EN
 > 0u)

490 
p_tcb
->
MsgPå
 = (*)0;

491 
p_tcb
->
MsgSize
 = (
OS_MSG_SIZE
)0u;

493 
p_tcb
->
TS
 = 
	`OS_TS_GET
();

494 
	`OS_PídLi°Remove
(
p_tcb
);

495 
	`OS_TickLi°Remove
(
p_tcb
);

496 
p_tcb
->
TaskSèã
 = 
OS_TASK_STATE_SUSPENDED
;

497 
p_tcb
->
PídSètus
 = 
OS_STATUS_PEND_TIMEOUT
;

498 
p_tcb
->
PídOn
 = 
OS_TASK_PEND_ON_NOTHING
;

500 
d⁄e
 = 
DEF_TRUE
;

507 
p_tcb
 = 
p_tcb_√xt
;

509 
d⁄e
 = 
DEF_TRUE
;

512 
ts_íd
 = 
	`OS_TS_GET
(Ë- 
ts_°¨t
;

513 i‡(
OSTickTaskTimeMax
 < 
ts_íd
) {

514 
OSTickTaskTimeMax
 = 
ts_íd
;

516 
	`OS_CRITICAL_EXIT
();

517 
	}
}

	@Source/os_time.c

33 
	#MICRIUM_SOURCE


	)

34 
	~<os.h
>

36 #ifde‡
VSC_INCLUDE_SOURCE_FILE_NAMES


37 c⁄° 
CPU_CHAR
 *
	gos_time__c
 = "$Id: $";

80 
	$OSTimeDly
 (
OS_TICK
 
dly
,

81 
OS_OPT
 
›t
,

82 
OS_ERR
 *
p_îr
)

84 
	`CPU_SR_ALLOC
();

88 #ifde‡
OS_SAFETY_CRITICAL


89 i‡(
p_îr
 =(
OS_ERR
 *)0) {

90 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

95 #i‡
OS_CFG_CALLED_FROM_ISR_CHK_EN
 > 0u

96 i‡(
OSI¡Ne°ögCå
 > (
OS_NESTING_CTR
)0u) {

97 *
p_îr
 = 
OS_ERR_TIME_DLY_ISR
;

102 i‡(
OSSchedLockNe°ögCå
 > (
OS_NESTING_CTR
)0u) {

103 *
p_îr
 = 
OS_ERR_SCHED_LOCKED
;

107 
›t
) {

108 
OS_OPT_TIME_DLY
:

109 
OS_OPT_TIME_TIMEOUT
:

110 
OS_OPT_TIME_PERIODIC
:

111 i‡(
dly
 =(
OS_TICK
)0u) {

112 *
p_îr
 = 
OS_ERR_TIME_ZERO_DLY
;

117 
OS_OPT_TIME_MATCH
:

121 *
p_îr
 = 
OS_ERR_OPT_INVALID
;

125 
	`OS_CRITICAL_ENTER
();

126 
OSTCBCurPå
->
TaskSèã
 = 
OS_TASK_STATE_DLY
;

127 
	`OS_TickLi°In£π
(
OSTCBCurPå
,

128 
dly
,

129 
›t
,

130 
p_îr
);

131 i‡(*
p_îr
 !
OS_ERR_NONE
) {

132 
	`OS_CRITICAL_EXIT_NO_SCHED
();

135 
	`OS_RdyLi°Remove
(
OSTCBCurPå
);

136 
	`OS_CRITICAL_EXIT_NO_SCHED
();

137 
	`OSSched
();

138 *
p_îr
 = 
OS_ERR_NONE
;

139 
	}
}

199 #i‡
OS_CFG_TIME_DLY_HMSM_EN
 > 0u

200 
	$OSTimeDlyHMSM
 (
CPU_INT16U
 
hours
,

201 
CPU_INT16U
 
möuãs
,

202 
CPU_INT16U
 
£c⁄ds
,

203 
CPU_INT32U
 
mûli
,

204 
OS_OPT
 
›t
,

205 
OS_ERR
 *
p_îr
)

207 #i‡
OS_CFG_ARG_CHK_EN
 > 0u

208 
CPU_BOOLEAN
 
›t_övÆid
;

209 
CPU_BOOLEAN
 
›t_n⁄_°ri˘
;

211 
OS_OPT
 
›t_time
;

212 
OS_RATE_HZ
 
tick_øã
;

213 
OS_TICK
 
ticks
;

214 
	`CPU_SR_ALLOC
();

218 #ifde‡
OS_SAFETY_CRITICAL


219 i‡(
p_îr
 =(
OS_ERR
 *)0) {

220 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

225 #i‡
OS_CFG_CALLED_FROM_ISR_CHK_EN
 > 0u

226 i‡(
OSI¡Ne°ögCå
 > (
OS_NESTING_CTR
)0u) {

227 *
p_îr
 = 
OS_ERR_TIME_DLY_ISR
;

232 i‡(
OSSchedLockNe°ögCå
 > (
OS_NESTING_CTR
)0u) {

233 *
p_îr
 = 
OS_ERR_SCHED_LOCKED
;

237 
›t_time
 = 
›t
 & 
OS_OPT_TIME_MASK
;

238 
›t_time
) {

239 
OS_OPT_TIME_DLY
:

240 
OS_OPT_TIME_TIMEOUT
:

241 
OS_OPT_TIME_PERIODIC
:

242 i‡(
mûli
 =(
CPU_INT32U
)0u) {

243 i‡(
£c⁄ds
 =(
CPU_INT16U
)0u) {

244 i‡(
möuãs
 =(
CPU_INT16U
)0u) {

245 i‡(
hours
 =(
CPU_INT16U
)0u) {

246 *
p_îr
 = 
OS_ERR_TIME_ZERO_DLY
;

254 
OS_OPT_TIME_MATCH
:

258 *
p_îr
 = 
OS_ERR_OPT_INVALID
;

262 #i‡
OS_CFG_ARG_CHK_EN
 > 0u

263 
›t_övÆid
 = 
	`DEF_BIT_IS_SET_ANY
(
›t
, ~
OS_OPT_TIME_OPTS_MASK
);

264 i‡(
›t_övÆid
 =
DEF_YES
) {

265 *
p_îr
 = 
OS_ERR_OPT_INVALID
;

269 
›t_n⁄_°ri˘
 = 
	`DEF_BIT_IS_SET
(
›t
, 
OS_OPT_TIME_HMSM_NON_STRICT
);

270 i‡(
›t_n⁄_°ri˘
 !
DEF_YES
) {

271 i‡(
mûli
 > (
CPU_INT32U
)999u) {

272 *
p_îr
 = 
OS_ERR_TIME_INVALID_MILLISECONDS
;

275 i‡(
£c⁄ds
 > (
CPU_INT16U
)59u) {

276 *
p_îr
 = 
OS_ERR_TIME_INVALID_SECONDS
;

279 i‡(
möuãs
 > (
CPU_INT16U
)59u) {

280 *
p_îr
 = 
OS_ERR_TIME_INVALID_MINUTES
;

283 i‡(
hours
 > (
CPU_INT16U
)99u) {

284 *
p_îr
 = 
OS_ERR_TIME_INVALID_HOURS
;

288 i‡(
möuãs
 > (
CPU_INT16U
)9999u) {

289 *
p_îr
 = 
OS_ERR_TIME_INVALID_MINUTES
;

292 i‡(
hours
 > (
CPU_INT16U
)999u) {

293 *
p_îr
 = 
OS_ERR_TIME_INVALID_HOURS
;

301 
tick_øã
 = 
OSCfg_TickR©e_Hz
;

302 
ticks
 = ((
OS_TICK
)
hours
 * (OS_TICK)3600u + (OS_TICK)
möuãs
 * (OS_TICK)60u + (OS_TICK)
£c⁄ds
Ë* 
tick_øã


303 + (
tick_øã
 * ((
OS_TICK
)
mûli
 + (OS_TICK)500u /Åick_rate)) / (OS_TICK)1000u;

305 i‡(
ticks
 > (
OS_TICK
)0u) {

306 
	`OS_CRITICAL_ENTER
();

307 
OSTCBCurPå
->
TaskSèã
 = 
OS_TASK_STATE_DLY
;

308 
	`OS_TickLi°In£π
(
OSTCBCurPå
,

309 
ticks
,

310 
›t_time
,

311 
p_îr
);

312 i‡(*
p_îr
 !
OS_ERR_NONE
) {

313 
	`OS_CRITICAL_EXIT_NO_SCHED
();

316 
	`OS_RdyLi°Remove
(
OSTCBCurPå
);

317 
	`OS_CRITICAL_EXIT_NO_SCHED
();

318 
	`OSSched
();

319 *
p_îr
 = 
OS_ERR_NONE
;

321 *
p_îr
 = 
OS_ERR_TIME_ZERO_DLY
;

323 
	}
}

348 #i‡
OS_CFG_TIME_DLY_RESUME_EN
 > 0u

349 
	$OSTimeDlyResume
 (
OS_TCB
 *
p_tcb
,

350 
OS_ERR
 *
p_îr
)

352 
	`CPU_SR_ALLOC
();

356 #ifde‡
OS_SAFETY_CRITICAL


357 i‡(
p_îr
 =(
OS_ERR
 *)0) {

358 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

363 #i‡
OS_CFG_CALLED_FROM_ISR_CHK_EN
 > 0u

364 i‡(
OSI¡Ne°ögCå
 > (
OS_NESTING_CTR
)0u) {

365 *
p_îr
 = 
OS_ERR_TIME_DLY_RESUME_ISR
;

370 #i‡
OS_CFG_ARG_CHK_EN
 > 0u

371 i‡(
p_tcb
 =(
OS_TCB
 *)0) {

372 *
p_îr
 = 
OS_ERR_TASK_NOT_DLY
;

377 
	`CPU_CRITICAL_ENTER
();

378 i‡(
p_tcb
 =
OSTCBCurPå
) {

379 *
p_îr
 = 
OS_ERR_TASK_NOT_DLY
;

380 
	`CPU_CRITICAL_EXIT
();

384 
p_tcb
->
TaskSèã
) {

385 
OS_TASK_STATE_RDY
:

386 
	`CPU_CRITICAL_EXIT
();

387 *
p_îr
 = 
OS_ERR_TASK_NOT_DLY
;

390 
OS_TASK_STATE_DLY
:

391 
	`OS_CRITICAL_ENTER_CPU_CRITICAL_EXIT
();

392 
p_tcb
->
TaskSèã
 = 
OS_TASK_STATE_RDY
;

393 
	`OS_TickLi°Remove
(
p_tcb
);

394 
	`OS_RdyLi°In£π
(
p_tcb
);

395 
	`OS_CRITICAL_EXIT_NO_SCHED
();

396 *
p_îr
 = 
OS_ERR_NONE
;

399 
OS_TASK_STATE_PEND
:

400 
	`CPU_CRITICAL_EXIT
();

401 *
p_îr
 = 
OS_ERR_TASK_NOT_DLY
;

404 
OS_TASK_STATE_PEND_TIMEOUT
:

405 
	`CPU_CRITICAL_EXIT
();

406 *
p_îr
 = 
OS_ERR_TASK_NOT_DLY
;

409 
OS_TASK_STATE_SUSPENDED
:

410 
	`CPU_CRITICAL_EXIT
();

411 *
p_îr
 = 
OS_ERR_TASK_NOT_DLY
;

414 
OS_TASK_STATE_DLY_SUSPENDED
:

415 
	`OS_CRITICAL_ENTER_CPU_CRITICAL_EXIT
();

416 
p_tcb
->
TaskSèã
 = 
OS_TASK_STATE_SUSPENDED
;

417 
	`OS_TickLi°Remove
(
p_tcb
);

418 
	`OS_CRITICAL_EXIT_NO_SCHED
();

419 *
p_îr
 = 
OS_ERR_TASK_SUSPENDED
;

422 
OS_TASK_STATE_PEND_SUSPENDED
:

423 
	`CPU_CRITICAL_EXIT
();

424 *
p_îr
 = 
OS_ERR_TASK_NOT_DLY
;

427 
OS_TASK_STATE_PEND_TIMEOUT_SUSPENDED
:

428 
	`CPU_CRITICAL_EXIT
();

429 *
p_îr
 = 
OS_ERR_TASK_NOT_DLY
;

433 
	`CPU_CRITICAL_EXIT
();

434 *
p_îr
 = 
OS_ERR_STATE_INVALID
;

438 
	`OSSched
();

439 
	}
}

457 
OS_TICK
 
	$OSTimeGë
 (
OS_ERR
 *
p_îr
)

459 
OS_TICK
 
ticks
;

460 
	`CPU_SR_ALLOC
();

464 #ifde‡
OS_SAFETY_CRITICAL


465 i‡(
p_îr
 =(
OS_ERR
 *)0) {

466 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

467  ((
OS_TICK
)0);

471 
	`CPU_CRITICAL_ENTER
();

472 
ticks
 = 
OSTickCå
;

473 
	`CPU_CRITICAL_EXIT
();

474 *
p_îr
 = 
OS_ERR_NONE
;

475  (
ticks
);

476 
	}
}

494 
	$OSTimeSë
 (
OS_TICK
 
ticks
,

495 
OS_ERR
 *
p_îr
)

497 
	`CPU_SR_ALLOC
();

501 #ifde‡
OS_SAFETY_CRITICAL


502 i‡(
p_îr
 =(
OS_ERR
 *)0) {

503 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

508 
	`CPU_CRITICAL_ENTER
();

509 
OSTickCå
 = 
ticks
;

510 
	`CPU_CRITICAL_EXIT
();

511 *
p_îr
 = 
OS_ERR_NONE
;

512 
	}
}

528 
	$OSTimeTick
 ()

530 
OS_ERR
 
îr
;

531 #i‡
OS_CFG_ISR_POST_DEFERRED_EN
 > 0u

532 
CPU_TS
 
ts
;

536 
	`OSTimeTickHook
();

538 #i‡
OS_CFG_ISR_POST_DEFERRED_EN
 > 0u

540 
ts
 = 
	`OS_TS_GET
();

541 
	`OS_I¡QPo°
((
OS_OBJ_TYPE
Ë
OS_OBJ_TYPE_TICK
,

542 (*)&
OSRdyLi°
[
OSPrioCur
],

544 (
OS_MSG_SIZE
) 0u,

545 (
OS_FLAGS
 ) 0u,

546 (
OS_OPT
 ) 0u,

547 (
CPU_TS
 ) 
ts
,

548 (
OS_ERR
 *)&
îr
);

552 ()
	`OSTaskSemPo°
((
OS_TCB
 *)&
OSTickTaskTCB
,

553 (
OS_OPT
 ) 
OS_OPT_POST_NONE
,

554 (
OS_ERR
 *)&
îr
);

557 #i‡
OS_CFG_SCHED_ROUND_ROBIN_EN
 > 0u

558 
	`OS_SchedRoundRobö
(&
OSRdyLi°
[
OSPrioCur
]);

561 #i‡
OS_CFG_TMR_EN
 > 0u

562 
OSTmrUpd©eCå
--;

563 i‡(
OSTmrUpd©eCå
 =(
OS_CTR
)0u) {

564 
OSTmrUpd©eCå
 = 
OSTmrUpd©eC¡
;

565 
	`OSTaskSemPo°
((
OS_TCB
 *)&
OSTmrTaskTCB
,

566 (
OS_OPT
 ) 
OS_OPT_POST_NONE
,

567 (
OS_ERR
 *)&
îr
);

572 
	}
}

	@Source/os_tmr.c

33 
	#MICRIUM_SOURCE


	)

34 
	~<os.h
>

36 #ifde‡
VSC_INCLUDE_SOURCE_FILE_NAMES


37 c⁄° 
CPU_CHAR
 *
	gos_tmr__c
 = "$Id: $";

41 #i‡
OS_CFG_TMR_EN
 > 0u

48 
	#OS_OPT_LINK_DLY
 (
OS_OPT
)(0u)

	)

49 
	#OS_OPT_LINK_PERIODIC
 (
OS_OPT
)(1u)

	)

104 
	$OSTmrCª©e
 (
OS_TMR
 *
p_tmr
,

105 
CPU_CHAR
 *
p_«me
,

106 
OS_TICK
 
dly
,

107 
OS_TICK
 
≥riod
,

108 
OS_OPT
 
›t
,

109 
OS_TMR_CALLBACK_PTR
 
p_ˇŒback
,

110 *
p_ˇŒback_¨g
,

111 
OS_ERR
 *
p_îr
)

113 
	`CPU_SR_ALLOC
();

117 #ifde‡
OS_SAFETY_CRITICAL


118 i‡(
p_îr
 =(
OS_ERR
 *)0) {

119 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

124 #ifde‡
OS_SAFETY_CRITICAL_IEC61508


125 i‡(
OSSa„tyCrôiˇlSèπFœg
 =
DEF_TRUE
) {

126 *
p_îr
 = 
OS_ERR_ILLEGAL_CREATE_RUN_TIME
;

131 #i‡
OS_CFG_CALLED_FROM_ISR_CHK_EN
 > 0u

132 i‡(
OSI¡Ne°ögCå
 > (
OS_NESTING_CTR
)0) {

133 *
p_îr
 = 
OS_ERR_TMR_ISR
;

138 #i‡
OS_CFG_ARG_CHK_EN
 > 0u

139 i‡(
p_tmr
 =(
OS_TMR
 *)0) {

140 *
p_îr
 = 
OS_ERR_OBJ_PTR_NULL
;

144 
›t
) {

145 
OS_OPT_TMR_PERIODIC
:

146 i‡(
≥riod
 =(
OS_TICK
)0) {

147 *
p_îr
 = 
OS_ERR_TMR_INVALID_PERIOD
;

152 
OS_OPT_TMR_ONE_SHOT
:

153 i‡(
dly
 =(
OS_TICK
)0) {

154 *
p_îr
 = 
OS_ERR_TMR_INVALID_DLY
;

160 *
p_îr
 = 
OS_ERR_OPT_INVALID
;

165 
	`OS_CRITICAL_ENTER
();

166 
p_tmr
->
Sèã
 = (
OS_STATE
 )
OS_TMR_STATE_STOPPED
;

167 
p_tmr
->
Ty≥
 = (
OS_OBJ_TYPE
 )
OS_OBJ_TYPE_TMR
;

168 
p_tmr
->
NamePå
 = (
CPU_CHAR
 *)
p_«me
;

169 
p_tmr
->
Dly
 = (
OS_TICK
 )
dly
;

170 
p_tmr
->
M©ch
 = (
OS_TICK
 )0;

171 
p_tmr
->
Remaö
 = (
OS_TICK
 )0;

172 
p_tmr
->
Pîiod
 = (
OS_TICK
 )
≥riod
;

173 
p_tmr
->
O±
 = (
OS_OPT
 )
›t
;

174 
p_tmr
->
CÆlbackPå
 = (
OS_TMR_CALLBACK_PTR
)
p_ˇŒback
;

175 
p_tmr
->
CÆlbackPåArg
 = (*)
p_ˇŒback_¨g
;

176 
p_tmr
->
NextPå
 = (
OS_TMR
 *)0;

177 
p_tmr
->
PªvPå
 = (
OS_TMR
 *)0;

179 #i‡
OS_CFG_DBG_EN
 > 0u

180 
	`OS_TmrDbgLi°Add
(
p_tmr
);

182 
OSTmrQty
++;

184 
	`OS_CRITICAL_EXIT_NO_SCHED
();

185 *
p_îr
 = 
OS_ERR_NONE
;

186 
	}
}

211 #i‡
OS_CFG_TMR_DEL_EN
 > 0u

212 
CPU_BOOLEAN
 
	$OSTmrDñ
 (
OS_TMR
 *
p_tmr
,

213 
OS_ERR
 *
p_îr
)

215 
OS_ERR
 
îr
;

219 #ifde‡
OS_SAFETY_CRITICAL


220 i‡(
p_îr
 =(
OS_ERR
 *)0) {

221 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

222  (
DEF_FALSE
);

226 #i‡
OS_CFG_CALLED_FROM_ISR_CHK_EN
 > 0u

227 i‡(
OSI¡Ne°ögCå
 > (
OS_NESTING_CTR
)0) {

228 *
p_îr
 = 
OS_ERR_TMR_ISR
;

229  (
DEF_FALSE
);

233 #i‡
OS_CFG_ARG_CHK_EN
 > 0u

234 i‡(
p_tmr
 =(
OS_TMR
 *)0) {

235 *
p_îr
 = 
OS_ERR_TMR_INVALID
;

236  (
DEF_FALSE
);

240 #i‡
OS_CFG_OBJ_TYPE_CHK_EN
 > 0u

241 i‡(
p_tmr
->
Ty≥
 !
OS_OBJ_TYPE_TMR
) {

242 *
p_îr
 = 
OS_ERR_OBJ_TYPE
;

243  (
DEF_FALSE
);

247 
	`OSSchedLock
(&
îr
);

248 #i‡
OS_CFG_DBG_EN
 > 0u

249 
	`OS_TmrDbgLi°Remove
(
p_tmr
);

251 
OSTmrQty
--;

253 
p_tmr
->
Sèã
) {

254 
OS_TMR_STATE_RUNNING
:

255 
	`OS_TmrU∆ök
(
p_tmr
);

256 
	`OS_TmrCÃ
(
p_tmr
);

257 
	`OSSchedU∆ock
(&
îr
);

258 *
p_îr
 = 
OS_ERR_NONE
;

259  (
DEF_TRUE
);

261 
OS_TMR_STATE_STOPPED
:

262 
OS_TMR_STATE_COMPLETED
:

263 
	`OS_TmrCÃ
(
p_tmr
);

264 
	`OSSchedU∆ock
(&
îr
);

265 *
p_îr
 = 
OS_ERR_NONE
;

266  (
DEF_TRUE
);

268 
OS_TMR_STATE_UNUSED
:

269 
	`OSSchedU∆ock
(&
îr
);

270 *
p_îr
 = 
OS_ERR_TMR_INACTIVE
;

271  (
DEF_FALSE
);

274 
	`OSSchedU∆ock
(&
îr
);

275 *
p_îr
 = 
OS_ERR_TMR_INVALID_STATE
;

276  (
DEF_FALSE
);

278 
	}
}

305 
OS_TICK
 
	$OSTmrRemaöGë
 (
OS_TMR
 *
p_tmr
,

306 
OS_ERR
 *
p_îr
)

308 
OS_TICK
 
ªmaö
;

309 
OS_ERR
 
îr
;

313 #ifde‡
OS_SAFETY_CRITICAL


314 i‡(
p_îr
 =(
OS_ERR
 *)0) {

315 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

316  ((
OS_TICK
)0);

320 #i‡
OS_CFG_CALLED_FROM_ISR_CHK_EN
 > 0u

321 i‡(
OSI¡Ne°ögCå
 > (
OS_NESTING_CTR
)0) {

322 *
p_îr
 = 
OS_ERR_TMR_ISR
;

323  ((
OS_TICK
)0);

327 #i‡
OS_CFG_ARG_CHK_EN
 > 0u

328 i‡(
p_tmr
 =(
OS_TMR
 *)0) {

329 *
p_îr
 = 
OS_ERR_TMR_INVALID
;

330  ((
OS_TICK
)0);

334 #i‡
OS_CFG_OBJ_TYPE_CHK_EN
 > 0u

335 i‡(
p_tmr
->
Ty≥
 !
OS_OBJ_TYPE_TMR
) {

336 *
p_îr
 = 
OS_ERR_OBJ_TYPE
;

337  ((
OS_TICK
)0);

341 
	`OSSchedLock
(&
îr
);

342 
p_tmr
->
Sèã
) {

343 
OS_TMR_STATE_RUNNING
:

344 
ªmaö
 = 
p_tmr
->
M©ch


345 - 
OSTmrTickCå
;

346 
p_tmr
->
Remaö
 = 
ªmaö
;

347 
	`OSSchedU∆ock
(&
îr
);

348 *
p_îr
 = 
OS_ERR_NONE
;

349  (
ªmaö
);

351 
OS_TMR_STATE_STOPPED
:

352 i‡(
p_tmr
->
O±
 =
OS_OPT_TMR_PERIODIC
) {

353 i‡(
p_tmr
->
Dly
 == 0u) {

354 
ªmaö
 = 
p_tmr
->
Pîiod
;

356 
ªmaö
 = 
p_tmr
->
Dly
;

359 
ªmaö
 = 
p_tmr
->
Dly
;

361 
p_tmr
->
Remaö
 = 
ªmaö
;

362 
	`OSSchedU∆ock
(&
îr
);

363 *
p_îr
 = 
OS_ERR_NONE
;

364  (
ªmaö
);

366 
OS_TMR_STATE_COMPLETED
:

367 
	`OSSchedU∆ock
(&
îr
);

368 *
p_îr
 = 
OS_ERR_NONE
;

369  ((
OS_TICK
)0);

371 
OS_TMR_STATE_UNUSED
:

372 
	`OSSchedU∆ock
(&
îr
);

373 *
p_îr
 = 
OS_ERR_TMR_INACTIVE
;

374  ((
OS_TICK
)0);

377 
	`OSSchedU∆ock
(&
îr
);

378 *
p_îr
 = 
OS_ERR_TMR_INVALID_STATE
;

379  ((
OS_TICK
)0);

381 
	}
}

411 
CPU_BOOLEAN
 
	$OSTmrSèπ
 (
OS_TMR
 *
p_tmr
,

412 
OS_ERR
 *
p_îr
)

414 
OS_ERR
 
îr
;

418 #ifde‡
OS_SAFETY_CRITICAL


419 i‡(
p_îr
 =(
OS_ERR
 *)0) {

420 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

421  (
DEF_FALSE
);

425 #i‡
OS_CFG_CALLED_FROM_ISR_CHK_EN
 > 0u

426 i‡(
OSI¡Ne°ögCå
 > (
OS_NESTING_CTR
)0) {

427 *
p_îr
 = 
OS_ERR_TMR_ISR
;

428  (
DEF_FALSE
);

432 #i‡
OS_CFG_ARG_CHK_EN
 > 0u

433 i‡(
p_tmr
 =(
OS_TMR
 *)0) {

434 *
p_îr
 = 
OS_ERR_TMR_INVALID
;

435  (
DEF_FALSE
);

439 #i‡
OS_CFG_OBJ_TYPE_CHK_EN
 > 0u

440 i‡(
p_tmr
->
Ty≥
 !
OS_OBJ_TYPE_TMR
) {

441 *
p_îr
 = 
OS_ERR_OBJ_TYPE
;

442  (
DEF_FALSE
);

446 
	`OSSchedLock
(&
îr
);

447 
p_tmr
->
Sèã
) {

448 
OS_TMR_STATE_RUNNING
:

449 
	`OS_TmrU∆ök
(
p_tmr
);

450 
	`OS_TmrLök
(
p_tmr
, 
OS_OPT_LINK_DLY
);

451 
	`OSSchedU∆ock
(&
îr
);

452 *
p_îr
 = 
OS_ERR_NONE
;

453  (
DEF_TRUE
);

455 
OS_TMR_STATE_STOPPED
:

456 
OS_TMR_STATE_COMPLETED
:

457 
	`OS_TmrLök
(
p_tmr
, 
OS_OPT_LINK_DLY
);

458 
	`OSSchedU∆ock
(&
îr
);

459 *
p_îr
 = 
OS_ERR_NONE
;

460  (
DEF_TRUE
);

462 
OS_TMR_STATE_UNUSED
:

463 
	`OSSchedU∆ock
(&
îr
);

464 *
p_îr
 = 
OS_ERR_TMR_INACTIVE
;

465  (
DEF_FALSE
);

468 
	`OSSchedU∆ock
(&
îr
);

469 *
p_îr
 = 
OS_ERR_TMR_INVALID_STATE
;

470  (
DEF_FALSE
);

472 
	}
}

500 
OS_STATE
 
	$OSTmrSèãGë
 (
OS_TMR
 *
p_tmr
,

501 
OS_ERR
 *
p_îr
)

503 
OS_STATE
 
°©e
;

504 
	`CPU_SR_ALLOC
();

508 #ifde‡
OS_SAFETY_CRITICAL


509 i‡(
p_îr
 =(
OS_ERR
 *)0) {

510 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

511  (
OS_TMR_STATE_UNUSED
);

515 #i‡
OS_CFG_CALLED_FROM_ISR_CHK_EN
 > 0u

516 i‡(
OSI¡Ne°ögCå
 > (
OS_NESTING_CTR
)0) {

517 *
p_îr
 = 
OS_ERR_TMR_ISR
;

518  (
OS_TMR_STATE_UNUSED
);

522 #i‡
OS_CFG_ARG_CHK_EN
 > 0u

523 i‡(
p_tmr
 =(
OS_TMR
 *)0) {

524 *
p_îr
 = 
OS_ERR_TMR_INVALID
;

525  (
OS_TMR_STATE_UNUSED
);

529 #i‡
OS_CFG_OBJ_TYPE_CHK_EN
 > 0u

530 i‡(
p_tmr
->
Ty≥
 !
OS_OBJ_TYPE_TMR
) {

531 *
p_îr
 = 
OS_ERR_OBJ_TYPE
;

532  (
OS_TMR_STATE_UNUSED
);

536 
	`CPU_CRITICAL_ENTER
();

537 
°©e
 = 
p_tmr
->
Sèã
;

538 
°©e
) {

539 
OS_TMR_STATE_UNUSED
:

540 
OS_TMR_STATE_STOPPED
:

541 
OS_TMR_STATE_COMPLETED
:

542 
OS_TMR_STATE_RUNNING
:

543 *
p_îr
 = 
OS_ERR_NONE
;

547 *
p_îr
 = 
OS_ERR_TMR_INVALID_STATE
;

550 
	`CPU_CRITICAL_EXIT
();

551  (
°©e
);

552 
	}
}

591 
CPU_BOOLEAN
 
	$OSTmrSt›
 (
OS_TMR
 *
p_tmr
,

592 
OS_OPT
 
›t
,

593 *
p_ˇŒback_¨g
,

594 
OS_ERR
 *
p_îr
)

596 
OS_TMR_CALLBACK_PTR
 
p_‚˘
;

597 
OS_ERR
 
îr
;

601 #ifde‡
OS_SAFETY_CRITICAL


602 i‡(
p_îr
 =(
OS_ERR
 *)0) {

603 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

604  (
DEF_FALSE
);

608 #i‡
OS_CFG_CALLED_FROM_ISR_CHK_EN
 > 0u

609 i‡(
OSI¡Ne°ögCå
 > (
OS_NESTING_CTR
)0) {

610 *
p_îr
 = 
OS_ERR_TMR_ISR
;

611  (
DEF_FALSE
);

615 #i‡
OS_CFG_ARG_CHK_EN
 > 0u

616 i‡(
p_tmr
 =(
OS_TMR
 *)0) {

617 *
p_îr
 = 
OS_ERR_TMR_INVALID
;

618  (
DEF_FALSE
);

622 #i‡
OS_CFG_OBJ_TYPE_CHK_EN
 > 0u

623 i‡(
p_tmr
->
Ty≥
 !
OS_OBJ_TYPE_TMR
) {

624 *
p_îr
 = 
OS_ERR_OBJ_TYPE
;

625  (
DEF_FALSE
);

629 
	`OSSchedLock
(&
îr
);

630 
p_tmr
->
Sèã
) {

631 
OS_TMR_STATE_RUNNING
:

632 
	`OS_TmrU∆ök
(
p_tmr
);

633 *
p_îr
 = 
OS_ERR_NONE
;

634 
›t
) {

635 
OS_OPT_TMR_CALLBACK
:

636 
p_‚˘
 = 
p_tmr
->
CÆlbackPå
;

637 i‡(
p_‚˘
 !(
OS_TMR_CALLBACK_PTR
)0) {

638 (*
p_‚˘
)((*)
p_tmr
,Ö_tmr->
CÆlbackPåArg
);

640 *
p_îr
 = 
OS_ERR_TMR_NO_CALLBACK
;

644 
OS_OPT_TMR_CALLBACK_ARG
:

645 
p_‚˘
 = 
p_tmr
->
CÆlbackPå
;

646 i‡(
p_‚˘
 !(
OS_TMR_CALLBACK_PTR
)0) {

647 (*
p_‚˘
)((*)
p_tmr
, 
p_ˇŒback_¨g
);

649 *
p_îr
 = 
OS_ERR_TMR_NO_CALLBACK
;

653 
OS_OPT_TMR_NONE
:

657 
	`OSSchedU∆ock
(&
îr
);

658 *
p_îr
 = 
OS_ERR_OPT_INVALID
;

659  (
DEF_FALSE
);

661 
	`OSSchedU∆ock
(&
îr
);

662  (
DEF_TRUE
);

664 
OS_TMR_STATE_COMPLETED
:

665 
OS_TMR_STATE_STOPPED
:

666 
	`OSSchedU∆ock
(&
îr
);

667 *
p_îr
 = 
OS_ERR_TMR_STOPPED
;

668  (
DEF_TRUE
);

670 
OS_TMR_STATE_UNUSED
:

671 
	`OSSchedU∆ock
(&
îr
);

672 *
p_îr
 = 
OS_ERR_TMR_INACTIVE
;

673  (
DEF_FALSE
);

676 
	`OSSchedU∆ock
(&
îr
);

677 *
p_îr
 = 
OS_ERR_TMR_INVALID_STATE
;

678  (
DEF_FALSE
);

680 
	}
}

698 
	$OS_TmrCÃ
 (
OS_TMR
 *
p_tmr
)

700 
p_tmr
->
Sèã
 = 
OS_TMR_STATE_UNUSED
;

701 
p_tmr
->
Ty≥
 = 
OS_OBJ_TYPE_NONE
;

702 
p_tmr
->
NamePå
 = (
CPU_CHAR
 *)((*)"?TMR");

703 
p_tmr
->
Dly
 = (
OS_TICK
 )0;

704 
p_tmr
->
M©ch
 = (
OS_TICK
 )0;

705 
p_tmr
->
Remaö
 = (
OS_TICK
 )0;

706 
p_tmr
->
Pîiod
 = (
OS_TICK
 )0;

707 
p_tmr
->
O±
 = (
OS_OPT
 )0;

708 
p_tmr
->
CÆlbackPå
 = (
OS_TMR_CALLBACK_PTR
)0;

709 
p_tmr
->
CÆlbackPåArg
 = (*)0;

710 
p_tmr
->
NextPå
 = (
OS_TMR
 *)0;

711 
p_tmr
->
PªvPå
 = (
OS_TMR
 *)0;

712 
	}
}

730 #i‡
OS_CFG_DBG_EN
 > 0u

731 
	$OS_TmrDbgLi°Add
 (
OS_TMR
 *
p_tmr
)

733 
p_tmr
->
DbgPªvPå
 = (
OS_TMR
 *)0;

734 i‡(
OSTmrDbgLi°På
 =(
OS_TMR
 *)0) {

735 
p_tmr
->
DbgNextPå
 = (
OS_TMR
 *)0;

737 
p_tmr
->
DbgNextPå
 = 
OSTmrDbgLi°På
;

738 
OSTmrDbgLi°På
->
DbgPªvPå
 = 
p_tmr
;

740 
OSTmrDbgLi°På
 = 
p_tmr
;

741 
	}
}

745 
	$OS_TmrDbgLi°Remove
 (
OS_TMR
 *
p_tmr
)

747 
OS_TMR
 *
p_tmr_√xt
;

748 
OS_TMR
 *
p_tmr_¥ev
;

751 
p_tmr_¥ev
 = 
p_tmr
->
DbgPªvPå
;

752 
p_tmr_√xt
 = 
p_tmr
->
DbgNextPå
;

754 i‡(
p_tmr_¥ev
 =(
OS_TMR
 *)0) {

755 
OSTmrDbgLi°På
 = 
p_tmr_√xt
;

756 i‡(
p_tmr_√xt
 !(
OS_TMR
 *)0) {

757 
p_tmr_√xt
->
DbgPªvPå
 = (
OS_TMR
 *)0;

759 
p_tmr
->
DbgNextPå
 = (
OS_TMR
 *)0;

761 } i‡(
p_tmr_√xt
 =(
OS_TMR
 *)0) {

762 
p_tmr_¥ev
->
DbgNextPå
 = (
OS_TMR
 *)0;

763 
p_tmr
->
DbgPªvPå
 = (
OS_TMR
 *)0;

766 
p_tmr_¥ev
->
DbgNextPå
 = 
p_tmr_√xt
;

767 
p_tmr_√xt
->
DbgPªvPå
 = 
p_tmr_¥ev
;

768 
p_tmr
->
DbgNextPå
 = (
OS_TMR
 *)0;

769 
p_tmr
->
DbgPªvPå
 = (
OS_TMR
 *)0;

771 
	}
}

795 
	$OS_TmrInô
 (
OS_ERR
 *
p_îr
)

797 
OS_TMR_SPOKE_IX
 
i
;

798 
OS_TMR_SPOKE
 *
p_•oke
;

802 #ifde‡
OS_SAFETY_CRITICAL


803 i‡(
p_îr
 =(
OS_ERR
 *)0) {

804 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

809 #i‡
OS_CFG_DBG_EN
 > 0u

810 
OSTmrDbgLi°På
 = (
OS_TMR
 *)0;

813 i‡(
OSCfg_TmrTaskR©e_Hz
 > (
OS_RATE_HZ
)0) {

814 
OSTmrUpd©eC¡
 = 
OSCfg_TickR©e_Hz
 / 
OSCfg_TmrTaskR©e_Hz
;

816 
OSTmrUpd©eC¡
 = 
OSCfg_TickR©e_Hz
 / (
OS_RATE_HZ
)10;

818 
OSTmrUpd©eCå
 = 
OSTmrUpd©eC¡
;

820 
OSTmrTickCå
 = (
OS_TICK
)0;

822 
OSTmrTaskTimeMax
 = (
CPU_TS
)0;

824 
i
 = 0u; i < 
OSCfg_TmrWhìlSize
; i++) {

825 
p_•oke
 = &
OSCfg_TmrWhìl
[
i
];

826 
p_•oke
->
NbrE¡rõs
 = (
OS_OBJ_QTY
)0;

827 
p_•oke
->
NbrE¡rõsMax
 = (
OS_OBJ_QTY
)0;

828 
p_•oke
->
Fú°På
 = (
OS_TMR
 *)0;

832 i‡(
OSCfg_TmrTaskStkBa£På
 =(
CPU_STK
*)0) {

833 *
p_îr
 = 
OS_ERR_TMR_STK_INVALID
;

837 i‡(
OSCfg_TmrTaskStkSize
 < 
OSCfg_StkSizeMö
) {

838 *
p_îr
 = 
OS_ERR_TMR_STK_SIZE_INVALID
;

842 i‡(
OSCfg_TmrTaskPrio
 >(
OS_CFG_PRIO_MAX
 - 1u)) {

843 *
p_îr
 = 
OS_ERR_TMR_PRIO_INVALID
;

847 
	`OSTaskCª©e
((
OS_TCB
 *)&
OSTmrTaskTCB
,

848 (
CPU_CHAR
 *)((*)"uC/OS-III Timer Task"),

849 (
OS_TASK_PTR
 )
OS_TmrTask
,

851 (
OS_PRIO
 )
OSCfg_TmrTaskPrio
,

852 (
CPU_STK
 *)
OSCfg_TmrTaskStkBa£På
,

853 (
CPU_STK_SIZE
)
OSCfg_TmrTaskStkLimô
,

854 (
CPU_STK_SIZE
)
OSCfg_TmrTaskStkSize
,

855 (
OS_MSG_QTY
 )0,

856 (
OS_TICK
 )0,

858 (
OS_OPT
 )(
OS_OPT_TASK_STK_CHK
 | 
OS_OPT_TASK_STK_CLR
 | 
OS_OPT_TASK_NO_TLS
),

859 (
OS_ERR
 *)
p_îr
);

860 
	}
}

884 
	$OS_TmrLök
 (
OS_TMR
 *
p_tmr
,

885 
OS_OPT
 
›t
)

887 
OS_TMR_SPOKE
 *
p_•oke
;

888 
OS_TMR
 *
p_tmr0
;

889 
OS_TMR
 *
p_tmr1
;

890 
OS_TMR_SPOKE_IX
 
•oke
;

894 
p_tmr
->
Sèã
 = 
OS_TMR_STATE_RUNNING
;

895 i‡(
›t
 =
OS_OPT_LINK_PERIODIC
) {

896 
p_tmr
->
M©ch
 =Ö_tmr->
Pîiod
 + 
OSTmrTickCå
;

898 i‡(
p_tmr
->
Dly
 =(
OS_TICK
)0) {

899 
p_tmr
->
M©ch
 =Ö_tmr->
Pîiod
 + 
OSTmrTickCå
;

901 
p_tmr
->
M©ch
 =Ö_tmr->
Dly
 + 
OSTmrTickCå
;

904 
•oke
 = (
OS_TMR_SPOKE_IX
)(
p_tmr
->
M©ch
 % 
OSCfg_TmrWhìlSize
);

905 
p_•oke
 = &
OSCfg_TmrWhìl
[
•oke
];

907 i‡(
p_•oke
->
Fú°På
 =(
OS_TMR
 *)0) {

908 
p_tmr
->
NextPå
 = (
OS_TMR
 *)0;

909 
p_tmr
->
PªvPå
 = (
OS_TMR
 *)0;

910 
p_•oke
->
Fú°På
 = 
p_tmr
;

911 
p_•oke
->
NbrE¡rõs
 = 1u;

913 
p_tmr
->
Remaö
 =Ö_tmr->
M©ch


914 - 
OSTmrTickCå
;

915 
p_tmr1
 = 
p_•oke
->
Fú°På
;

916 
p_tmr1
 !(
OS_TMR
 *)0) {

917 
p_tmr1
->
Remaö
 =Ö_tmr1->
M©ch


918 - 
OSTmrTickCå
;

919 i‡(
p_tmr
->
Remaö
 > 
p_tmr1
->Remain) {

920 i‡(
p_tmr1
->
NextPå
 !(
OS_TMR
 *)0) {

921 
p_tmr1
 =Ö_tmr1->
NextPå
;

923 
p_tmr
->
NextPå
 = (
OS_TMR
 *)0;

924 
p_tmr
->
PªvPå
 = 
p_tmr1
;

925 
p_tmr1
->
NextPå
 = 
p_tmr
;

926 
p_tmr1
 = (
OS_TMR
 *)0;

929 i‡(
p_tmr1
->
PªvPå
 =(
OS_TMR
 *)0) {

930 
p_tmr
->
PªvPå
 = (
OS_TMR
 *)0;

931 
p_tmr
->
NextPå
 = 
p_tmr1
;

932 
p_tmr1
->
PªvPå
 = 
p_tmr
;

933 
p_•oke
->
Fú°På
 = 
p_tmr
;

935 
p_tmr0
 = 
p_tmr1
->
PªvPå
;

936 
p_tmr
->
PªvPå
 = 
p_tmr0
;

937 
p_tmr
->
NextPå
 = 
p_tmr1
;

938 
p_tmr0
->
NextPå
 = 
p_tmr
;

939 
p_tmr1
->
PªvPå
 = 
p_tmr
;

941 
p_tmr1
 = (
OS_TMR
 *)0;

944 
p_•oke
->
NbrE¡rõs
++;

946 i‡(
p_•oke
->
NbrE¡rõsMax
 <Ö_•oke->
NbrE¡rõs
) {

947 
p_•oke
->
NbrE¡rõsMax
 =Ö_•oke->
NbrE¡rõs
;

949 
	}
}

966 
	$OS_TmrRe£tPók
 ()

968 
OS_TMR_SPOKE
 *
p_•oke
;

969 
OS_TMR_SPOKE_IX
 
i
;

973 
i
 = 0u; i < 
OSCfg_TmrWhìlSize
; i++) {

974 
p_•oke
 = (
OS_TMR_SPOKE
 *)&
OSCfg_TmrWhìl
[
i
];

975 
p_•oke
->
NbrE¡rõsMax
 = (
OS_OBJ_QTY
 )0u;

977 
	}
}

995 
	$OS_TmrU∆ök
 (
OS_TMR
 *
p_tmr
)

997 
OS_TMR_SPOKE
 *
p_•oke
;

998 
OS_TMR
 *
p_tmr1
;

999 
OS_TMR
 *
p_tmr2
;

1000 
OS_TMR_SPOKE_IX
 
•oke
;

1004 
•oke
 = (
OS_TMR_SPOKE_IX
)(
p_tmr
->
M©ch
 % 
OSCfg_TmrWhìlSize
);

1005 
p_•oke
 = &
OSCfg_TmrWhìl
[
•oke
];

1007 i‡(
p_•oke
->
Fú°På
 =
p_tmr
) {

1008 
p_tmr1
 = (
OS_TMR
 *)
p_tmr
->
NextPå
;

1009 
p_•oke
->
Fú°På
 = (
OS_TMR
 *)
p_tmr1
;

1010 i‡(
p_tmr1
 !(
OS_TMR
 *)0) {

1011 
p_tmr1
->
PªvPå
 = (
OS_TMR
 *)0;

1014 
p_tmr1
 = (
OS_TMR
 *)
p_tmr
->
PªvPå
;

1015 
p_tmr2
 = (
OS_TMR
 *)
p_tmr
->
NextPå
;

1016 
p_tmr1
->
NextPå
 = 
p_tmr2
;

1017 i‡(
p_tmr2
 !(
OS_TMR
 *)0) {

1018 
p_tmr2
->
PªvPå
 = (
OS_TMR
 *)
p_tmr1
;

1021 
p_tmr
->
Sèã
 = 
OS_TMR_STATE_STOPPED
;

1022 
p_tmr
->
NextPå
 = (
OS_TMR
 *)0;

1023 
p_tmr
->
PªvPå
 = (
OS_TMR
 *)0;

1024 
p_•oke
->
NbrE¡rõs
--;

1025 
	}
}

1042 
	$OS_TmrTask
 (*
p_¨g
)

1044 
CPU_BOOLEAN
 
d⁄e
;

1045 
OS_ERR
 
îr
;

1046 
OS_TMR_CALLBACK_PTR
 
p_‚˘
;

1047 
OS_TMR_SPOKE
 *
p_•oke
;

1048 
OS_TMR
 *
p_tmr
;

1049 
OS_TMR
 *
p_tmr_√xt
;

1050 
OS_TMR_SPOKE_IX
 
•oke
;

1051 
CPU_TS
 
ts
;

1052 
CPU_TS
 
ts_°¨t
;

1053 
CPU_TS
 
ts_íd
;

1057 
p_¨g
 =Ö_arg;

1058 
DEF_ON
) {

1059 ()
	`OSTaskSemPíd
((
OS_TICK
 )0,

1060 (
OS_OPT
 )
OS_OPT_PEND_BLOCKING
,

1061 (
CPU_TS
 *)&
ts
,

1062 (
OS_ERR
 *)&
îr
);

1064 
	`OSSchedLock
(&
îr
);

1065 
ts_°¨t
 = 
	`OS_TS_GET
();

1066 
OSTmrTickCå
++;

1067 
•oke
 = (
OS_TMR_SPOKE_IX
)(
OSTmrTickCå
 % 
OSCfg_TmrWhìlSize
);

1068 
p_•oke
 = &
OSCfg_TmrWhìl
[
•oke
];

1069 
p_tmr
 = 
p_•oke
->
Fú°På
;

1070 
d⁄e
 = 
DEF_FALSE
;

1071 
d⁄e
 =
DEF_FALSE
) {

1072 i‡(
p_tmr
 !(
OS_TMR
 *)0) {

1073 
p_tmr_√xt
 = (
OS_TMR
 *)
p_tmr
->
NextPå
;

1075 i‡(
OSTmrTickCå
 =
p_tmr
->
M©ch
) {

1076 
	`OS_TmrU∆ök
(
p_tmr
);

1077 i‡(
p_tmr
->
O±
 =
OS_OPT_TMR_PERIODIC
) {

1078 
	`OS_TmrLök
(
p_tmr
,

1079 
OS_OPT_LINK_PERIODIC
);

1081 
p_tmr
->
Sèã
 = 
OS_TMR_STATE_COMPLETED
;

1083 
p_‚˘
 = 
p_tmr
->
CÆlbackPå
;

1084 i‡(
p_‚˘
 !(
OS_TMR_CALLBACK_PTR
)0) {

1085 (*
p_‚˘
)((*)
p_tmr
,

1086 
p_tmr
->
CÆlbackPåArg
);

1088 
p_tmr
 = 
p_tmr_√xt
;

1090 
d⁄e
 = 
DEF_TRUE
;

1093 
d⁄e
 = 
DEF_TRUE
;

1096 
ts_íd
 = 
	`OS_TS_GET
(Ë- 
ts_°¨t
;

1097 
	`OSSchedU∆ock
(&
îr
);

1098 i‡(
OSTmrTaskTimeMax
 < 
ts_íd
) {

1099 
OSTmrTaskTimeMax
 = 
ts_íd
;

1102 
	}
}

	@Source/os_type.h

31 #i‚de‡ 
OS_TYPE_H


32 
	#OS_TYPE_H


	)

34 #ifde‡ 
VSC_INCLUDE_H_FILE_NAMES


35 c⁄° 
CPU_CHAR
 *
	gos_ty≥__h
 = "$Id: $";

48 
CPU_INT16U
 
	tOS_CPU_USAGE
;

50 
CPU_INT32U
 
	tOS_CTR
;

52 
CPU_INT32U
 
	tOS_CTX_SW_CTR
;

54 
CPU_INT32U
 
	tOS_CYCLES
;

56 
CPU_INT32U
 
	tOS_FLAGS
;

58 
CPU_INT32U
 
	tOS_IDLE_CTR
;

60 
CPU_INT16U
 
	tOS_MEM_QTY
;

61 
CPU_INT16U
 
	tOS_MEM_SIZE
;

63 
CPU_INT16U
 
	tOS_MSG_QTY
;

64 
CPU_INT16U
 
	tOS_MSG_SIZE
;

66 
CPU_INT08U
 
	tOS_NESTING_CTR
;

68 
CPU_INT16U
 
	tOS_OBJ_QTY
;

69 
CPU_INT32U
 
	tOS_OBJ_TYPE
;

71 
CPU_INT16U
 
	tOS_OPT
;

73 
CPU_INT08U
 
	tOS_PRIO
;

75 
CPU_INT16U
 
	tOS_QTY
;

77 
CPU_INT32U
 
	tOS_RATE_HZ
;

79 
CPU_INT32U
 
	tOS_REG
;

80 
CPU_INT08U
 
	tOS_REG_ID
;

82 
CPU_INT32U
 
	tOS_SEM_CTR
;

84 
CPU_INT08U
 
	tOS_STATE
;

86 
CPU_INT08U
 
	tOS_STATUS
;

88 
CPU_INT32U
 
	tOS_TICK
;

89 
CPU_INT16U
 
	tOS_TICK_SPOKE_IX
;

91 
CPU_INT16U
 
	tOS_TMR_SPOKE_IX
;

	@Source/os_var.c

33 
	#OS_GLOBALS


	)

35 
	#MICRIUM_SOURCE


	)

36 
	~<os.h
>

38 #ifde‡
VSC_INCLUDE_SOURCE_FILE_NAMES


39 c⁄° 
CPU_CHAR
 *
	gos_v¨__c
 = "$Id: $";

	@TLS/CCES/os_tls.c

34 
	#MICRIUM_SOURCE


	)

35 
	~<os.h
>

37 #ifde‡
VSC_INCLUDE_SOURCE_FILE_NAMES


38 c⁄° 
CPU_CHAR
 *
	gos_és__c
 = "$Id: $";

41 #i‡
deföed
(
OS_CFG_TLS_TBL_SIZE
) && (OS_CFG_TLS_TBL_SIZE > 0u)

48 
CPU_DATA
 
	gOS_TLS_NextAvaûID
;

49 
OS_TLS_DESTRUCT_PTR
 
	gOS_TLS_De°ru˘PåTbl
[
OS_CFG_TLS_TBL_SIZE
];

68 
OS_TLS_ID
 
	$OS_TLS_GëID
 (
OS_ERR
 *
p_îr
)

70 
OS_TLS_ID
 
id
;

71 
	`CPU_SR_ALLOC
();

75 #ifde‡
OS_SAFETY_CRITICAL


76 i‡(
p_îr
 =(
OS_ERR
 *)0) {

77 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

78  ((
OS_TLS_ID
)
OS_CFG_TLS_TBL_SIZE
);

82 
	`CPU_CRITICAL_ENTER
();

83 i‡(
OS_TLS_NextAvaûID
 >
OS_CFG_TLS_TBL_SIZE
) {

84 *
p_îr
 = 
OS_ERR_TLS_NO_MORE_AVAIL
;

85 
	`CPU_CRITICAL_EXIT
();

86  ((
OS_TLS_ID
)
OS_CFG_TLS_TBL_SIZE
);

89 
id
 = 
OS_TLS_NextAvaûID
;

90 
OS_TLS_NextAvaûID
++;

91 
	`CPU_CRITICAL_EXIT
();

92 *
p_îr
 = 
OS_ERR_NONE
;

93  (
id
);

94 
	}
}

126 
OS_TLS
 
	$OS_TLS_GëVÆue
 (
OS_TCB
 *
p_tcb
,

127 
OS_TLS_ID
 
id
,

128 
OS_ERR
 *
p_îr
)

130 
OS_TLS
 
vÆue
;

131 
	`CPU_SR_ALLOC
();

135 #ifde‡
OS_SAFETY_CRITICAL


136 i‡(
p_îr
 =(
OS_ERR
 *)0) {

137 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

138  ((
OS_TLS
)0);

143 #i‡
OS_CFG_ARG_CHK_EN
 > 0u

144 i‡(
id
 >
OS_TLS_NextAvaûID
) {

145 *
p_îr
 = 
OS_ERR_TLS_ID_INVALID
;

146  ((
OS_TLS
)0);

150 
	`CPU_CRITICAL_ENTER
();

151 i‡(
p_tcb
 =(
OS_TCB
 *)0) {

152 
p_tcb
 = 
OSTCBCurPå
;

153 i‡(
OSTCBCurPå
 =(
OS_TCB
 *)0) {

154 
	`CPU_CRITICAL_EXIT
();

155 *
p_îr
 = 
OS_ERR_OS_NOT_RUNNING
;

156  ((
OS_TLS
)0);

159 i‡((
p_tcb
->
O±
 & 
OS_OPT_TASK_NO_TLS
Ë=
OS_OPT_NONE
) {

160 
vÆue
 = 
p_tcb
->
TLS_Tbl
[
id
];

161 
	`CPU_CRITICAL_EXIT
();

162 *
p_îr
 = 
OS_ERR_NONE
;

163  ((
OS_TLS
)
vÆue
);

165 
	`CPU_CRITICAL_EXIT
();

166 *
p_îr
 = 
OS_ERR_TLS_NOT_EN
;

167  ((
OS_TLS
)0);

169 
	}
}

206 
	$OS_TLS_SëDe°ru˘
 (
OS_TLS_ID
 
id
,

207 
OS_TLS_DESTRUCT_PTR
 
p_de°ru˘
,

208 
OS_ERR
 *
p_îr
)

210 
	`CPU_SR_ALLOC
();

213 #ifde‡
OS_SAFETY_CRITICAL


214 i‡(
p_îr
 =(
OS_ERR
 *)0) {

215 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

220 i‡(
id
 >
OS_TLS_NextAvaûID
) {

221 *
p_îr
 = 
OS_ERR_TLS_ID_INVALID
;

225 i‡(
OS_TLS_De°ru˘PåTbl
[
id
] !(
OS_TLS_DESTRUCT_PTR
)0) {

226 *
p_îr
 = 
OS_ERR_TLS_DESTRUCT_ASSIGNED
;

230 
	`CPU_CRITICAL_ENTER
();

231 
OS_TLS_De°ru˘PåTbl
[
id
] = 
p_de°ru˘
;

232 
	`CPU_CRITICAL_EXIT
();

233 *
p_îr
 = 
OS_ERR_NONE
;

234 
	}
}

268 
	$OS_TLS_SëVÆue
 (
OS_TCB
 *
p_tcb
,

269 
OS_TLS_ID
 
id
,

270 
OS_TLS
 
vÆue
,

271 
OS_ERR
 *
p_îr
)

273 
	`CPU_SR_ALLOC
();

277 #ifde‡
OS_SAFETY_CRITICAL


278 i‡(
p_îr
 =(
OS_ERR
 *)0) {

279 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

284 #i‡
OS_CFG_ARG_CHK_EN
 > 0u

285 i‡(
id
 >
OS_TLS_NextAvaûID
) {

286 *
p_îr
 = 
OS_ERR_TLS_ID_INVALID
;

291 
	`CPU_CRITICAL_ENTER
();

292 i‡(
p_tcb
 =(
OS_TCB
 *)0) {

293 
p_tcb
 = 
OSTCBCurPå
;

294 i‡(
OSTCBCurPå
 =(
OS_TCB
 *)0) {

295 
	`CPU_CRITICAL_EXIT
();

296 *
p_îr
 = 
OS_ERR_OS_NOT_RUNNING
;

300 i‡((
p_tcb
->
O±
 & 
OS_OPT_TASK_NO_TLS
Ë=
OS_OPT_NONE
) {

301 
p_tcb
->
TLS_Tbl
[
id
] = 
vÆue
;

302 
	`CPU_CRITICAL_EXIT
();

303 *
p_îr
 = 
OS_ERR_NONE
;

305 
	`CPU_CRITICAL_EXIT
();

306 *
p_îr
 = 
OS_ERR_TLS_NOT_EN
;

308 
	}
}

340 
	$OS_TLS_Inô
 (
OS_ERR
 *
p_îr
)

342 
OS_TLS_ID
 
i
;

346 
OS_TLS_NextAvaûID
 = 0u;

348 
i
 = 0u; i < 
OS_CFG_TLS_TBL_SIZE
; i++) {

349 
OS_TLS_De°ru˘PåTbl
[
i
] = (
OS_TLS_DESTRUCT_PTR
)0;

351 *
p_îr
 = 
OS_ERR_NONE
;

352 
	}
}

372 
	$OS_TLS_TaskCª©e
 (
OS_TCB
 *
p_tcb
)

374 ()&
p_tcb
;

375 
	}
}

392 
	$OS_TLS_TaskDñ
 (
OS_TCB
 *
p_tcb
)

394 
OS_TLS_ID
 
id
;

395 
OS_TLS_DESTRUCT_PTR
 *
p_tbl
;

398 
id
 = 0; id < 
OS_TLS_NextAvaûID
; id++) {

399 
p_tbl
 = &
OS_TLS_De°ru˘PåTbl
[
id
];

400 i‡(*
p_tbl
 !(
OS_TLS_DESTRUCT_PTR
)0) {

401 (*
p_tbl
)(
p_tcb
, 
id
,Ö_tcb->
TLS_Tbl
[id]);

404 
	}
}

424 
	$OS_TLS_TaskSw
 ()

426 
	}
}

	@TLS/IAR/os_tls.c

34 
	#MICRIUM_SOURCE


	)

35 
	~<os.h
>

36 
	~<yvÆs.h
>

37 
	~<°döt.h
>

40 #ifde‡
VSC_INCLUDE_SOURCE_FILE_NAMES


41 c⁄° 
CPU_CHAR
 *
	gos_és__c
 = "$Id: $";

44 #i‡
deföed
(
OS_CFG_TLS_TBL_SIZE
) && (OS_CFG_TLS_TBL_SIZE > 0u)

52 #i‡ (
_DLIB_FILE_DESCRIPTOR
 > 0Ë&& (
_FILE_OP_LOCKS
 > 0)

53 
	#OS_TLS_LOCK_MAX
 ((
_MAX_LOCK
Ë+ (
_FOPEN_MAX
)Ë

	)

55 
	#OS_TLS_LOCK_MAX
 (
_MAX_LOCK
)

	)

64 
os_és_lock
 
	tOS_TLS_LOCK
;

67 
	sos_és_lock
 {

68 
OS_MUTEX
 
	mMuãx
;

69 
OS_TLS_LOCK
 *
	mNextPå
;

78 
CPU_DATA
 
	gOS_TLS_NextAvaûID
;

80 
CPU_DATA
 
	gOS_TLS_LibID
;

82 
OS_TLS_LOCK
 
	gOS_TLS_LockPoﬁTbl
[
OS_TLS_LOCK_MAX
];

83 
OS_TLS_LOCK
 *
	gOS_TLS_LockPoﬁLi°På
 = (OS_TLS_LOCK *)0;

91 
OS_TLS_LockCª©e
 (**
p_lock
);

92 
OS_TLS_LockDñ
 (*
p_lock
);

93 
OS_TLS_LockAcquúe
 (*
p_lock
);

94 
OS_TLS_LockRñó£
 (*
p_lock
);

115 
OS_TLS_ID
 
	$OS_TLS_GëID
 (
OS_ERR
 *
p_îr
)

117 
OS_TLS_ID
 
id
;

118 
	`CPU_SR_ALLOC
();

122 #ifde‡
OS_SAFETY_CRITICAL


123 i‡(
p_îr
 =(
OS_ERR
 *)0) {

124 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

125  ((
OS_TLS_ID
)
OS_CFG_TLS_TBL_SIZE
);

129 
	`CPU_CRITICAL_ENTER
();

130 i‡(
OS_TLS_NextAvaûID
 >
OS_CFG_TLS_TBL_SIZE
) {

131 *
p_îr
 = 
OS_ERR_TLS_NO_MORE_AVAIL
;

132 
	`CPU_CRITICAL_EXIT
();

133  ((
OS_TLS_ID
)
OS_CFG_TLS_TBL_SIZE
);

136 
id
 = 
OS_TLS_NextAvaûID
;

137 
OS_TLS_NextAvaûID
++;

138 
	`CPU_CRITICAL_EXIT
();

139 *
p_îr
 = 
OS_ERR_NONE
;

140  (
id
);

141 
	}
}

173 
OS_TLS
 
	$OS_TLS_GëVÆue
 (
OS_TCB
 *
p_tcb
,

174 
OS_TLS_ID
 
id
,

175 
OS_ERR
 *
p_îr
)

177 
OS_TLS
 
vÆue
;

178 
	`CPU_SR_ALLOC
();

182 #ifde‡
OS_SAFETY_CRITICAL


183 i‡(
p_îr
 =(
OS_ERR
 *)0) {

184 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

185  ((
OS_TLS
)0);

190 #i‡
OS_CFG_ARG_CHK_EN
 > 0u

191 i‡(
id
 >
OS_TLS_NextAvaûID
) {

192 *
p_îr
 = 
OS_ERR_TLS_ID_INVALID
;

193  ((
OS_TLS
)0);

197 
	`CPU_CRITICAL_ENTER
();

198 i‡(
p_tcb
 =(
OS_TCB
 *)0) {

199 
p_tcb
 = 
OSTCBCurPå
;

200 i‡(
OSTCBCurPå
 =(
OS_TCB
 *)0) {

201 
	`CPU_CRITICAL_EXIT
();

202 *
p_îr
 = 
OS_ERR_OS_NOT_RUNNING
;

203  ((
OS_TLS
)0);

206 i‡((
p_tcb
->
O±
 & 
OS_OPT_TASK_NO_TLS
Ë=
OS_OPT_NONE
) {

207 
vÆue
 = 
p_tcb
->
TLS_Tbl
[
id
];

208 
	`CPU_CRITICAL_EXIT
();

209 *
p_îr
 = 
OS_ERR_NONE
;

210  ((
OS_TLS
)
vÆue
);

212 
	`CPU_CRITICAL_EXIT
();

213 *
p_îr
 = 
OS_ERR_TLS_NOT_EN
;

214  ((
OS_TLS
)0);

216 
	}
}

252 
	$OS_TLS_SëDe°ru˘
 (
OS_TLS_ID
 
id
,

253 
OS_TLS_DESTRUCT_PTR
 
p_de°ru˘
,

254 
OS_ERR
 *
p_îr
)

256 ()&
id
;

257 ()&
p_de°ru˘
;

258 *
p_îr
 = 
OS_ERR_NONE
;

259 
	}
}

293 
	$OS_TLS_SëVÆue
 (
OS_TCB
 *
p_tcb
,

294 
OS_TLS_ID
 
id
,

295 
OS_TLS
 
vÆue
,

296 
OS_ERR
 *
p_îr
)

298 
	`CPU_SR_ALLOC
();

302 #ifde‡
OS_SAFETY_CRITICAL


303 i‡(
p_îr
 =(
OS_ERR
 *)0) {

304 
	`OS_SAFETY_CRITICAL_EXCEPTION
();

309 #i‡
OS_CFG_ARG_CHK_EN
 > 0u

310 i‡(
id
 >
OS_TLS_NextAvaûID
) {

311 *
p_îr
 = 
OS_ERR_TLS_ID_INVALID
;

316 
	`CPU_CRITICAL_ENTER
();

317 i‡(
p_tcb
 =(
OS_TCB
 *)0) {

318 
p_tcb
 = 
OSTCBCurPå
;

319 i‡(
OSTCBCurPå
 =(
OS_TCB
 *)0) {

320 
	`CPU_CRITICAL_EXIT
();

321 *
p_îr
 = 
OS_ERR_OS_NOT_RUNNING
;

325 i‡((
p_tcb
->
O±
 & 
OS_OPT_TASK_NO_TLS
Ë=
OS_OPT_NONE
) {

326 
p_tcb
->
TLS_Tbl
[
id
] = 
vÆue
;

327 
	`CPU_CRITICAL_EXIT
();

328 *
p_îr
 = 
OS_ERR_NONE
;

330 
	`CPU_CRITICAL_EXIT
();

331 *
p_îr
 = 
OS_ERR_TLS_NOT_EN
;

333 
	}
}

365 
	$OS_TLS_Inô
 (
OS_ERR
 *
p_îr
)

367 
CPU_INT16U
 
ix
;

368 
OS_TLS_LOCK
 *
p_lock
;

369 
	`CPU_SR_ALLOC
();

373 
OS_TLS_NextAvaûID
 = 0u;

374 
OS_TLS_LibID
 = 
	`OS_TLS_GëID
(
p_îr
);

376 
	`CPU_CRITICAL_ENTER
();

378 
ix
 = 0u; ix < (
OS_TLS_LOCK_MAX
 - 1u); ix++) {

379 
p_lock
 = &
OS_TLS_LockPoﬁTbl
[
ix
];

380 
p_lock
->
NextPå
 = &
OS_TLS_LockPoﬁTbl
[
ix
 + 1u];

383 
p_lock
 = &
OS_TLS_LockPoﬁTbl
[
OS_TLS_LOCK_MAX
 - 1u];

384 
p_lock
->
NextPå
 = (
OS_TLS_LOCK
 *)0;

386 
OS_TLS_LockPoﬁLi°På
 = &
OS_TLS_LockPoﬁTbl
[0];

388 
	`CPU_CRITICAL_EXIT
();

389 
	}
}

410 
	$OS_TLS_TaskCª©e
 (
OS_TCB
 *
p_tcb
)

412 
OS_TLS
 
p_és
;

415 i‡((
p_tcb
->
O±
 & 
OS_OPT_TASK_NO_TLS
Ë=
OS_OPT_NONE
) {

417 
p_és
 = (
OS_TLS
)
	`__ür_dlib_≥πhªad_Æloˇã
();

418 
	`__ür_dlib_≥πhªad_öôülize
(
p_és
);

419 
p_tcb
->
TLS_Tbl
[
OS_TLS_LibID
] = 
p_és
;

421 
	}
}

438 
	$OS_TLS_TaskDñ
 (
OS_TCB
 *
p_tcb
)

440 
OS_TLS
 
p_és
;

443 i‡((
p_tcb
->
O±
 & 
OS_OPT_TASK_NO_TLS
Ë=
OS_OPT_NONE
) {

444 
p_és
 = 
p_tcb
->
TLS_Tbl
[
OS_TLS_LibID
];

445 
	`__ür_dlib_≥πhªad_de°roy
();

446 
	`__ür_dlib_≥πhªad_dóŒoˇã
((*)
p_és
);

447 
p_tcb
->
TLS_Tbl
[
OS_TLS_LibID
] = (
OS_TLS
)0;

449 
	}
}

469 
	$OS_TLS_TaskSw
 ()

471 i‡((
OSTCBHighRdyPå
->
O±
 & 
OS_OPT_TASK_NO_TLS
Ë=
OS_OPT_NONE
) {

473 
	}
}

501 
	$OS_TLS_LockCª©e
 (**
p_lock
)

503 
OS_TLS_LOCK
 *
p_és_lock
;

504 
OS_ERR
 
os_îr
;

505 
	`CPU_SR_ALLOC
();

508 i‡(
p_lock
 == (**)0) {

512 i‡(
OS_TLS_LockPoﬁLi°På
 =(
OS_TLS_LOCK
 *)0) {

513 *
p_lock
 = (*)0;

517 
p_és_lock
 = 
OS_TLS_LockPoﬁLi°På
;

519 
	`OSMuãxCª©e
((
OS_MUTEX
 *)&
p_és_lock
->
Muãx
,

520 (
CPU_CHAR
 *) 0,

521 (
OS_ERR
 *)&
os_îr
);

523 i‡(
os_îr
 !
OS_ERR_NONE
) {

524 *
p_lock
 = (*)0;

528 
	`CPU_CRITICAL_ENTER
();

529 
OS_TLS_LockPoﬁLi°På
 = 
p_és_lock
->
NextPå
;

530 
	`CPU_CRITICAL_EXIT
();

532 *
p_lock
 = (*)
p_és_lock
;

533 
	}
}

554 
	$OS_TLS_LockDñ
 (*
p_lock
)

556 
OS_TLS_LOCK
 *
p_és_lock
;

557 
OS_ERR
 
os_îr
;

558 
	`CPU_SR_ALLOC
();

561 i‡(
p_lock
 == (*)0) {

565 
p_és_lock
 = (
OS_TLS_LOCK
 *)
p_lock
;

567 ()
	`OSMuãxDñ
((
OS_MUTEX
 *)&
p_és_lock
->
Muãx
,

568 (
OS_OPT
 ) 
OS_OPT_DEL_ALWAYS
,

569 (
OS_ERR
 *)&
os_îr
);

570 ()&
os_îr
;

572 
	`CPU_CRITICAL_ENTER
();

574 i‡(
OS_TLS_LockPoﬁLi°På
 =(
OS_TLS_LOCK
 *)0) {

575 
p_és_lock
->
NextPå
 = (
OS_TLS_LOCK
 *)0;

577 
p_és_lock
->
NextPå
 = 
OS_TLS_LockPoﬁLi°På
;

579 
OS_TLS_LockPoﬁLi°På
 = 
p_és_lock
;

581 
	`CPU_CRITICAL_EXIT
();

582 
	}
}

602 
	$OS_TLS_LockAcquúe
 (*
p_lock
)

604 
OS_TLS_LOCK
 *
p_és_lock
;

605 
OS_ERR
 
os_îr
;

608 i‡((
p_lock
 == (*)0 ) ||

609 (
OSRu¬ög
 !
OS_STATE_OS_RUNNING
)) {

613 
p_és_lock
 = (
OS_TLS_LOCK
 *)
p_lock
;

614 
	`OSMuãxPíd
((
OS_MUTEX
 *)&
p_és_lock
->
Muãx
,

615 (
OS_TICK
 ) 0u,

616 (
OS_OPT
 ) 
OS_OPT_PEND_BLOCKING
,

617 (
CPU_TS
 *) 0,

618 (
OS_ERR
 *)&
os_îr
);

619 ()&
os_îr
;

620 
	}
}

640 
	$OS_TLS_LockRñó£
 (*
p_lock
)

642 
OS_TLS_LOCK
 *
p_és_lock
;

643 
OS_ERR
 
os_îr
;

646 i‡((
p_lock
 == (*)0 ) ||

647 (
OSRu¬ög
 !
OS_STATE_OS_RUNNING
)) {

651 
p_és_lock
 = (
OS_TLS_LOCK
 *)
p_lock
;

652 
	`OSMuãxPo°
((
OS_MUTEX
 *)&
p_és_lock
->
Muãx
,

653 (
OS_OPT
 ) 
OS_OPT_POST_NONE
,

654 (
OS_ERR
 *)&
os_îr
);

656 ()&
os_îr
;

657 
	}
}

660 
_STD_BEGIN


681 
	$__ür_sy°em_Mtxöô
 (
__ür_Rmtx
 *
p_lock
)

683 
	`OS_TLS_LockCª©e
((**)
p_lock
);

684 
	}
}

699 
	$__ür_sy°em_Mtxd°
(
__ür_Rmtx
 *
p_lock
)

701 
	`OS_TLS_LockDñ
((*)*
p_lock
);

702 
	}
}

717 
	$__ür_sy°em_Mtxlock
(
__ür_Rmtx
 *
p_lock
)

719 
	`OS_TLS_LockAcquúe
((*)*
p_lock
);

720 
	}
}

735 
	$__ür_sy°em_Mtxu∆ock
(
__ür_Rmtx
 *
p_lock
)

737 
	`OS_TLS_LockRñó£
((*)*
p_lock
);

738 
	}
}

753 
	$__ür_fûe_Mtxöô
 (
__ür_Rmtx
 *
p_lock
)

755 
	`OS_TLS_LockCª©e
((**)
p_lock
);

756 
	}
}

771 
	$__ür_fûe_Mtxd°
(
__ür_Rmtx
 *
p_lock
)

773 
	`OS_TLS_LockDñ
((*)*
p_lock
);

774 
	}
}

789 
	$__ür_fûe_Mtxlock
(
__ür_Rmtx
 *
p_lock
)

791 
	`OS_TLS_LockAcquúe
((*)*
p_lock
);

792 
	}
}

807 
	$__ür_fûe_Mtxu∆ock
(
__ür_Rmtx
 *
p_lock
)

809 
	`OS_TLS_LockRñó£
((*)*
p_lock
);

810 
	}
}

828 
_DLIB_TLS_MEMORY
 *
	$__ür_dlib_≥πhªad_ac˚ss
 (
_DLIB_TLS_MEMORY
 *
symbp
)

830 
_DLIB_TLS_MEMORY
 *
p_és
;

831 
uöçå_t
 
és_°¨t
;

832 
uöçå_t
 
és_off£t
;

836 i‡(
OSRu¬ög
 !
OS_STATE_OS_RUNNING
) {

837 
p_és
 = (
OS_TLS
)
	`__£gmít_begö
("__DLIB_PERTHREAD");

839 
p_és
 = (*)
OSTCBCurPå
->
TLS_Tbl
[
OS_TLS_LibID
];

842 
és_°¨t
 = (
uöçå_t
)(
p_és
);

843 
és_off£t
 = (
uöçå_t
)(
	`__IAR_DLIB_PERTHREAD_SYMBOL_OFFSET
(
symbp
));

844 
p_és
 = (
_DLIB_TLS_MEMORY
 *)(
és_°¨t
 + 
és_off£t
);

846  (
p_és
);

847 
	}
}

849 
	g_STD_END


	@
1
.
0
26
474
Cfg/Template/os_app_hooks.c
Cfg/Template/os_app_hooks.h
Cfg/Template/os_cfg.h
Cfg/Template/os_cfg_app.h
Source/os.h
Source/os_cfg_app.c
Source/os_core.c
Source/os_dbg.c
Source/os_flag.c
Source/os_int.c
Source/os_mem.c
Source/os_msg.c
Source/os_mutex.c
Source/os_pend_multi.c
Source/os_prio.c
Source/os_q.c
Source/os_sem.c
Source/os_stat.c
Source/os_task.c
Source/os_tick.c
Source/os_time.c
Source/os_tmr.c
Source/os_type.h
Source/os_var.c
TLS/CCES/os_tls.c
TLS/IAR/os_tls.c
